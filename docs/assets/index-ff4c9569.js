(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))n(o);new MutationObserver(o=>{for(const l of o)if(l.type==="childList")for(const r of l.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&n(r)}).observe(document,{childList:!0,subtree:!0});function s(o){const l={};return o.integrity&&(l.integrity=o.integrity),o.referrerpolicy&&(l.referrerPolicy=o.referrerpolicy),o.crossorigin==="use-credentials"?l.credentials="include":o.crossorigin==="anonymous"?l.credentials="omit":l.credentials="same-origin",l}function n(o){if(o.ep)return;o.ep=!0;const l=s(o);fetch(o.href,l)}})();function Ns(e,t){const s=Object.create(null),n=e.split(",");for(let o=0;o<n.length;o++)s[n[o]]=!0;return t?o=>!!s[o.toLowerCase()]:o=>!!s[o]}function Js(e){if(R(e)){const t={};for(let s=0;s<e.length;s++){const n=e[s],o=te(n)?Yo(n):Js(n);if(o)for(const l in o)t[l]=o[l]}return t}else{if(te(e))return e;if(K(e))return e}}const Vo=/;(?![^(]*\))/g,Go=/:([^]+)/,Qo=/\/\*.*?\*\//gs;function Yo(e){const t={};return e.replace(Qo,"").split(Vo).forEach(s=>{if(s){const n=s.split(Go);n.length>1&&(t[n[0].trim()]=n[1].trim())}}),t}function it(e){let t="";if(te(e))t=e;else if(R(e))for(let s=0;s<e.length;s++){const n=it(e[s]);n&&(t+=n+" ")}else if(K(e))for(const s in e)e[s]&&(t+=s+" ");return t.trim()}const Zo="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",el=Ns(Zo);function Qn(e){return!!e||e===""}function tl(e,t){if(e.length!==t.length)return!1;let s=!0;for(let n=0;s&&n<e.length;n++)s=es(e[n],t[n]);return s}function es(e,t){if(e===t)return!0;let s=bn(e),n=bn(t);if(s||n)return s&&n?e.getTime()===t.getTime():!1;if(s=Pt(e),n=Pt(t),s||n)return e===t;if(s=R(e),n=R(t),s||n)return s&&n?tl(e,t):!1;if(s=K(e),n=K(t),s||n){if(!s||!n)return!1;const o=Object.keys(e).length,l=Object.keys(t).length;if(o!==l)return!1;for(const r in e){const a=e.hasOwnProperty(r),c=t.hasOwnProperty(r);if(a&&!c||!a&&c||!es(e[r],t[r]))return!1}}return String(e)===String(t)}function sl(e,t){return e.findIndex(s=>es(s,t))}const nl=e=>te(e)?e:e==null?"":R(e)||K(e)&&(e.toString===eo||!L(e.toString))?JSON.stringify(e,Yn,2):String(e),Yn=(e,t)=>t&&t.__v_isRef?Yn(e,t.value):dt(t)?{[`Map(${t.size})`]:[...t.entries()].reduce((s,[n,o])=>(s[`${n} =>`]=o,s),{})}:ss(t)?{[`Set(${t.size})`]:[...t.values()]}:K(t)&&!R(t)&&!to(t)?String(t):t,W={},ct=[],Pe=()=>{},ol=()=>!1,ll=/^on[^a-z]/,ts=e=>ll.test(e),zs=e=>e.startsWith("onUpdate:"),le=Object.assign,Us=(e,t)=>{const s=e.indexOf(t);s>-1&&e.splice(s,1)},rl=Object.prototype.hasOwnProperty,F=(e,t)=>rl.call(e,t),R=Array.isArray,dt=e=>Et(e)==="[object Map]",ss=e=>Et(e)==="[object Set]",bn=e=>Et(e)==="[object Date]",L=e=>typeof e=="function",te=e=>typeof e=="string",Pt=e=>typeof e=="symbol",K=e=>e!==null&&typeof e=="object",Zn=e=>K(e)&&L(e.then)&&L(e.catch),eo=Object.prototype.toString,Et=e=>eo.call(e),al=e=>Et(e).slice(8,-1),to=e=>Et(e)==="[object Object]",Xs=e=>te(e)&&e!=="NaN"&&e[0]!=="-"&&""+parseInt(e,10)===e,Mt=Ns(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),ns=e=>{const t=Object.create(null);return s=>t[s]||(t[s]=e(s))},il=/-(\w)/g,Re=ns(e=>e.replace(il,(t,s)=>s?s.toUpperCase():"")),cl=/\B([A-Z])/g,ht=ns(e=>e.replace(cl,"-$1").toLowerCase()),os=ns(e=>e.charAt(0).toUpperCase()+e.slice(1)),_s=ns(e=>e?`on${os(e)}`:""),Ut=(e,t)=>!Object.is(e,t),Ft=(e,t)=>{for(let s=0;s<e.length;s++)e[s](t)},Xt=(e,t,s)=>{Object.defineProperty(e,t,{configurable:!0,enumerable:!1,value:s})},Wt=e=>{const t=parseFloat(e);return isNaN(t)?e:t};let wn;const dl=()=>wn||(wn=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:{});let ve;class pl{constructor(t=!1){this.detached=t,this._active=!0,this.effects=[],this.cleanups=[],this.parent=ve,!t&&ve&&(this.index=(ve.scopes||(ve.scopes=[])).push(this)-1)}get active(){return this._active}run(t){if(this._active){const s=ve;try{return ve=this,t()}finally{ve=s}}}on(){ve=this}off(){ve=this.parent}stop(t){if(this._active){let s,n;for(s=0,n=this.effects.length;s<n;s++)this.effects[s].stop();for(s=0,n=this.cleanups.length;s<n;s++)this.cleanups[s]();if(this.scopes)for(s=0,n=this.scopes.length;s<n;s++)this.scopes[s].stop(!0);if(!this.detached&&this.parent&&!t){const o=this.parent.scopes.pop();o&&o!==this&&(this.parent.scopes[this.index]=o,o.index=this.index)}this.parent=void 0,this._active=!1}}}function ul(e,t=ve){t&&t.active&&t.effects.push(e)}function fl(){return ve}const Ws=e=>{const t=new Set(e);return t.w=0,t.n=0,t},so=e=>(e.w&ze)>0,no=e=>(e.n&ze)>0,hl=({deps:e})=>{if(e.length)for(let t=0;t<e.length;t++)e[t].w|=ze},yl=e=>{const{deps:t}=e;if(t.length){let s=0;for(let n=0;n<t.length;n++){const o=t[n];so(o)&&!no(o)?o.delete(e):t[s++]=o,o.w&=~ze,o.n&=~ze}t.length=s}},Ss=new WeakMap;let bt=0,ze=1;const Ts=30;let we;const st=Symbol(""),Cs=Symbol("");class Ks{constructor(t,s=null,n){this.fn=t,this.scheduler=s,this.active=!0,this.deps=[],this.parent=void 0,ul(this,n)}run(){if(!this.active)return this.fn();let t=we,s=Ne;for(;t;){if(t===this)return;t=t.parent}try{return this.parent=we,we=this,Ne=!0,ze=1<<++bt,bt<=Ts?hl(this):$n(this),this.fn()}finally{bt<=Ts&&yl(this),ze=1<<--bt,we=this.parent,Ne=s,this.parent=void 0,this.deferStop&&this.stop()}}stop(){we===this?this.deferStop=!0:this.active&&($n(this),this.onStop&&this.onStop(),this.active=!1)}}function $n(e){const{deps:t}=e;if(t.length){for(let s=0;s<t.length;s++)t[s].delete(e);t.length=0}}let Ne=!0;const oo=[];function yt(){oo.push(Ne),Ne=!1}function mt(){const e=oo.pop();Ne=e===void 0?!0:e}function pe(e,t,s){if(Ne&&we){let n=Ss.get(e);n||Ss.set(e,n=new Map);let o=n.get(s);o||n.set(s,o=Ws()),lo(o)}}function lo(e,t){let s=!1;bt<=Ts?no(e)||(e.n|=ze,s=!so(e)):s=!e.has(we),s&&(e.add(we),we.deps.push(e))}function Ie(e,t,s,n,o,l){const r=Ss.get(e);if(!r)return;let a=[];if(t==="clear")a=[...r.values()];else if(s==="length"&&R(e)){const c=Number(n);r.forEach((f,g)=>{(g==="length"||g>=c)&&a.push(f)})}else switch(s!==void 0&&a.push(r.get(s)),t){case"add":R(e)?Xs(s)&&a.push(r.get("length")):(a.push(r.get(st)),dt(e)&&a.push(r.get(Cs)));break;case"delete":R(e)||(a.push(r.get(st)),dt(e)&&a.push(r.get(Cs)));break;case"set":dt(e)&&a.push(r.get(st));break}if(a.length===1)a[0]&&Es(a[0]);else{const c=[];for(const f of a)f&&c.push(...f);Es(Ws(c))}}function Es(e,t){const s=R(e)?e:[...e];for(const n of s)n.computed&&Pn(n);for(const n of s)n.computed||Pn(n)}function Pn(e,t){(e!==we||e.allowRecurse)&&(e.scheduler?e.scheduler():e.run())}const ml=Ns("__proto__,__v_isRef,__isVue"),ro=new Set(Object.getOwnPropertyNames(Symbol).filter(e=>e!=="arguments"&&e!=="caller").map(e=>Symbol[e]).filter(Pt)),gl=Vs(),_l=Vs(!1,!0),vl=Vs(!0),qn=bl();function bl(){const e={};return["includes","indexOf","lastIndexOf"].forEach(t=>{e[t]=function(...s){const n=H(this);for(let l=0,r=this.length;l<r;l++)pe(n,"get",l+"");const o=n[t](...s);return o===-1||o===!1?n[t](...s.map(H)):o}}),["push","pop","shift","unshift","splice"].forEach(t=>{e[t]=function(...s){yt();const n=H(this)[t].apply(this,s);return mt(),n}}),e}function wl(e){const t=H(this);return pe(t,"has",e),t.hasOwnProperty(e)}function Vs(e=!1,t=!1){return function(n,o,l){if(o==="__v_isReactive")return!e;if(o==="__v_isReadonly")return e;if(o==="__v_isShallow")return t;if(o==="__v_raw"&&l===(e?t?Il:uo:t?po:co).get(n))return n;const r=R(n);if(!e){if(r&&F(qn,o))return Reflect.get(qn,o,l);if(o==="hasOwnProperty")return wl}const a=Reflect.get(n,o,l);return(Pt(o)?ro.has(o):ml(o))||(e||pe(n,"get",o),t)?a:ie(a)?r&&Xs(o)?a:a.value:K(a)?e?fo(a):Ys(a):a}}const $l=ao(),Pl=ao(!0);function ao(e=!1){return function(s,n,o,l){let r=s[n];if(qt(r)&&ie(r)&&!ie(o))return!1;if(!e&&(!ks(o)&&!qt(o)&&(r=H(r),o=H(o)),!R(s)&&ie(r)&&!ie(o)))return r.value=o,!0;const a=R(s)&&Xs(n)?Number(n)<s.length:F(s,n),c=Reflect.set(s,n,o,l);return s===H(l)&&(a?Ut(o,r)&&Ie(s,"set",n,o):Ie(s,"add",n,o)),c}}function ql(e,t){const s=F(e,t);e[t];const n=Reflect.deleteProperty(e,t);return n&&s&&Ie(e,"delete",t,void 0),n}function xl(e,t){const s=Reflect.has(e,t);return(!Pt(t)||!ro.has(t))&&pe(e,"has",t),s}function Sl(e){return pe(e,"iterate",R(e)?"length":st),Reflect.ownKeys(e)}const io={get:gl,set:$l,deleteProperty:ql,has:xl,ownKeys:Sl},Tl={get:vl,set(e,t){return!0},deleteProperty(e,t){return!0}},Cl=le({},io,{get:_l,set:Pl}),Gs=e=>e,ls=e=>Reflect.getPrototypeOf(e);function Dt(e,t,s=!1,n=!1){e=e.__v_raw;const o=H(e),l=H(t);s||(t!==l&&pe(o,"get",t),pe(o,"get",l));const{has:r}=ls(o),a=n?Gs:s?tn:en;if(r.call(o,t))return a(e.get(t));if(r.call(o,l))return a(e.get(l));e!==o&&e.get(t)}function jt(e,t=!1){const s=this.__v_raw,n=H(s),o=H(e);return t||(e!==o&&pe(n,"has",e),pe(n,"has",o)),e===o?s.has(e):s.has(e)||s.has(o)}function Bt(e,t=!1){return e=e.__v_raw,!t&&pe(H(e),"iterate",st),Reflect.get(e,"size",e)}function xn(e){e=H(e);const t=H(this);return ls(t).has.call(t,e)||(t.add(e),Ie(t,"add",e,e)),this}function Sn(e,t){t=H(t);const s=H(this),{has:n,get:o}=ls(s);let l=n.call(s,e);l||(e=H(e),l=n.call(s,e));const r=o.call(s,e);return s.set(e,t),l?Ut(t,r)&&Ie(s,"set",e,t):Ie(s,"add",e,t),this}function Tn(e){const t=H(this),{has:s,get:n}=ls(t);let o=s.call(t,e);o||(e=H(e),o=s.call(t,e)),n&&n.call(t,e);const l=t.delete(e);return o&&Ie(t,"delete",e,void 0),l}function Cn(){const e=H(this),t=e.size!==0,s=e.clear();return t&&Ie(e,"clear",void 0,void 0),s}function Lt(e,t){return function(n,o){const l=this,r=l.__v_raw,a=H(r),c=t?Gs:e?tn:en;return!e&&pe(a,"iterate",st),r.forEach((f,g)=>n.call(o,c(f),c(g),l))}}function It(e,t,s){return function(...n){const o=this.__v_raw,l=H(o),r=dt(l),a=e==="entries"||e===Symbol.iterator&&r,c=e==="keys"&&r,f=o[e](...n),g=s?Gs:t?tn:en;return!t&&pe(l,"iterate",c?Cs:st),{next(){const{value:x,done:T}=f.next();return T?{value:x,done:T}:{value:a?[g(x[0]),g(x[1])]:g(x),done:T}},[Symbol.iterator](){return this}}}}function Fe(e){return function(...t){return e==="delete"?!1:this}}function El(){const e={get(l){return Dt(this,l)},get size(){return Bt(this)},has:jt,add:xn,set:Sn,delete:Tn,clear:Cn,forEach:Lt(!1,!1)},t={get(l){return Dt(this,l,!1,!0)},get size(){return Bt(this)},has:jt,add:xn,set:Sn,delete:Tn,clear:Cn,forEach:Lt(!1,!0)},s={get(l){return Dt(this,l,!0)},get size(){return Bt(this,!0)},has(l){return jt.call(this,l,!0)},add:Fe("add"),set:Fe("set"),delete:Fe("delete"),clear:Fe("clear"),forEach:Lt(!0,!1)},n={get(l){return Dt(this,l,!0,!0)},get size(){return Bt(this,!0)},has(l){return jt.call(this,l,!0)},add:Fe("add"),set:Fe("set"),delete:Fe("delete"),clear:Fe("clear"),forEach:Lt(!0,!0)};return["keys","values","entries",Symbol.iterator].forEach(l=>{e[l]=It(l,!1,!1),s[l]=It(l,!0,!1),t[l]=It(l,!1,!0),n[l]=It(l,!0,!0)}),[e,s,t,n]}const[kl,Al,Rl,Dl]=El();function Qs(e,t){const s=t?e?Dl:Rl:e?Al:kl;return(n,o,l)=>o==="__v_isReactive"?!e:o==="__v_isReadonly"?e:o==="__v_raw"?n:Reflect.get(F(s,o)&&o in n?s:n,o,l)}const jl={get:Qs(!1,!1)},Bl={get:Qs(!1,!0)},Ll={get:Qs(!0,!1)},co=new WeakMap,po=new WeakMap,uo=new WeakMap,Il=new WeakMap;function Ol(e){switch(e){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function Ml(e){return e.__v_skip||!Object.isExtensible(e)?0:Ol(al(e))}function Ys(e){return qt(e)?e:Zs(e,!1,io,jl,co)}function Fl(e){return Zs(e,!1,Cl,Bl,po)}function fo(e){return Zs(e,!0,Tl,Ll,uo)}function Zs(e,t,s,n,o){if(!K(e)||e.__v_raw&&!(t&&e.__v_isReactive))return e;const l=o.get(e);if(l)return l;const r=Ml(e);if(r===0)return e;const a=new Proxy(e,r===2?n:s);return o.set(e,a),a}function pt(e){return qt(e)?pt(e.__v_raw):!!(e&&e.__v_isReactive)}function qt(e){return!!(e&&e.__v_isReadonly)}function ks(e){return!!(e&&e.__v_isShallow)}function ho(e){return pt(e)||qt(e)}function H(e){const t=e&&e.__v_raw;return t?H(t):e}function yo(e){return Xt(e,"__v_skip",!0),e}const en=e=>K(e)?Ys(e):e,tn=e=>K(e)?fo(e):e;function Hl(e){Ne&&we&&(e=H(e),lo(e.dep||(e.dep=Ws())))}function Nl(e,t){e=H(e);const s=e.dep;s&&Es(s)}function ie(e){return!!(e&&e.__v_isRef===!0)}function Jl(e){return ie(e)?e.value:e}const zl={get:(e,t,s)=>Jl(Reflect.get(e,t,s)),set:(e,t,s,n)=>{const o=e[t];return ie(o)&&!ie(s)?(o.value=s,!0):Reflect.set(e,t,s,n)}};function mo(e){return pt(e)?e:new Proxy(e,zl)}var go;class Ul{constructor(t,s,n,o){this._setter=s,this.dep=void 0,this.__v_isRef=!0,this[go]=!1,this._dirty=!0,this.effect=new Ks(t,()=>{this._dirty||(this._dirty=!0,Nl(this))}),this.effect.computed=this,this.effect.active=this._cacheable=!o,this.__v_isReadonly=n}get value(){const t=H(this);return Hl(t),(t._dirty||!t._cacheable)&&(t._dirty=!1,t._value=t.effect.run()),t._value}set value(t){this._setter(t)}}go="__v_isReadonly";function Xl(e,t,s=!1){let n,o;const l=L(e);return l?(n=e,o=Pe):(n=e.get,o=e.set),new Ul(n,o,l||!o,s)}function Je(e,t,s,n){let o;try{o=n?e(...n):e()}catch(l){rs(l,t,s)}return o}function ge(e,t,s,n){if(L(e)){const l=Je(e,t,s,n);return l&&Zn(l)&&l.catch(r=>{rs(r,t,s)}),l}const o=[];for(let l=0;l<e.length;l++)o.push(ge(e[l],t,s,n));return o}function rs(e,t,s,n=!0){const o=t?t.vnode:null;if(t){let l=t.parent;const r=t.proxy,a=s;for(;l;){const f=l.ec;if(f){for(let g=0;g<f.length;g++)if(f[g](e,r,a)===!1)return}l=l.parent}const c=t.appContext.config.errorHandler;if(c){Je(c,null,10,[e,r,a]);return}}Wl(e,s,o,n)}function Wl(e,t,s,n=!0){console.error(e)}let xt=!1,As=!1;const oe=[];let ke=0;const ut=[];let Be=null,Qe=0;const _o=Promise.resolve();let sn=null;function Kl(e){const t=sn||_o;return e?t.then(this?e.bind(this):e):t}function Vl(e){let t=ke+1,s=oe.length;for(;t<s;){const n=t+s>>>1;St(oe[n])<e?t=n+1:s=n}return t}function nn(e){(!oe.length||!oe.includes(e,xt&&e.allowRecurse?ke+1:ke))&&(e.id==null?oe.push(e):oe.splice(Vl(e.id),0,e),vo())}function vo(){!xt&&!As&&(As=!0,sn=_o.then(wo))}function Gl(e){const t=oe.indexOf(e);t>ke&&oe.splice(t,1)}function Ql(e){R(e)?ut.push(...e):(!Be||!Be.includes(e,e.allowRecurse?Qe+1:Qe))&&ut.push(e),vo()}function En(e,t=xt?ke+1:0){for(;t<oe.length;t++){const s=oe[t];s&&s.pre&&(oe.splice(t,1),t--,s())}}function bo(e){if(ut.length){const t=[...new Set(ut)];if(ut.length=0,Be){Be.push(...t);return}for(Be=t,Be.sort((s,n)=>St(s)-St(n)),Qe=0;Qe<Be.length;Qe++)Be[Qe]();Be=null,Qe=0}}const St=e=>e.id==null?1/0:e.id,Yl=(e,t)=>{const s=St(e)-St(t);if(s===0){if(e.pre&&!t.pre)return-1;if(t.pre&&!e.pre)return 1}return s};function wo(e){As=!1,xt=!0,oe.sort(Yl);const t=Pe;try{for(ke=0;ke<oe.length;ke++){const s=oe[ke];s&&s.active!==!1&&Je(s,null,14)}}finally{ke=0,oe.length=0,bo(),xt=!1,sn=null,(oe.length||ut.length)&&wo()}}function Zl(e,t,...s){if(e.isUnmounted)return;const n=e.vnode.props||W;let o=s;const l=t.startsWith("update:"),r=l&&t.slice(7);if(r&&r in n){const g=`${r==="modelValue"?"model":r}Modifiers`,{number:x,trim:T}=n[g]||W;T&&(o=s.map(B=>te(B)?B.trim():B)),x&&(o=s.map(Wt))}let a,c=n[a=_s(t)]||n[a=_s(Re(t))];!c&&l&&(c=n[a=_s(ht(t))]),c&&ge(c,e,6,o);const f=n[a+"Once"];if(f){if(!e.emitted)e.emitted={};else if(e.emitted[a])return;e.emitted[a]=!0,ge(f,e,6,o)}}function $o(e,t,s=!1){const n=t.emitsCache,o=n.get(e);if(o!==void 0)return o;const l=e.emits;let r={},a=!1;if(!L(e)){const c=f=>{const g=$o(f,t,!0);g&&(a=!0,le(r,g))};!s&&t.mixins.length&&t.mixins.forEach(c),e.extends&&c(e.extends),e.mixins&&e.mixins.forEach(c)}return!l&&!a?(K(e)&&n.set(e,null),null):(R(l)?l.forEach(c=>r[c]=null):le(r,l),K(e)&&n.set(e,r),r)}function as(e,t){return!e||!ts(t)?!1:(t=t.slice(2).replace(/Once$/,""),F(e,t[0].toLowerCase()+t.slice(1))||F(e,ht(t))||F(e,t))}let he=null,is=null;function Kt(e){const t=he;return he=e,is=e&&e.type.__scopeId||null,t}function er(e){is=e}function tr(){is=null}function sr(e,t=he,s){if(!t||e._n)return e;const n=(...o)=>{n._d&&Mn(-1);const l=Kt(t);let r;try{r=e(...o)}finally{Kt(l),n._d&&Mn(1)}return r};return n._n=!0,n._c=!0,n._d=!0,n}function vs(e){const{type:t,vnode:s,proxy:n,withProxy:o,props:l,propsOptions:[r],slots:a,attrs:c,emit:f,render:g,renderCache:x,data:T,setupState:B,ctx:N,inheritAttrs:D}=e;let Z,z;const ye=Kt(e);try{if(s.shapeFlag&4){const V=o||n;Z=Ee(g.call(V,V,x,l,B,T,N)),z=c}else{const V=t;Z=Ee(V.length>1?V(l,{attrs:c,slots:a,emit:f}):V(l,null)),z=t.props?c:nr(c)}}catch(V){$t.length=0,rs(V,e,1),Z=h(Le)}let I=Z;if(z&&D!==!1){const V=Object.keys(z),{shapeFlag:ne}=I;V.length&&ne&7&&(r&&V.some(zs)&&(z=or(z,r)),I=Ue(I,z))}return s.dirs&&(I=Ue(I),I.dirs=I.dirs?I.dirs.concat(s.dirs):s.dirs),s.transition&&(I.transition=s.transition),Z=I,Kt(ye),Z}const nr=e=>{let t;for(const s in e)(s==="class"||s==="style"||ts(s))&&((t||(t={}))[s]=e[s]);return t},or=(e,t)=>{const s={};for(const n in e)(!zs(n)||!(n.slice(9)in t))&&(s[n]=e[n]);return s};function lr(e,t,s){const{props:n,children:o,component:l}=e,{props:r,children:a,patchFlag:c}=t,f=l.emitsOptions;if(t.dirs||t.transition)return!0;if(s&&c>=0){if(c&1024)return!0;if(c&16)return n?kn(n,r,f):!!r;if(c&8){const g=t.dynamicProps;for(let x=0;x<g.length;x++){const T=g[x];if(r[T]!==n[T]&&!as(f,T))return!0}}}else return(o||a)&&(!a||!a.$stable)?!0:n===r?!1:n?r?kn(n,r,f):!0:!!r;return!1}function kn(e,t,s){const n=Object.keys(t);if(n.length!==Object.keys(e).length)return!0;for(let o=0;o<n.length;o++){const l=n[o];if(t[l]!==e[l]&&!as(s,l))return!0}return!1}function rr({vnode:e,parent:t},s){for(;t&&t.subTree===e;)(e=t.vnode).el=s,t=t.parent}const ar=e=>e.__isSuspense;function ir(e,t){t&&t.pendingBranch?R(e)?t.effects.push(...e):t.effects.push(e):Ql(e)}function cr(e,t){if(Y){let s=Y.provides;const n=Y.parent&&Y.parent.provides;n===s&&(s=Y.provides=Object.create(n)),s[e]=t}}function Ht(e,t,s=!1){const n=Y||he;if(n){const o=n.parent==null?n.vnode.appContext&&n.vnode.appContext.provides:n.parent.provides;if(o&&e in o)return o[e];if(arguments.length>1)return s&&L(t)?t.call(n.proxy):t}}const Ot={};function bs(e,t,s){return Po(e,t,s)}function Po(e,t,{immediate:s,deep:n,flush:o,onTrack:l,onTrigger:r}=W){const a=fl()===(Y==null?void 0:Y.scope)?Y:null;let c,f=!1,g=!1;if(ie(e)?(c=()=>e.value,f=ks(e)):pt(e)?(c=()=>e,n=!0):R(e)?(g=!0,f=e.some(I=>pt(I)||ks(I)),c=()=>e.map(I=>{if(ie(I))return I.value;if(pt(I))return tt(I);if(L(I))return Je(I,a,2)})):L(e)?t?c=()=>Je(e,a,2):c=()=>{if(!(a&&a.isUnmounted))return x&&x(),ge(e,a,3,[T])}:c=Pe,t&&n){const I=c;c=()=>tt(I())}let x,T=I=>{x=z.onStop=()=>{Je(I,a,4)}},B;if(Ct)if(T=Pe,t?s&&ge(t,a,3,[c(),g?[]:void 0,T]):c(),o==="sync"){const I=ia();B=I.__watcherHandles||(I.__watcherHandles=[])}else return Pe;let N=g?new Array(e.length).fill(Ot):Ot;const D=()=>{if(z.active)if(t){const I=z.run();(n||f||(g?I.some((V,ne)=>Ut(V,N[ne])):Ut(I,N)))&&(x&&x(),ge(t,a,3,[I,N===Ot?void 0:g&&N[0]===Ot?[]:N,T]),N=I)}else z.run()};D.allowRecurse=!!t;let Z;o==="sync"?Z=D:o==="post"?Z=()=>ce(D,a&&a.suspense):(D.pre=!0,a&&(D.id=a.uid),Z=()=>nn(D));const z=new Ks(c,Z);t?s?D():N=z.run():o==="post"?ce(z.run.bind(z),a&&a.suspense):z.run();const ye=()=>{z.stop(),a&&a.scope&&Us(a.scope.effects,z)};return B&&B.push(ye),ye}function dr(e,t,s){const n=this.proxy,o=te(e)?e.includes(".")?qo(n,e):()=>n[e]:e.bind(n,n);let l;L(t)?l=t:(l=t.handler,s=t);const r=Y;ft(this);const a=Po(o,l.bind(n),s);return r?ft(r):nt(),a}function qo(e,t){const s=t.split(".");return()=>{let n=e;for(let o=0;o<s.length&&n;o++)n=n[s[o]];return n}}function tt(e,t){if(!K(e)||e.__v_skip||(t=t||new Set,t.has(e)))return e;if(t.add(e),ie(e))tt(e.value,t);else if(R(e))for(let s=0;s<e.length;s++)tt(e[s],t);else if(ss(e)||dt(e))e.forEach(s=>{tt(s,t)});else if(to(e))for(const s in e)tt(e[s],t);return e}function pr(){const e={isMounted:!1,isLeaving:!1,isUnmounting:!1,leavingVNodes:new Map};return Co(()=>{e.isMounted=!0}),Eo(()=>{e.isUnmounting=!0}),e}const me=[Function,Array],ur={name:"BaseTransition",props:{mode:String,appear:Boolean,persisted:Boolean,onBeforeEnter:me,onEnter:me,onAfterEnter:me,onEnterCancelled:me,onBeforeLeave:me,onLeave:me,onAfterLeave:me,onLeaveCancelled:me,onBeforeAppear:me,onAppear:me,onAfterAppear:me,onAppearCancelled:me},setup(e,{slots:t}){const s=Zr(),n=pr();let o;return()=>{const l=t.default&&So(t.default(),!0);if(!l||!l.length)return;let r=l[0];if(l.length>1){for(const D of l)if(D.type!==Le){r=D;break}}const a=H(e),{mode:c}=a;if(n.isLeaving)return ws(r);const f=An(r);if(!f)return ws(r);const g=Rs(f,a,n,s);Ds(f,g);const x=s.subTree,T=x&&An(x);let B=!1;const{getTransitionKey:N}=f.type;if(N){const D=N();o===void 0?o=D:D!==o&&(o=D,B=!0)}if(T&&T.type!==Le&&(!Ye(f,T)||B)){const D=Rs(T,a,n,s);if(Ds(T,D),c==="out-in")return n.isLeaving=!0,D.afterLeave=()=>{n.isLeaving=!1,s.update.active!==!1&&s.update()},ws(r);c==="in-out"&&f.type!==Le&&(D.delayLeave=(Z,z,ye)=>{const I=xo(n,T);I[String(T.key)]=T,Z._leaveCb=()=>{z(),Z._leaveCb=void 0,delete g.delayedLeave},g.delayedLeave=ye})}return r}}},fr=ur;function xo(e,t){const{leavingVNodes:s}=e;let n=s.get(t.type);return n||(n=Object.create(null),s.set(t.type,n)),n}function Rs(e,t,s,n){const{appear:o,mode:l,persisted:r=!1,onBeforeEnter:a,onEnter:c,onAfterEnter:f,onEnterCancelled:g,onBeforeLeave:x,onLeave:T,onAfterLeave:B,onLeaveCancelled:N,onBeforeAppear:D,onAppear:Z,onAfterAppear:z,onAppearCancelled:ye}=t,I=String(e.key),V=xo(s,e),ne=(O,se)=>{O&&ge(O,n,9,se)},ot=(O,se)=>{const G=se[1];ne(O,se),R(O)?O.every(ue=>ue.length<=1)&&G():O.length<=1&&G()},Me={mode:l,persisted:r,beforeEnter(O){let se=a;if(!s.isMounted)if(o)se=D||a;else return;O._leaveCb&&O._leaveCb(!0);const G=V[I];G&&Ye(e,G)&&G.el._leaveCb&&G.el._leaveCb(),ne(se,[O])},enter(O){let se=c,G=f,ue=g;if(!s.isMounted)if(o)se=Z||c,G=z||f,ue=ye||g;else return;let xe=!1;const De=O._enterCb=gt=>{xe||(xe=!0,gt?ne(ue,[O]):ne(G,[O]),Me.delayedLeave&&Me.delayedLeave(),O._enterCb=void 0)};se?ot(se,[O,De]):De()},leave(O,se){const G=String(e.key);if(O._enterCb&&O._enterCb(!0),s.isUnmounting)return se();ne(x,[O]);let ue=!1;const xe=O._leaveCb=De=>{ue||(ue=!0,se(),De?ne(N,[O]):ne(B,[O]),O._leaveCb=void 0,V[G]===e&&delete V[G])};V[G]=e,T?ot(T,[O,xe]):xe()},clone(O){return Rs(O,t,s,n)}};return Me}function ws(e){if(cs(e))return e=Ue(e),e.children=null,e}function An(e){return cs(e)?e.children?e.children[0]:void 0:e}function Ds(e,t){e.shapeFlag&6&&e.component?Ds(e.component.subTree,t):e.shapeFlag&128?(e.ssContent.transition=t.clone(e.ssContent),e.ssFallback.transition=t.clone(e.ssFallback)):e.transition=t}function So(e,t=!1,s){let n=[],o=0;for(let l=0;l<e.length;l++){let r=e[l];const a=s==null?r.key:String(s)+String(r.key!=null?r.key:l);r.type===be?(r.patchFlag&128&&o++,n=n.concat(So(r.children,t,a))):(t||r.type!==Le)&&n.push(a!=null?Ue(r,{key:a}):r)}if(o>1)for(let l=0;l<n.length;l++)n[l].patchFlag=-2;return n}const Nt=e=>!!e.type.__asyncLoader,cs=e=>e.type.__isKeepAlive;function hr(e,t){To(e,"a",t)}function yr(e,t){To(e,"da",t)}function To(e,t,s=Y){const n=e.__wdc||(e.__wdc=()=>{let o=s;for(;o;){if(o.isDeactivated)return;o=o.parent}return e()});if(ds(t,n,s),s){let o=s.parent;for(;o&&o.parent;)cs(o.parent.vnode)&&mr(n,t,s,o),o=o.parent}}function mr(e,t,s,n){const o=ds(t,e,n,!0);ko(()=>{Us(n[t],o)},s)}function ds(e,t,s=Y,n=!1){if(s){const o=s[e]||(s[e]=[]),l=t.__weh||(t.__weh=(...r)=>{if(s.isUnmounted)return;yt(),ft(s);const a=ge(t,s,e,r);return nt(),mt(),a});return n?o.unshift(l):o.push(l),l}}const Oe=e=>(t,s=Y)=>(!Ct||e==="sp")&&ds(e,(...n)=>t(...n),s),gr=Oe("bm"),Co=Oe("m"),_r=Oe("bu"),vr=Oe("u"),Eo=Oe("bum"),ko=Oe("um"),br=Oe("sp"),wr=Oe("rtg"),$r=Oe("rtc");function Pr(e,t=Y){ds("ec",e,t)}function Ae(e,t){const s=he;if(s===null)return e;const n=fs(s)||s.proxy,o=e.dirs||(e.dirs=[]);for(let l=0;l<t.length;l++){let[r,a,c,f=W]=t[l];r&&(L(r)&&(r={mounted:r,updated:r}),r.deep&&tt(a),o.push({dir:r,instance:n,value:a,oldValue:void 0,arg:c,modifiers:f}))}return e}function Ke(e,t,s,n){const o=e.dirs,l=t&&t.dirs;for(let r=0;r<o.length;r++){const a=o[r];l&&(a.oldValue=l[r].value);let c=a.dir[n];c&&(yt(),ge(c,s,8,[e.el,a,e,t]),mt())}}const Ao="components";function Ro(e,t){return xr(Ao,e,!0,t)||e}const qr=Symbol();function xr(e,t,s=!0,n=!1){const o=he||Y;if(o){const l=o.type;if(e===Ao){const a=oa(l,!1);if(a&&(a===t||a===Re(t)||a===os(Re(t))))return l}const r=Rn(o[e]||l[e],t)||Rn(o.appContext[e],t);return!r&&n?l:r}}function Rn(e,t){return e&&(e[t]||e[Re(t)]||e[os(Re(t))])}function Sr(e,t,s,n){let o;const l=s&&s[n];if(R(e)||te(e)){o=new Array(e.length);for(let r=0,a=e.length;r<a;r++)o[r]=t(e[r],r,void 0,l&&l[r])}else if(typeof e=="number"){o=new Array(e);for(let r=0;r<e;r++)o[r]=t(r+1,r,void 0,l&&l[r])}else if(K(e))if(e[Symbol.iterator])o=Array.from(e,(r,a)=>t(r,a,void 0,l&&l[a]));else{const r=Object.keys(e);o=new Array(r.length);for(let a=0,c=r.length;a<c;a++){const f=r[a];o[a]=t(e[f],f,a,l&&l[a])}}else o=[];return s&&(s[n]=o),o}const js=e=>e?No(e)?fs(e)||e.proxy:js(e.parent):null,wt=le(Object.create(null),{$:e=>e,$el:e=>e.vnode.el,$data:e=>e.data,$props:e=>e.props,$attrs:e=>e.attrs,$slots:e=>e.slots,$refs:e=>e.refs,$parent:e=>js(e.parent),$root:e=>js(e.root),$emit:e=>e.emit,$options:e=>on(e),$forceUpdate:e=>e.f||(e.f=()=>nn(e.update)),$nextTick:e=>e.n||(e.n=Kl.bind(e.proxy)),$watch:e=>dr.bind(e)}),$s=(e,t)=>e!==W&&!e.__isScriptSetup&&F(e,t),Tr={get({_:e},t){const{ctx:s,setupState:n,data:o,props:l,accessCache:r,type:a,appContext:c}=e;let f;if(t[0]!=="$"){const B=r[t];if(B!==void 0)switch(B){case 1:return n[t];case 2:return o[t];case 4:return s[t];case 3:return l[t]}else{if($s(n,t))return r[t]=1,n[t];if(o!==W&&F(o,t))return r[t]=2,o[t];if((f=e.propsOptions[0])&&F(f,t))return r[t]=3,l[t];if(s!==W&&F(s,t))return r[t]=4,s[t];Bs&&(r[t]=0)}}const g=wt[t];let x,T;if(g)return t==="$attrs"&&pe(e,"get",t),g(e);if((x=a.__cssModules)&&(x=x[t]))return x;if(s!==W&&F(s,t))return r[t]=4,s[t];if(T=c.config.globalProperties,F(T,t))return T[t]},set({_:e},t,s){const{data:n,setupState:o,ctx:l}=e;return $s(o,t)?(o[t]=s,!0):n!==W&&F(n,t)?(n[t]=s,!0):F(e.props,t)||t[0]==="$"&&t.slice(1)in e?!1:(l[t]=s,!0)},has({_:{data:e,setupState:t,accessCache:s,ctx:n,appContext:o,propsOptions:l}},r){let a;return!!s[r]||e!==W&&F(e,r)||$s(t,r)||(a=l[0])&&F(a,r)||F(n,r)||F(wt,r)||F(o.config.globalProperties,r)},defineProperty(e,t,s){return s.get!=null?e._.accessCache[t]=0:F(s,"value")&&this.set(e,t,s.value,null),Reflect.defineProperty(e,t,s)}};let Bs=!0;function Cr(e){const t=on(e),s=e.proxy,n=e.ctx;Bs=!1,t.beforeCreate&&Dn(t.beforeCreate,e,"bc");const{data:o,computed:l,methods:r,watch:a,provide:c,inject:f,created:g,beforeMount:x,mounted:T,beforeUpdate:B,updated:N,activated:D,deactivated:Z,beforeDestroy:z,beforeUnmount:ye,destroyed:I,unmounted:V,render:ne,renderTracked:ot,renderTriggered:Me,errorCaptured:O,serverPrefetch:se,expose:G,inheritAttrs:ue,components:xe,directives:De,filters:gt}=t;if(f&&Er(f,n,null,e.appContext.config.unwrapInjectedRef),r)for(const Q in r){const U=r[Q];L(U)&&(n[Q]=U.bind(s))}if(o){const Q=o.call(s,s);K(Q)&&(e.data=Ys(Q))}if(Bs=!0,l)for(const Q in l){const U=l[Q],Xe=L(U)?U.bind(s,s):L(U.get)?U.get.bind(s,s):Pe,At=!L(U)&&L(U.set)?U.set.bind(s):Pe,We=ra({get:Xe,set:At});Object.defineProperty(n,Q,{enumerable:!0,configurable:!0,get:()=>We.value,set:Se=>We.value=Se})}if(a)for(const Q in a)Do(a[Q],n,s,Q);if(c){const Q=L(c)?c.call(s):c;Reflect.ownKeys(Q).forEach(U=>{cr(U,Q[U])})}g&&Dn(g,e,"c");function re(Q,U){R(U)?U.forEach(Xe=>Q(Xe.bind(s))):U&&Q(U.bind(s))}if(re(gr,x),re(Co,T),re(_r,B),re(vr,N),re(hr,D),re(yr,Z),re(Pr,O),re($r,ot),re(wr,Me),re(Eo,ye),re(ko,V),re(br,se),R(G))if(G.length){const Q=e.exposed||(e.exposed={});G.forEach(U=>{Object.defineProperty(Q,U,{get:()=>s[U],set:Xe=>s[U]=Xe})})}else e.exposed||(e.exposed={});ne&&e.render===Pe&&(e.render=ne),ue!=null&&(e.inheritAttrs=ue),xe&&(e.components=xe),De&&(e.directives=De)}function Er(e,t,s=Pe,n=!1){R(e)&&(e=Ls(e));for(const o in e){const l=e[o];let r;K(l)?"default"in l?r=Ht(l.from||o,l.default,!0):r=Ht(l.from||o):r=Ht(l),ie(r)&&n?Object.defineProperty(t,o,{enumerable:!0,configurable:!0,get:()=>r.value,set:a=>r.value=a}):t[o]=r}}function Dn(e,t,s){ge(R(e)?e.map(n=>n.bind(t.proxy)):e.bind(t.proxy),t,s)}function Do(e,t,s,n){const o=n.includes(".")?qo(s,n):()=>s[n];if(te(e)){const l=t[e];L(l)&&bs(o,l)}else if(L(e))bs(o,e.bind(s));else if(K(e))if(R(e))e.forEach(l=>Do(l,t,s,n));else{const l=L(e.handler)?e.handler.bind(s):t[e.handler];L(l)&&bs(o,l,e)}}function on(e){const t=e.type,{mixins:s,extends:n}=t,{mixins:o,optionsCache:l,config:{optionMergeStrategies:r}}=e.appContext,a=l.get(t);let c;return a?c=a:!o.length&&!s&&!n?c=t:(c={},o.length&&o.forEach(f=>Vt(c,f,r,!0)),Vt(c,t,r)),K(t)&&l.set(t,c),c}function Vt(e,t,s,n=!1){const{mixins:o,extends:l}=t;l&&Vt(e,l,s,!0),o&&o.forEach(r=>Vt(e,r,s,!0));for(const r in t)if(!(n&&r==="expose")){const a=kr[r]||s&&s[r];e[r]=a?a(e[r],t[r]):t[r]}return e}const kr={data:jn,props:Ge,emits:Ge,methods:Ge,computed:Ge,beforeCreate:ae,created:ae,beforeMount:ae,mounted:ae,beforeUpdate:ae,updated:ae,beforeDestroy:ae,beforeUnmount:ae,destroyed:ae,unmounted:ae,activated:ae,deactivated:ae,errorCaptured:ae,serverPrefetch:ae,components:Ge,directives:Ge,watch:Rr,provide:jn,inject:Ar};function jn(e,t){return t?e?function(){return le(L(e)?e.call(this,this):e,L(t)?t.call(this,this):t)}:t:e}function Ar(e,t){return Ge(Ls(e),Ls(t))}function Ls(e){if(R(e)){const t={};for(let s=0;s<e.length;s++)t[e[s]]=e[s];return t}return e}function ae(e,t){return e?[...new Set([].concat(e,t))]:t}function Ge(e,t){return e?le(le(Object.create(null),e),t):t}function Rr(e,t){if(!e)return t;if(!t)return e;const s=le(Object.create(null),e);for(const n in t)s[n]=ae(e[n],t[n]);return s}function Dr(e,t,s,n=!1){const o={},l={};Xt(l,us,1),e.propsDefaults=Object.create(null),jo(e,t,o,l);for(const r in e.propsOptions[0])r in o||(o[r]=void 0);s?e.props=n?o:Fl(o):e.type.props?e.props=o:e.props=l,e.attrs=l}function jr(e,t,s,n){const{props:o,attrs:l,vnode:{patchFlag:r}}=e,a=H(o),[c]=e.propsOptions;let f=!1;if((n||r>0)&&!(r&16)){if(r&8){const g=e.vnode.dynamicProps;for(let x=0;x<g.length;x++){let T=g[x];if(as(e.emitsOptions,T))continue;const B=t[T];if(c)if(F(l,T))B!==l[T]&&(l[T]=B,f=!0);else{const N=Re(T);o[N]=Is(c,a,N,B,e,!1)}else B!==l[T]&&(l[T]=B,f=!0)}}}else{jo(e,t,o,l)&&(f=!0);let g;for(const x in a)(!t||!F(t,x)&&((g=ht(x))===x||!F(t,g)))&&(c?s&&(s[x]!==void 0||s[g]!==void 0)&&(o[x]=Is(c,a,x,void 0,e,!0)):delete o[x]);if(l!==a)for(const x in l)(!t||!F(t,x))&&(delete l[x],f=!0)}f&&Ie(e,"set","$attrs")}function jo(e,t,s,n){const[o,l]=e.propsOptions;let r=!1,a;if(t)for(let c in t){if(Mt(c))continue;const f=t[c];let g;o&&F(o,g=Re(c))?!l||!l.includes(g)?s[g]=f:(a||(a={}))[g]=f:as(e.emitsOptions,c)||(!(c in n)||f!==n[c])&&(n[c]=f,r=!0)}if(l){const c=H(s),f=a||W;for(let g=0;g<l.length;g++){const x=l[g];s[x]=Is(o,c,x,f[x],e,!F(f,x))}}return r}function Is(e,t,s,n,o,l){const r=e[s];if(r!=null){const a=F(r,"default");if(a&&n===void 0){const c=r.default;if(r.type!==Function&&L(c)){const{propsDefaults:f}=o;s in f?n=f[s]:(ft(o),n=f[s]=c.call(null,t),nt())}else n=c}r[0]&&(l&&!a?n=!1:r[1]&&(n===""||n===ht(s))&&(n=!0))}return n}function Bo(e,t,s=!1){const n=t.propsCache,o=n.get(e);if(o)return o;const l=e.props,r={},a=[];let c=!1;if(!L(e)){const g=x=>{c=!0;const[T,B]=Bo(x,t,!0);le(r,T),B&&a.push(...B)};!s&&t.mixins.length&&t.mixins.forEach(g),e.extends&&g(e.extends),e.mixins&&e.mixins.forEach(g)}if(!l&&!c)return K(e)&&n.set(e,ct),ct;if(R(l))for(let g=0;g<l.length;g++){const x=Re(l[g]);Bn(x)&&(r[x]=W)}else if(l)for(const g in l){const x=Re(g);if(Bn(x)){const T=l[g],B=r[x]=R(T)||L(T)?{type:T}:Object.assign({},T);if(B){const N=On(Boolean,B.type),D=On(String,B.type);B[0]=N>-1,B[1]=D<0||N<D,(N>-1||F(B,"default"))&&a.push(x)}}}const f=[r,a];return K(e)&&n.set(e,f),f}function Bn(e){return e[0]!=="$"}function Ln(e){const t=e&&e.toString().match(/^\s*(function|class) (\w+)/);return t?t[2]:e===null?"null":""}function In(e,t){return Ln(e)===Ln(t)}function On(e,t){return R(t)?t.findIndex(s=>In(s,e)):L(t)&&In(t,e)?0:-1}const Lo=e=>e[0]==="_"||e==="$stable",ln=e=>R(e)?e.map(Ee):[Ee(e)],Br=(e,t,s)=>{if(t._n)return t;const n=sr((...o)=>ln(t(...o)),s);return n._c=!1,n},Io=(e,t,s)=>{const n=e._ctx;for(const o in e){if(Lo(o))continue;const l=e[o];if(L(l))t[o]=Br(o,l,n);else if(l!=null){const r=ln(l);t[o]=()=>r}}},Oo=(e,t)=>{const s=ln(t);e.slots.default=()=>s},Lr=(e,t)=>{if(e.vnode.shapeFlag&32){const s=t._;s?(e.slots=H(t),Xt(t,"_",s)):Io(t,e.slots={})}else e.slots={},t&&Oo(e,t);Xt(e.slots,us,1)},Ir=(e,t,s)=>{const{vnode:n,slots:o}=e;let l=!0,r=W;if(n.shapeFlag&32){const a=t._;a?s&&a===1?l=!1:(le(o,t),!s&&a===1&&delete o._):(l=!t.$stable,Io(t,o)),r=t}else t&&(Oo(e,t),r={default:1});if(l)for(const a in o)!Lo(a)&&!(a in r)&&delete o[a]};function Mo(){return{app:null,config:{isNativeTag:ol,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let Or=0;function Mr(e,t){return function(n,o=null){L(n)||(n=Object.assign({},n)),o!=null&&!K(o)&&(o=null);const l=Mo(),r=new Set;let a=!1;const c=l.app={_uid:Or++,_component:n,_props:o,_container:null,_context:l,_instance:null,version:ca,get config(){return l.config},set config(f){},use(f,...g){return r.has(f)||(f&&L(f.install)?(r.add(f),f.install(c,...g)):L(f)&&(r.add(f),f(c,...g))),c},mixin(f){return l.mixins.includes(f)||l.mixins.push(f),c},component(f,g){return g?(l.components[f]=g,c):l.components[f]},directive(f,g){return g?(l.directives[f]=g,c):l.directives[f]},mount(f,g,x){if(!a){const T=h(n,o);return T.appContext=l,g&&t?t(T,f):e(T,f,x),a=!0,c._container=f,f.__vue_app__=c,fs(T.component)||T.component.proxy}},unmount(){a&&(e(null,c._container),delete c._container.__vue_app__)},provide(f,g){return l.provides[f]=g,c}};return c}}function Os(e,t,s,n,o=!1){if(R(e)){e.forEach((T,B)=>Os(T,t&&(R(t)?t[B]:t),s,n,o));return}if(Nt(n)&&!o)return;const l=n.shapeFlag&4?fs(n.component)||n.component.proxy:n.el,r=o?null:l,{i:a,r:c}=e,f=t&&t.r,g=a.refs===W?a.refs={}:a.refs,x=a.setupState;if(f!=null&&f!==c&&(te(f)?(g[f]=null,F(x,f)&&(x[f]=null)):ie(f)&&(f.value=null)),L(c))Je(c,a,12,[r,g]);else{const T=te(c),B=ie(c);if(T||B){const N=()=>{if(e.f){const D=T?F(x,c)?x[c]:g[c]:c.value;o?R(D)&&Us(D,l):R(D)?D.includes(l)||D.push(l):T?(g[c]=[l],F(x,c)&&(x[c]=g[c])):(c.value=[l],e.k&&(g[e.k]=c.value))}else T?(g[c]=r,F(x,c)&&(x[c]=r)):B&&(c.value=r,e.k&&(g[e.k]=r))};r?(N.id=-1,ce(N,s)):N()}}}const ce=ir;function Fr(e){return Hr(e)}function Hr(e,t){const s=dl();s.__VUE__=!0;const{insert:n,remove:o,patchProp:l,createElement:r,createText:a,createComment:c,setText:f,setElementText:g,parentNode:x,nextSibling:T,setScopeId:B=Pe,insertStaticContent:N}=e,D=(i,d,u,m=null,y=null,$=null,S=!1,w=null,P=!!d.dynamicChildren)=>{if(i===d)return;i&&!Ye(i,d)&&(m=Rt(i),Se(i,y,$,!0),i=null),d.patchFlag===-2&&(P=!1,d.dynamicChildren=null);const{type:_,ref:k,shapeFlag:C}=d;switch(_){case ps:Z(i,d,u,m);break;case Le:z(i,d,u,m);break;case Jt:i==null&&ye(d,u,m,S);break;case be:xe(i,d,u,m,y,$,S,w,P);break;default:C&1?ne(i,d,u,m,y,$,S,w,P):C&6?De(i,d,u,m,y,$,S,w,P):(C&64||C&128)&&_.process(i,d,u,m,y,$,S,w,P,lt)}k!=null&&y&&Os(k,i&&i.ref,$,d||i,!d)},Z=(i,d,u,m)=>{if(i==null)n(d.el=a(d.children),u,m);else{const y=d.el=i.el;d.children!==i.children&&f(y,d.children)}},z=(i,d,u,m)=>{i==null?n(d.el=c(d.children||""),u,m):d.el=i.el},ye=(i,d,u,m)=>{[i.el,i.anchor]=N(i.children,d,u,m,i.el,i.anchor)},I=({el:i,anchor:d},u,m)=>{let y;for(;i&&i!==d;)y=T(i),n(i,u,m),i=y;n(d,u,m)},V=({el:i,anchor:d})=>{let u;for(;i&&i!==d;)u=T(i),o(i),i=u;o(d)},ne=(i,d,u,m,y,$,S,w,P)=>{S=S||d.type==="svg",i==null?ot(d,u,m,y,$,S,w,P):se(i,d,y,$,S,w,P)},ot=(i,d,u,m,y,$,S,w)=>{let P,_;const{type:k,props:C,shapeFlag:A,transition:j,dirs:M}=i;if(P=i.el=r(i.type,$,C&&C.is,C),A&8?g(P,i.children):A&16&&O(i.children,P,null,m,y,$&&k!=="foreignObject",S,w),M&&Ke(i,null,m,"created"),Me(P,i,i.scopeId,S,m),C){for(const J in C)J!=="value"&&!Mt(J)&&l(P,J,null,C[J],$,i.children,m,y,je);"value"in C&&l(P,"value",null,C.value),(_=C.onVnodeBeforeMount)&&Ce(_,m,i)}M&&Ke(i,null,m,"beforeMount");const X=(!y||y&&!y.pendingBranch)&&j&&!j.persisted;X&&j.beforeEnter(P),n(P,d,u),((_=C&&C.onVnodeMounted)||X||M)&&ce(()=>{_&&Ce(_,m,i),X&&j.enter(P),M&&Ke(i,null,m,"mounted")},y)},Me=(i,d,u,m,y)=>{if(u&&B(i,u),m)for(let $=0;$<m.length;$++)B(i,m[$]);if(y){let $=y.subTree;if(d===$){const S=y.vnode;Me(i,S,S.scopeId,S.slotScopeIds,y.parent)}}},O=(i,d,u,m,y,$,S,w,P=0)=>{for(let _=P;_<i.length;_++){const k=i[_]=w?He(i[_]):Ee(i[_]);D(null,k,d,u,m,y,$,S,w)}},se=(i,d,u,m,y,$,S)=>{const w=d.el=i.el;let{patchFlag:P,dynamicChildren:_,dirs:k}=d;P|=i.patchFlag&16;const C=i.props||W,A=d.props||W;let j;u&&Ve(u,!1),(j=A.onVnodeBeforeUpdate)&&Ce(j,u,d,i),k&&Ke(d,i,u,"beforeUpdate"),u&&Ve(u,!0);const M=y&&d.type!=="foreignObject";if(_?G(i.dynamicChildren,_,w,u,m,M,$):S||U(i,d,w,null,u,m,M,$,!1),P>0){if(P&16)ue(w,d,C,A,u,m,y);else if(P&2&&C.class!==A.class&&l(w,"class",null,A.class,y),P&4&&l(w,"style",C.style,A.style,y),P&8){const X=d.dynamicProps;for(let J=0;J<X.length;J++){const ee=X[J],_e=C[ee],rt=A[ee];(rt!==_e||ee==="value")&&l(w,ee,_e,rt,y,i.children,u,m,je)}}P&1&&i.children!==d.children&&g(w,d.children)}else!S&&_==null&&ue(w,d,C,A,u,m,y);((j=A.onVnodeUpdated)||k)&&ce(()=>{j&&Ce(j,u,d,i),k&&Ke(d,i,u,"updated")},m)},G=(i,d,u,m,y,$,S)=>{for(let w=0;w<d.length;w++){const P=i[w],_=d[w],k=P.el&&(P.type===be||!Ye(P,_)||P.shapeFlag&70)?x(P.el):u;D(P,_,k,null,m,y,$,S,!0)}},ue=(i,d,u,m,y,$,S)=>{if(u!==m){if(u!==W)for(const w in u)!Mt(w)&&!(w in m)&&l(i,w,u[w],null,S,d.children,y,$,je);for(const w in m){if(Mt(w))continue;const P=m[w],_=u[w];P!==_&&w!=="value"&&l(i,w,_,P,S,d.children,y,$,je)}"value"in m&&l(i,"value",u.value,m.value)}},xe=(i,d,u,m,y,$,S,w,P)=>{const _=d.el=i?i.el:a(""),k=d.anchor=i?i.anchor:a("");let{patchFlag:C,dynamicChildren:A,slotScopeIds:j}=d;j&&(w=w?w.concat(j):j),i==null?(n(_,u,m),n(k,u,m),O(d.children,u,k,y,$,S,w,P)):C>0&&C&64&&A&&i.dynamicChildren?(G(i.dynamicChildren,A,u,y,$,S,w),(d.key!=null||y&&d===y.subTree)&&Fo(i,d,!0)):U(i,d,u,k,y,$,S,w,P)},De=(i,d,u,m,y,$,S,w,P)=>{d.slotScopeIds=w,i==null?d.shapeFlag&512?y.ctx.activate(d,u,m,S,P):gt(d,u,m,y,$,S,P):hn(i,d,P)},gt=(i,d,u,m,y,$,S)=>{const w=i.component=Yr(i,m,y);if(cs(i)&&(w.ctx.renderer=lt),ea(w),w.asyncDep){if(y&&y.registerDep(w,re),!i.el){const P=w.subTree=h(Le);z(null,P,d,u)}return}re(w,i,d,u,y,$,S)},hn=(i,d,u)=>{const m=d.component=i.component;if(lr(i,d,u))if(m.asyncDep&&!m.asyncResolved){Q(m,d,u);return}else m.next=d,Gl(m.update),m.update();else d.el=i.el,m.vnode=d},re=(i,d,u,m,y,$,S)=>{const w=()=>{if(i.isMounted){let{next:k,bu:C,u:A,parent:j,vnode:M}=i,X=k,J;Ve(i,!1),k?(k.el=M.el,Q(i,k,S)):k=M,C&&Ft(C),(J=k.props&&k.props.onVnodeBeforeUpdate)&&Ce(J,j,k,M),Ve(i,!0);const ee=vs(i),_e=i.subTree;i.subTree=ee,D(_e,ee,x(_e.el),Rt(_e),i,y,$),k.el=ee.el,X===null&&rr(i,ee.el),A&&ce(A,y),(J=k.props&&k.props.onVnodeUpdated)&&ce(()=>Ce(J,j,k,M),y)}else{let k;const{el:C,props:A}=d,{bm:j,m:M,parent:X}=i,J=Nt(d);if(Ve(i,!1),j&&Ft(j),!J&&(k=A&&A.onVnodeBeforeMount)&&Ce(k,X,d),Ve(i,!0),C&&gs){const ee=()=>{i.subTree=vs(i),gs(C,i.subTree,i,y,null)};J?d.type.__asyncLoader().then(()=>!i.isUnmounted&&ee()):ee()}else{const ee=i.subTree=vs(i);D(null,ee,u,m,i,y,$),d.el=ee.el}if(M&&ce(M,y),!J&&(k=A&&A.onVnodeMounted)){const ee=d;ce(()=>Ce(k,X,ee),y)}(d.shapeFlag&256||X&&Nt(X.vnode)&&X.vnode.shapeFlag&256)&&i.a&&ce(i.a,y),i.isMounted=!0,d=u=m=null}},P=i.effect=new Ks(w,()=>nn(_),i.scope),_=i.update=()=>P.run();_.id=i.uid,Ve(i,!0),_()},Q=(i,d,u)=>{d.component=i;const m=i.vnode.props;i.vnode=d,i.next=null,jr(i,d.props,m,u),Ir(i,d.children,u),yt(),En(),mt()},U=(i,d,u,m,y,$,S,w,P=!1)=>{const _=i&&i.children,k=i?i.shapeFlag:0,C=d.children,{patchFlag:A,shapeFlag:j}=d;if(A>0){if(A&128){At(_,C,u,m,y,$,S,w,P);return}else if(A&256){Xe(_,C,u,m,y,$,S,w,P);return}}j&8?(k&16&&je(_,y,$),C!==_&&g(u,C)):k&16?j&16?At(_,C,u,m,y,$,S,w,P):je(_,y,$,!0):(k&8&&g(u,""),j&16&&O(C,u,m,y,$,S,w,P))},Xe=(i,d,u,m,y,$,S,w,P)=>{i=i||ct,d=d||ct;const _=i.length,k=d.length,C=Math.min(_,k);let A;for(A=0;A<C;A++){const j=d[A]=P?He(d[A]):Ee(d[A]);D(i[A],j,u,null,y,$,S,w,P)}_>k?je(i,y,$,!0,!1,C):O(d,u,m,y,$,S,w,P,C)},At=(i,d,u,m,y,$,S,w,P)=>{let _=0;const k=d.length;let C=i.length-1,A=k-1;for(;_<=C&&_<=A;){const j=i[_],M=d[_]=P?He(d[_]):Ee(d[_]);if(Ye(j,M))D(j,M,u,null,y,$,S,w,P);else break;_++}for(;_<=C&&_<=A;){const j=i[C],M=d[A]=P?He(d[A]):Ee(d[A]);if(Ye(j,M))D(j,M,u,null,y,$,S,w,P);else break;C--,A--}if(_>C){if(_<=A){const j=A+1,M=j<k?d[j].el:m;for(;_<=A;)D(null,d[_]=P?He(d[_]):Ee(d[_]),u,M,y,$,S,w,P),_++}}else if(_>A)for(;_<=C;)Se(i[_],y,$,!0),_++;else{const j=_,M=_,X=new Map;for(_=M;_<=A;_++){const fe=d[_]=P?He(d[_]):Ee(d[_]);fe.key!=null&&X.set(fe.key,_)}let J,ee=0;const _e=A-M+1;let rt=!1,gn=0;const _t=new Array(_e);for(_=0;_<_e;_++)_t[_]=0;for(_=j;_<=C;_++){const fe=i[_];if(ee>=_e){Se(fe,y,$,!0);continue}let Te;if(fe.key!=null)Te=X.get(fe.key);else for(J=M;J<=A;J++)if(_t[J-M]===0&&Ye(fe,d[J])){Te=J;break}Te===void 0?Se(fe,y,$,!0):(_t[Te-M]=_+1,Te>=gn?gn=Te:rt=!0,D(fe,d[Te],u,null,y,$,S,w,P),ee++)}const _n=rt?Nr(_t):ct;for(J=_n.length-1,_=_e-1;_>=0;_--){const fe=M+_,Te=d[fe],vn=fe+1<k?d[fe+1].el:m;_t[_]===0?D(null,Te,u,vn,y,$,S,w,P):rt&&(J<0||_!==_n[J]?We(Te,u,vn,2):J--)}}},We=(i,d,u,m,y=null)=>{const{el:$,type:S,transition:w,children:P,shapeFlag:_}=i;if(_&6){We(i.component.subTree,d,u,m);return}if(_&128){i.suspense.move(d,u,m);return}if(_&64){S.move(i,d,u,lt);return}if(S===be){n($,d,u);for(let C=0;C<P.length;C++)We(P[C],d,u,m);n(i.anchor,d,u);return}if(S===Jt){I(i,d,u);return}if(m!==2&&_&1&&w)if(m===0)w.beforeEnter($),n($,d,u),ce(()=>w.enter($),y);else{const{leave:C,delayLeave:A,afterLeave:j}=w,M=()=>n($,d,u),X=()=>{C($,()=>{M(),j&&j()})};A?A($,M,X):X()}else n($,d,u)},Se=(i,d,u,m=!1,y=!1)=>{const{type:$,props:S,ref:w,children:P,dynamicChildren:_,shapeFlag:k,patchFlag:C,dirs:A}=i;if(w!=null&&Os(w,null,u,i,!0),k&256){d.ctx.deactivate(i);return}const j=k&1&&A,M=!Nt(i);let X;if(M&&(X=S&&S.onVnodeBeforeUnmount)&&Ce(X,d,i),k&6)Ko(i.component,u,m);else{if(k&128){i.suspense.unmount(u,m);return}j&&Ke(i,null,d,"beforeUnmount"),k&64?i.type.remove(i,d,u,y,lt,m):_&&($!==be||C>0&&C&64)?je(_,d,u,!1,!0):($===be&&C&384||!y&&k&16)&&je(P,d,u),m&&yn(i)}(M&&(X=S&&S.onVnodeUnmounted)||j)&&ce(()=>{X&&Ce(X,d,i),j&&Ke(i,null,d,"unmounted")},u)},yn=i=>{const{type:d,el:u,anchor:m,transition:y}=i;if(d===be){Wo(u,m);return}if(d===Jt){V(i);return}const $=()=>{o(u),y&&!y.persisted&&y.afterLeave&&y.afterLeave()};if(i.shapeFlag&1&&y&&!y.persisted){const{leave:S,delayLeave:w}=y,P=()=>S(u,$);w?w(i.el,$,P):P()}else $()},Wo=(i,d)=>{let u;for(;i!==d;)u=T(i),o(i),i=u;o(d)},Ko=(i,d,u)=>{const{bum:m,scope:y,update:$,subTree:S,um:w}=i;m&&Ft(m),y.stop(),$&&($.active=!1,Se(S,i,d,u)),w&&ce(w,d),ce(()=>{i.isUnmounted=!0},d),d&&d.pendingBranch&&!d.isUnmounted&&i.asyncDep&&!i.asyncResolved&&i.suspenseId===d.pendingId&&(d.deps--,d.deps===0&&d.resolve())},je=(i,d,u,m=!1,y=!1,$=0)=>{for(let S=$;S<i.length;S++)Se(i[S],d,u,m,y)},Rt=i=>i.shapeFlag&6?Rt(i.component.subTree):i.shapeFlag&128?i.suspense.next():T(i.anchor||i.el),mn=(i,d,u)=>{i==null?d._vnode&&Se(d._vnode,null,null,!0):D(d._vnode||null,i,d,null,null,null,u),En(),bo(),d._vnode=i},lt={p:D,um:Se,m:We,r:yn,mt:gt,mc:O,pc:U,pbc:G,n:Rt,o:e};let ms,gs;return t&&([ms,gs]=t(lt)),{render:mn,hydrate:ms,createApp:Mr(mn,ms)}}function Ve({effect:e,update:t},s){e.allowRecurse=t.allowRecurse=s}function Fo(e,t,s=!1){const n=e.children,o=t.children;if(R(n)&&R(o))for(let l=0;l<n.length;l++){const r=n[l];let a=o[l];a.shapeFlag&1&&!a.dynamicChildren&&((a.patchFlag<=0||a.patchFlag===32)&&(a=o[l]=He(o[l]),a.el=r.el),s||Fo(r,a)),a.type===ps&&(a.el=r.el)}}function Nr(e){const t=e.slice(),s=[0];let n,o,l,r,a;const c=e.length;for(n=0;n<c;n++){const f=e[n];if(f!==0){if(o=s[s.length-1],e[o]<f){t[n]=o,s.push(n);continue}for(l=0,r=s.length-1;l<r;)a=l+r>>1,e[s[a]]<f?l=a+1:r=a;f<e[s[l]]&&(l>0&&(t[n]=s[l-1]),s[l]=n)}}for(l=s.length,r=s[l-1];l-- >0;)s[l]=r,r=t[r];return s}const Jr=e=>e.__isTeleport,be=Symbol(void 0),ps=Symbol(void 0),Le=Symbol(void 0),Jt=Symbol(void 0),$t=[];let $e=null;function v(e=!1){$t.push($e=e?null:[])}function zr(){$t.pop(),$e=$t[$t.length-1]||null}let Tt=1;function Mn(e){Tt+=e}function Ur(e){return e.dynamicChildren=Tt>0?$e||ct:null,zr(),Tt>0&&$e&&$e.push(e),e}function b(e,t,s,n,o,l){return Ur(p(e,t,s,n,o,l,!0))}function Xr(e){return e?e.__v_isVNode===!0:!1}function Ye(e,t){return e.type===t.type&&e.key===t.key}const us="__vInternal",Ho=({key:e})=>e??null,zt=({ref:e,ref_key:t,ref_for:s})=>e!=null?te(e)||ie(e)||L(e)?{i:he,r:e,k:t,f:!!s}:e:null;function p(e,t=null,s=null,n=0,o=null,l=e===be?0:1,r=!1,a=!1){const c={__v_isVNode:!0,__v_skip:!0,type:e,props:t,key:t&&Ho(t),ref:t&&zt(t),scopeId:is,slotScopeIds:null,children:s,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:l,patchFlag:n,dynamicProps:o,dynamicChildren:null,appContext:null,ctx:he};return a?(rn(c,s),l&128&&e.normalize(c)):s&&(c.shapeFlag|=te(s)?8:16),Tt>0&&!r&&$e&&(c.patchFlag>0||l&6)&&c.patchFlag!==32&&$e.push(c),c}const h=Wr;function Wr(e,t=null,s=null,n=0,o=null,l=!1){if((!e||e===qr)&&(e=Le),Xr(e)){const a=Ue(e,t,!0);return s&&rn(a,s),Tt>0&&!l&&$e&&(a.shapeFlag&6?$e[$e.indexOf(e)]=a:$e.push(a)),a.patchFlag|=-2,a}if(la(e)&&(e=e.__vccOpts),t){t=Kr(t);let{class:a,style:c}=t;a&&!te(a)&&(t.class=it(a)),K(c)&&(ho(c)&&!R(c)&&(c=le({},c)),t.style=Js(c))}const r=te(e)?1:ar(e)?128:Jr(e)?64:K(e)?4:L(e)?2:0;return p(e,t,s,n,o,r,l,!0)}function Kr(e){return e?ho(e)||us in e?le({},e):e:null}function Ue(e,t,s=!1){const{props:n,ref:o,patchFlag:l,children:r}=e,a=t?Vr(n||{},t):n;return{__v_isVNode:!0,__v_skip:!0,type:e.type,props:a,key:a&&Ho(a),ref:t&&t.ref?s&&o?R(o)?o.concat(zt(t)):[o,zt(t)]:zt(t):o,scopeId:e.scopeId,slotScopeIds:e.slotScopeIds,children:r,target:e.target,targetAnchor:e.targetAnchor,staticCount:e.staticCount,shapeFlag:e.shapeFlag,patchFlag:t&&e.type!==be?l===-1?16:l|16:l,dynamicProps:e.dynamicProps,dynamicChildren:e.dynamicChildren,appContext:e.appContext,dirs:e.dirs,transition:e.transition,component:e.component,suspense:e.suspense,ssContent:e.ssContent&&Ue(e.ssContent),ssFallback:e.ssFallback&&Ue(e.ssFallback),el:e.el,anchor:e.anchor,ctx:e.ctx,ce:e.ce}}function Gt(e=" ",t=0){return h(ps,null,e,t)}function E(e,t){const s=h(Jt,null,e);return s.staticCount=t,s}function Ee(e){return e==null||typeof e=="boolean"?h(Le):R(e)?h(be,null,e.slice()):typeof e=="object"?He(e):h(ps,null,String(e))}function He(e){return e.el===null&&e.patchFlag!==-1||e.memo?e:Ue(e)}function rn(e,t){let s=0;const{shapeFlag:n}=e;if(t==null)t=null;else if(R(t))s=16;else if(typeof t=="object")if(n&65){const o=t.default;o&&(o._c&&(o._d=!1),rn(e,o()),o._c&&(o._d=!0));return}else{s=32;const o=t._;!o&&!(us in t)?t._ctx=he:o===3&&he&&(he.slots._===1?t._=1:(t._=2,e.patchFlag|=1024))}else L(t)?(t={default:t,_ctx:he},s=32):(t=String(t),n&64?(s=16,t=[Gt(t)]):s=8);e.children=t,e.shapeFlag|=s}function Vr(...e){const t={};for(let s=0;s<e.length;s++){const n=e[s];for(const o in n)if(o==="class")t.class!==n.class&&(t.class=it([t.class,n.class]));else if(o==="style")t.style=Js([t.style,n.style]);else if(ts(o)){const l=t[o],r=n[o];r&&l!==r&&!(R(l)&&l.includes(r))&&(t[o]=l?[].concat(l,r):r)}else o!==""&&(t[o]=n[o])}return t}function Ce(e,t,s,n=null){ge(e,t,7,[s,n])}const Gr=Mo();let Qr=0;function Yr(e,t,s){const n=e.type,o=(t?t.appContext:e.appContext)||Gr,l={uid:Qr++,vnode:e,type:n,parent:t,appContext:o,root:null,next:null,subTree:null,effect:null,update:null,scope:new pl(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:t?t.provides:Object.create(o.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:Bo(n,o),emitsOptions:$o(n,o),emit:null,emitted:null,propsDefaults:W,inheritAttrs:n.inheritAttrs,ctx:W,data:W,props:W,attrs:W,slots:W,refs:W,setupState:W,setupContext:null,suspense:s,suspenseId:s?s.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return l.ctx={_:l},l.root=t?t.root:l,l.emit=Zl.bind(null,l),e.ce&&e.ce(l),l}let Y=null;const Zr=()=>Y||he,ft=e=>{Y=e,e.scope.on()},nt=()=>{Y&&Y.scope.off(),Y=null};function No(e){return e.vnode.shapeFlag&4}let Ct=!1;function ea(e,t=!1){Ct=t;const{props:s,children:n}=e.vnode,o=No(e);Dr(e,s,o,t),Lr(e,n);const l=o?ta(e,t):void 0;return Ct=!1,l}function ta(e,t){const s=e.type;e.accessCache=Object.create(null),e.proxy=yo(new Proxy(e.ctx,Tr));const{setup:n}=s;if(n){const o=e.setupContext=n.length>1?na(e):null;ft(e),yt();const l=Je(n,e,0,[e.props,o]);if(mt(),nt(),Zn(l)){if(l.then(nt,nt),t)return l.then(r=>{Fn(e,r,t)}).catch(r=>{rs(r,e,0)});e.asyncDep=l}else Fn(e,l,t)}else Jo(e,t)}function Fn(e,t,s){L(t)?e.type.__ssrInlineRender?e.ssrRender=t:e.render=t:K(t)&&(e.setupState=mo(t)),Jo(e,s)}let Hn;function Jo(e,t,s){const n=e.type;if(!e.render){if(!t&&Hn&&!n.render){const o=n.template||on(e).template;if(o){const{isCustomElement:l,compilerOptions:r}=e.appContext.config,{delimiters:a,compilerOptions:c}=n,f=le(le({isCustomElement:l,delimiters:a},r),c);n.render=Hn(o,f)}}e.render=n.render||Pe}ft(e),yt(),Cr(e),mt(),nt()}function sa(e){return new Proxy(e.attrs,{get(t,s){return pe(e,"get","$attrs"),t[s]}})}function na(e){const t=n=>{e.exposed=n||{}};let s;return{get attrs(){return s||(s=sa(e))},slots:e.slots,emit:e.emit,expose:t}}function fs(e){if(e.exposed)return e.exposeProxy||(e.exposeProxy=new Proxy(mo(yo(e.exposed)),{get(t,s){if(s in t)return t[s];if(s in wt)return wt[s](e)},has(t,s){return s in t||s in wt}}))}function oa(e,t=!0){return L(e)?e.displayName||e.name:e.name||t&&e.__name}function la(e){return L(e)&&"__vccOpts"in e}const ra=(e,t)=>Xl(e,t,Ct),aa=Symbol(""),ia=()=>Ht(aa),ca="3.2.47",da="http://www.w3.org/2000/svg",Ze=typeof document<"u"?document:null,Nn=Ze&&Ze.createElement("template"),pa={insert:(e,t,s)=>{t.insertBefore(e,s||null)},remove:e=>{const t=e.parentNode;t&&t.removeChild(e)},createElement:(e,t,s,n)=>{const o=t?Ze.createElementNS(da,e):Ze.createElement(e,s?{is:s}:void 0);return e==="select"&&n&&n.multiple!=null&&o.setAttribute("multiple",n.multiple),o},createText:e=>Ze.createTextNode(e),createComment:e=>Ze.createComment(e),setText:(e,t)=>{e.nodeValue=t},setElementText:(e,t)=>{e.textContent=t},parentNode:e=>e.parentNode,nextSibling:e=>e.nextSibling,querySelector:e=>Ze.querySelector(e),setScopeId(e,t){e.setAttribute(t,"")},insertStaticContent(e,t,s,n,o,l){const r=s?s.previousSibling:t.lastChild;if(o&&(o===l||o.nextSibling))for(;t.insertBefore(o.cloneNode(!0),s),!(o===l||!(o=o.nextSibling)););else{Nn.innerHTML=n?`<svg>${e}</svg>`:e;const a=Nn.content;if(n){const c=a.firstChild;for(;c.firstChild;)a.appendChild(c.firstChild);a.removeChild(c)}t.insertBefore(a,s)}return[r?r.nextSibling:t.firstChild,s?s.previousSibling:t.lastChild]}};function ua(e,t,s){const n=e._vtc;n&&(t=(t?[t,...n]:[...n]).join(" ")),t==null?e.removeAttribute("class"):s?e.setAttribute("class",t):e.className=t}function fa(e,t,s){const n=e.style,o=te(s);if(s&&!o){if(t&&!te(t))for(const l in t)s[l]==null&&Ms(n,l,"");for(const l in s)Ms(n,l,s[l])}else{const l=n.display;o?t!==s&&(n.cssText=s):t&&e.removeAttribute("style"),"_vod"in e&&(n.display=l)}}const Jn=/\s*!important$/;function Ms(e,t,s){if(R(s))s.forEach(n=>Ms(e,t,n));else if(s==null&&(s=""),t.startsWith("--"))e.setProperty(t,s);else{const n=ha(e,t);Jn.test(s)?e.setProperty(ht(n),s.replace(Jn,""),"important"):e[n]=s}}const zn=["Webkit","Moz","ms"],Ps={};function ha(e,t){const s=Ps[t];if(s)return s;let n=Re(t);if(n!=="filter"&&n in e)return Ps[t]=n;n=os(n);for(let o=0;o<zn.length;o++){const l=zn[o]+n;if(l in e)return Ps[t]=l}return t}const Un="http://www.w3.org/1999/xlink";function ya(e,t,s,n,o){if(n&&t.startsWith("xlink:"))s==null?e.removeAttributeNS(Un,t.slice(6,t.length)):e.setAttributeNS(Un,t,s);else{const l=el(t);s==null||l&&!Qn(s)?e.removeAttribute(t):e.setAttribute(t,l?"":s)}}function ma(e,t,s,n,o,l,r){if(t==="innerHTML"||t==="textContent"){n&&r(n,o,l),e[t]=s??"";return}if(t==="value"&&e.tagName!=="PROGRESS"&&!e.tagName.includes("-")){e._value=s;const c=s??"";(e.value!==c||e.tagName==="OPTION")&&(e.value=c),s==null&&e.removeAttribute(t);return}let a=!1;if(s===""||s==null){const c=typeof e[t];c==="boolean"?s=Qn(s):s==null&&c==="string"?(s="",a=!0):c==="number"&&(s=0,a=!0)}try{e[t]=s}catch{}a&&e.removeAttribute(t)}function et(e,t,s,n){e.addEventListener(t,s,n)}function ga(e,t,s,n){e.removeEventListener(t,s,n)}function _a(e,t,s,n,o=null){const l=e._vei||(e._vei={}),r=l[t];if(n&&r)r.value=n;else{const[a,c]=va(t);if(n){const f=l[t]=$a(n,o);et(e,a,f,c)}else r&&(ga(e,a,r,c),l[t]=void 0)}}const Xn=/(?:Once|Passive|Capture)$/;function va(e){let t;if(Xn.test(e)){t={};let n;for(;n=e.match(Xn);)e=e.slice(0,e.length-n[0].length),t[n[0].toLowerCase()]=!0}return[e[2]===":"?e.slice(3):ht(e.slice(2)),t]}let qs=0;const ba=Promise.resolve(),wa=()=>qs||(ba.then(()=>qs=0),qs=Date.now());function $a(e,t){const s=n=>{if(!n._vts)n._vts=Date.now();else if(n._vts<=s.attached)return;ge(Pa(n,s.value),t,5,[n])};return s.value=e,s.attached=wa(),s}function Pa(e,t){if(R(t)){const s=e.stopImmediatePropagation;return e.stopImmediatePropagation=()=>{s.call(e),e._stopped=!0},t.map(n=>o=>!o._stopped&&n&&n(o))}else return t}const Wn=/^on[a-z]/,qa=(e,t,s,n,o=!1,l,r,a,c)=>{t==="class"?ua(e,n,o):t==="style"?fa(e,s,n):ts(t)?zs(t)||_a(e,t,s,n,r):(t[0]==="."?(t=t.slice(1),!0):t[0]==="^"?(t=t.slice(1),!1):xa(e,t,n,o))?ma(e,t,n,l,r,a,c):(t==="true-value"?e._trueValue=n:t==="false-value"&&(e._falseValue=n),ya(e,t,n,o))};function xa(e,t,s,n){return n?!!(t==="innerHTML"||t==="textContent"||t in e&&Wn.test(t)&&L(s)):t==="spellcheck"||t==="draggable"||t==="translate"||t==="form"||t==="list"&&e.tagName==="INPUT"||t==="type"&&e.tagName==="TEXTAREA"||Wn.test(t)&&te(s)?!1:t in e}const Sa={name:String,type:String,css:{type:Boolean,default:!0},duration:[String,Number,Object],enterFromClass:String,enterActiveClass:String,enterToClass:String,appearFromClass:String,appearActiveClass:String,appearToClass:String,leaveFromClass:String,leaveActiveClass:String,leaveToClass:String};fr.props;const Qt=e=>{const t=e.props["onUpdate:modelValue"]||!1;return R(t)?s=>Ft(t,s):t};function Ta(e){e.target.composing=!0}function Kn(e){const t=e.target;t.composing&&(t.composing=!1,t.dispatchEvent(new Event("input")))}const at={created(e,{modifiers:{lazy:t,trim:s,number:n}},o){e._assign=Qt(o);const l=n||o.props&&o.props.type==="number";et(e,t?"change":"input",r=>{if(r.target.composing)return;let a=e.value;s&&(a=a.trim()),l&&(a=Wt(a)),e._assign(a)}),s&&et(e,"change",()=>{e.value=e.value.trim()}),t||(et(e,"compositionstart",Ta),et(e,"compositionend",Kn),et(e,"change",Kn))},mounted(e,{value:t}){e.value=t??""},beforeUpdate(e,{value:t,modifiers:{lazy:s,trim:n,number:o}},l){if(e._assign=Qt(l),e.composing||document.activeElement===e&&e.type!=="range"&&(s||n&&e.value.trim()===t||(o||e.type==="number")&&Wt(e.value)===t))return;const r=t??"";e.value!==r&&(e.value=r)}},Ca={deep:!0,created(e,{value:t,modifiers:{number:s}},n){const o=ss(t);et(e,"change",()=>{const l=Array.prototype.filter.call(e.options,r=>r.selected).map(r=>s?Wt(Yt(r)):Yt(r));e._assign(e.multiple?o?new Set(l):l:l[0])}),e._assign=Qt(n)},mounted(e,{value:t}){Vn(e,t)},beforeUpdate(e,t,s){e._assign=Qt(s)},updated(e,{value:t}){Vn(e,t)}};function Vn(e,t){const s=e.multiple;if(!(s&&!R(t)&&!ss(t))){for(let n=0,o=e.options.length;n<o;n++){const l=e.options[n],r=Yt(l);if(s)R(t)?l.selected=sl(t,r)>-1:l.selected=t.has(r);else if(es(Yt(l),t)){e.selectedIndex!==n&&(e.selectedIndex=n);return}}!s&&e.selectedIndex!==-1&&(e.selectedIndex=-1)}}function Yt(e){return"_value"in e?e._value:e.value}const xs={beforeMount(e,{value:t},{transition:s}){e._vod=e.style.display==="none"?"":e.style.display,s&&t?s.beforeEnter(e):vt(e,t)},mounted(e,{value:t},{transition:s}){s&&t&&s.enter(e)},updated(e,{value:t,oldValue:s},{transition:n}){!t!=!s&&(n?t?(n.beforeEnter(e),vt(e,!0),n.enter(e)):n.leave(e,()=>{vt(e,!1)}):vt(e,t))},beforeUnmount(e,{value:t}){vt(e,t)}};function vt(e,t){e.style.display=t?e._vod:"none"}const Ea=le({patchProp:qa},pa);let Gn;function ka(){return Gn||(Gn=Fr(Ea))}const Aa=(...e)=>{const t=ka().createApp(...e),{mount:s}=t;return t.mount=n=>{const o=Ra(n);if(!o)return;const l=t._component;!L(l)&&!l.render&&!l.template&&(l.template=o.innerHTML),o.innerHTML="";const r=s(o,!1,o instanceof SVGElement);return o instanceof Element&&(o.removeAttribute("v-cloak"),o.setAttribute("data-v-app","")),r},t};function Ra(e){return te(e)?document.querySelector(e):e}const Da="/rest/assets/jersey-3810312f.svg",q=(e,t)=>{const s=e.__vccOpts||e;for(const[n,o]of t)s[n]=o;return s},ja={},Ba={class:"slide show"},La=E('<div class="heading">API et Webservices</div><div class="content grid center"><h3 class="title">API et Webservices<br></h3><p class="sub-title">RESTful et SOAP</p><p>Mon portefeuille</p><p><a href="https://kilian-schropp.surge.sh/">https://kilian-schropp.surge.sh/</a></p></div>',2),Ia=[La];function Oa(e,t){return v(),b("div",Ba,Ia)}const Ma=q(ja,[["render",Oa]]),Fa="/rest/assets/Wikipedia_logo_(svg)-1132e921.svg",Ha="/rest/assets/server-side-rendering-8b828042.svg",Na={},Ja={class:"slide"},za=E('<div class="heading">Server-side-rendering vs client-side-rendering</div><div class="content"><div class="flex-container"><div style="width:50%;"><p>Pour commencer, examinons un site web avec rendu côté serveur.</p><br><p> C&#39;est assez simple. Le client demande un site, le serveur lui donne un fichier HTML complet. </p><h3>L&#39;exemple classique est Wikipédia.</h3><br><img src="'+Fa+'" style="width:40%;"></div><div style="width:45%;"><img src="'+Ha+'" style="width:100%;"></div></div></div>',2),Ua=[za];function Xa(e,t){return v(),b("div",Ja,Ua)}const Wa=q(Na,[["render",Xa]]),Ka="/rest/assets/gmail-logo-8385bfb8.svg",Va="/rest/assets/client-side-rendering-2a1a6bbf.svg",Ga={},Qa={class:"slide"},Ya=E('<div class="heading">Server-side-rendering vs client-side-rendering</div><div class="content"><div class="flex-container"><div style="width:25%;"><p> Maintenant, faisons la même chose mais avec un rendu côté client </p><br><p>Nous voyons déjà qu&#39;il se passe beaucoup plus de choses</p><h3>L&#39;exemple classique est GMail.</h3><img src="'+Ka+'" style="width:65%;"></div><div style="width:70%;"><img src="'+Va+'" style="width:100%;"></div></div></div>',2),Za=[Ya];function ei(e,t){return v(),b("div",Qa,Za)}const ti=q(Ga,[["render",ei]]),si="/rest/assets/http-f64adf40.svg",ni={},oi={class:"slide"},li=p("div",{class:"heading"},"HTTP Protocol detour",-1),ri=p("div",{class:"content"},[p("p",null," Les serveurs Web parlent le protocole HTTP, c'est pourquoi ils sont souvent appelés serveurs HTTP. Ces serveurs HTTP stockent les données de l'Internet et fournissent les données lorsqu'elles sont demandées par les clients HTTP. "),p("br"),p("img",{src:si,style:{width:"60%"}})],-1),ai=[li,ri];function ii(e,t){return v(),b("div",oi,ai)}const ci=q(ni,[["render",ii]]),di="/rest/assets/httpMIME-b7d0018a.svg",pi={},ui={class:"slide"},fi=E('<div class="heading">HTTP Protocol detour</div><div class="content"><p> Comme Internet héberge plusieurs milliers de types de données différents, HTTP marque soigneusement chaque objet transporté sur le Web avec une étiquette de format de données appelée type MIME. </p><div class="flex-container"><div style="width:45%;"><p> • Un document texte au format HTML serait étiqueté avec le type text/html </p><p> • Un document de texte ASCII simple serait étiqueté avec le type text/plain </p><p>• Une version JPEG d&#39;une image serait image/jpeg</p><p>• Une image au format GIF serait image/gif</p><p>• Un film Apple QuickTime serait video/quicktime.</p><p> • Une présentation Microsoft PowerPoint serait application/vnd.mspowerpoint </p></div><div style="width:50%;"><br><img src="'+di+'" style="width:100%;"></div></div></div>',2),hi=[fi];function yi(e,t){return v(),b("div",ui,hi)}const mi=q(pi,[["render",yi]]),gi="/rest/assets/URL-d330440e.svg",_i={},vi={class:"slide"},bi=p("div",{class:"heading"},"HTTP Protocol detour",-1),wi=p("div",{class:"content"},[p("p",null," Les URL décrivent l'emplacement spécifique d'une ressource sur un serveur particulier. Elles vous indiquent exactement comment aller chercher une ressource à partir d'un emplacement précis et fixe. "),p("br"),p("img",{src:gi,style:{width:"95%"}})],-1),$i=[bi,wi];function Pi(e,t){return v(),b("div",vi,$i)}const qi=q(_i,[["render",Pi]]),xi={},Si={class:"slide"},Ti=E('<div class="heading">HTTP Protocol detour</div><div class="content"><p> Le protocole HTTP prend en charge plusieurs commandes de requête différentes, appelées méthodes HTTP. Chaque requête HTTP possède une méthode. La méthode indique au serveur l&#39;action à effectuer </p><br><table><tbody><tr><th>HTTP method</th><th>Description</th></tr><tr><td>GET</td><td>Envoyer une ressource nommée du serveur au client</td></tr><tr><td>POST</td><td> Envoyer les données du client dans une application passerelle serveur </td></tr><tr><td>PUT</td><td> Stocker les données du client dans une ressource serveur nommée </td></tr><tr><td>DELETE</td><td>Supprime la ressource nommée d&#39;un serveur.</td></tr><tr><td>HEAD</td><td> Envoyer uniquement les en-têtes HTTP de la réponse pour la ressource nommée. </td></tr></tbody></table><br><p> Il existe d&#39;autres méthodes HTTP, mais celles-ci sont les plus importantes </p></div>',2),Ci=[Ti];function Ei(e,t){return v(),b("div",Si,Ci)}const ki=q(xi,[["render",Ei]]),Ai={},Ri={class:"slide"},Di=E(`<div class="heading">HTTP Protocol detour</div><div class="content"><p> Ici, nous n&#39;envoyons pas de données de requête au serveur car nous récupérons une page HTML simple du serveur. </p><br><div class="codeblock"><pre style="margin:0;line-height:125%;">          GET <span style="color:#333333;">/</span>hello<span style="color:#333333;">.</span>htm HTTP<span style="color:#333333;">/</span><span style="color:#6600EE;font-weight:bold;">1.1</span>
          User<span style="color:#333333;">-</span>Agent: Mozilla<span style="color:#333333;">/</span><span style="color:#6600EE;font-weight:bold;">4.0</span> (compatible; MSIE5<span style="color:#333333;">.</span><span style="color:#4400EE;font-weight:bold;">01</span>; Windows NT)
          Host: www<span style="color:#333333;">.</span>tutorialspoint<span style="color:#333333;">.</span>com
          Accept<span style="color:#333333;">-</span>Language: en<span style="color:#333333;">-</span>us
          Accept<span style="color:#333333;">-</span>Encoding: gzip, deflate
          Connection: Keep<span style="color:#333333;">-</span>Alive</pre></div></div>`,2),ji=[Di];function Bi(e,t){return v(),b("div",Ri,ji)}const Li=q(Ai,[["render",Bi]]),Ii={},Oi={class:"slide"},Mi=E('<div class="heading">HTTP Protocol detour</div><div class="content"><p> Chaque message de réponse HTTP est accompagné d&#39;un code d&#39;état. Ce code d&#39;état est un code numérique à trois chiffres qui indique au client si la demande a abouti ou si d&#39;autres actions sont nécessaires. </p><br><p>Liste abrégée des codes d&#39;état courants</p><table><tbody><tr><th>HTTP status code</th><th>Description</th></tr><tr><td>200</td><td>OK. Le document est retourné correctement.</td></tr><tr><td>404</td><td>Non trouvé. Impossible de trouver cette ressource.</td></tr><tr><td>302</td><td>Rediriger. Allez ailleurs pour obtenir la ressource.</td></tr><tr><td>500</td><td>Internal Server Error</td></tr></tbody></table></div>',2),Fi=[Mi];function Hi(e,t){return v(),b("div",Oi,Fi)}const Ni=q(Ii,[["render",Hi]]),Ji={},zi={class:"slide"},Ui=E(`<div class="heading">HTTP Protocol detour</div><div class="content"><p> Réponse HTTP à une demande de récupération de la page hello.html sur le serveur web. </p><br><div class="codeblock"><pre style="margin:0;line-height:125%;">          HTTP<span style="color:#333333;">/</span><span style="color:#6600EE;font-weight:bold;">1.1</span> <span style="color:#0000DD;font-weight:bold;">200</span> OK
          Date: Mon, <span style="color:#0000DD;font-weight:bold;">27</span> Jul <span style="color:#0000DD;font-weight:bold;">2009</span> <span style="color:#0000DD;font-weight:bold;">12</span>:<span style="color:#0000DD;font-weight:bold;">28</span>:<span style="color:#0000DD;font-weight:bold;">53</span> GMT
          Server: Apache<span style="color:#333333;">/</span><span style="color:#6600EE;font-weight:bold;">2.2</span><span style="color:#333333;">.</span><span style="color:#0000DD;font-weight:bold;">14</span> (Win32)
          Last<span style="color:#333333;">-</span>Modified: Wed, <span style="color:#0000DD;font-weight:bold;">22</span> Jul <span style="color:#0000DD;font-weight:bold;">2009</span> <span style="color:#0000DD;font-weight:bold;">19</span>:<span style="color:#0000DD;font-weight:bold;">15</span>:<span style="color:#0000DD;font-weight:bold;">56</span> GMT
          Content<span style="color:#333333;">-</span>Length: <span style="color:#0000DD;font-weight:bold;">88</span>
          Content<span style="color:#333333;">-</span>Type: text<span style="color:#333333;">/</span>html
          Connection: Closed

          <span style="color:#333333;">&lt;</span>html<span style="color:#333333;">&gt;</span>
          <span style="color:#333333;">&lt;</span>body<span style="color:#333333;">&gt;</span>
          <span style="color:#333333;">&lt;</span>h1<span style="color:#333333;">&gt;</span>Hello, World<span style="color:#FF0000;background-color:#FFAAAA;">!</span><span style="color:#333333;">&lt;/</span>h1<span style="color:#333333;">&gt;</span>
          <span style="color:#333333;">&lt;/</span>body<span style="color:#333333;">&gt;</span>
          <span style="color:#333333;">&lt;/</span>html<span style="color:#333333;">&gt;</span></pre></div></div>`,2),Xi=[Ui];function Wi(e,t){return v(),b("div",zi,Xi)}const Ki=q(Ji,[["render",Wi]]),Vi={},Gi={class:"slide"},Qi=E(`<div class="heading">HTTP Protocol detour</div><div class="content"><p> L&#39;exemple suivant montre un message de réponse HTTP affichant une condition d&#39;erreur lorsque le serveur web n&#39;a pas pu trouver la page demandée </p><div class="codeblock"><pre style="margin:0;line-height:125%;">          HTTP<span style="color:#333333;">/</span><span style="color:#6600EE;font-weight:bold;">1.1</span> <span style="color:#0000DD;font-weight:bold;">404</span> Not Found
          Date: Sun, <span style="color:#0000DD;font-weight:bold;">18</span> Oct <span style="color:#0000DD;font-weight:bold;">2012</span> <span style="color:#0000DD;font-weight:bold;">10</span>:<span style="color:#0000DD;font-weight:bold;">36</span>:<span style="color:#0000DD;font-weight:bold;">20</span> GMT
          Server: Apache<span style="color:#333333;">/</span><span style="color:#6600EE;font-weight:bold;">2.2</span><span style="color:#333333;">.</span><span style="color:#0000DD;font-weight:bold;">14</span> (Win32)
          Content<span style="color:#333333;">-</span>Length: <span style="color:#0000DD;font-weight:bold;">230</span>
          Connection: Closed
          Content<span style="color:#333333;">-</span>Type: text<span style="color:#333333;">/</span>html; charset<span style="color:#333333;">=</span>iso<span style="color:#333333;">-</span><span style="color:#0000DD;font-weight:bold;">8859</span><span style="color:#333333;">-</span><span style="color:#0000DD;font-weight:bold;">1</span>
          <span style="color:#333333;">&lt;</span><span style="color:#FF0000;background-color:#FFAAAA;">!</span>DOCTYPE HTML PUBLIC <span style="background-color:#fff0f0;">&quot;-//IETF//DTD HTML 2.0//EN&quot;</span><span style="color:#333333;">&gt;</span>
          <span style="color:#333333;">&lt;</span>html<span style="color:#333333;">&gt;</span>
          <span style="color:#333333;">&lt;</span>head<span style="color:#333333;">&gt;</span>
            <span style="color:#333333;">&lt;</span>title<span style="color:#333333;">&gt;</span><span style="color:#0000DD;font-weight:bold;">404</span> Not Found<span style="color:#333333;">&lt;/</span>title<span style="color:#333333;">&gt;</span>
          <span style="color:#333333;">&lt;/</span>head<span style="color:#333333;">&gt;</span>
          <span style="color:#333333;">&lt;</span>body<span style="color:#333333;">&gt;</span>
            <span style="color:#333333;">&lt;</span>p<span style="color:#333333;">&gt;</span>The requested URL <span style="color:#333333;">/</span>t<span style="color:#333333;">.</span>html was <span style="color:#000000;font-weight:bold;">not</span> found on this server<span style="color:#333333;">.&lt;/</span>p<span style="color:#333333;">&gt;</span>
          <span style="color:#333333;">&lt;/</span>body<span style="color:#333333;">&gt;</span>
          <span style="color:#333333;">&lt;/</span>html<span style="color:#333333;">&gt;</span></pre></div></div>`,2),Yi=[Qi];function Zi(e,t){return v(),b("div",Gi,Yi)}const ec=q(Vi,[["render",Zi]]),tc={data(){return{params:[{key:"",value:""}]}},methods:{addParam(){this.params.push({key:"",value:""})},removeParam(e){this.params.splice(e,1)},communicateParams(){this.$emit("communicateParams",this.params)}}},sc=p("thead",null,[p("tr",null,[p("th",null,"Key"),p("th",null,"Value"),p("th")])],-1),nc=["onUpdate:modelValue"],oc=["onUpdate:modelValue"],lc=["onClick"];function rc(e,t,s,n,o,l){return v(),b("div",null,[p("table",null,[sc,p("tbody",null,[(v(!0),b(be,null,Sr(o.params,(r,a)=>(v(),b("tr",{key:a},[p("td",null,[Ae(p("input",{type:"text","onUpdate:modelValue":c=>r.key=c,placeholder:"Enter key"},null,8,nc),[[at,r.key]])]),p("td",null,[Ae(p("input",{type:"text","onUpdate:modelValue":c=>r.value=c,placeholder:"Enter value",onBlur:t[0]||(t[0]=(...c)=>l.communicateParams&&l.communicateParams(...c))},null,40,oc),[[at,r.value]])]),p("td",null,[p("button",{onClick:c=>l.removeParam(a)},"Remove",8,lc)])]))),128))])]),p("button",{onClick:t[1]||(t[1]=(...r)=>l.addParam&&l.addParam(...r))},"Add parameter")])}const ac=q(tc,[["render",rc]]);const ic={data(){return{activetab:"1",params:[{key:"",value:""}],auth:[{key:"",value:""}],header:[{key:"",value:""}]}},watch:{params(e,t){this.sendData()},auth(e,t){this.sendData()},header(e,t){this.sendData()}},components:{KeyValueTable:ac},methods:{communicateParams(e,t){this[t]=e},sendData(){const e={params:this.params,auth:this.auth,header:this.header};this.$emit("data-updated",e)}}},cc={id:"tabs",class:"tabcontainer",style:{height:"70%","overflow-y":"scroll"}},dc={class:"tabs"},pc={class:"contentcontainer"},uc={class:"tabcontent"},fc={class:"tabcontent"},hc={class:"tabcontent"};function yc(e,t,s,n,o,l){const r=Ro("KeyValueTable");return v(),b("div",cc,[p("div",dc,[p("a",{onClick:t[0]||(t[0]=a=>o.activetab="1"),class:it([o.activetab==="1"?"active":""])},"Params",2),p("a",{onClick:t[1]||(t[1]=a=>o.activetab="2"),class:it([o.activetab==="2"?"active":""])},"Authorization",2),p("a",{onClick:t[2]||(t[2]=a=>o.activetab="3"),class:it([o.activetab==="3"?"active":""])},"Headers ",2)]),p("div",pc,[Ae(p("div",uc,[h(r,{onCommunicateParams:t[3]||(t[3]=a=>l.communicateParams(a,"params"))})],512),[[xs,o.activetab==="1"]]),Ae(p("div",fc,[h(r,{onCommunicateParams:t[4]||(t[4]=a=>l.communicateParams(a,"auth"))})],512),[[xs,o.activetab==="2"]]),Ae(p("div",hc,[h(r,{onCommunicateParams:t[5]||(t[5]=a=>l.communicateParams(a,"header"))})],512),[[xs,o.activetab==="3"]])])])}const mc=q(ic,[["render",yc],["__scopeId","data-v-ed8fb3b5"]]);const gc={name:"RestClient",components:{TabsWrapper:mc},data:function(){return{selectedMethod:"GET",url:this.link,tabs:{auth:[],header:[],params:[]},response:"",httpcode:"",headers:"",message:"Bienvenue ! Utilisez cette page simple pour explorer l'API. Spécifiez la méthode HTTP, l'URL et les paramètres, puis cliquez sur 'Envoyer'. Cette page nécessite un navigateur supportant le HTML5."}},props:["link"],methods:{onMethodChange(e){this.selectedMethod=e.target.value},handleDataUpdate(e){this.tabs=e,console.log("Received data from child component: ",e)},buildHeader(e){for(const t of this.tabs.header)t.key&&t.value&&(e.headers[t.key]=t.value);return e},buildPutBody(e){const t=new URLSearchParams;for(const s of this.tabs.params)t.append(s.key,s.value);return e.body=t.toString(),e.headers["Content-Type"]="application/x-www-form-urlencoded",e},prettifyXml(e,t){var s="",n="";return t=t||"	",e.split(/>\s*</).forEach(function(o){o.match(/^\/\w/)&&(n=n.substring(t.length)),s+=n+"<"+o+`>\r
`,o.match(/^<?\w[^>]*[^/]$/)&&(n+=t)}),s.substring(1,s.length-3)},buildPostBody(e){const t=new URLSearchParams;for(const s of this.tabs.params)t.append(s.key,s.value);return e.body=t.toString(),e.headers["Content-Type"]="application/x-www-form-urlencoded",e},async makeHttpRequest(){let e={method:this.selectedMethod,headers:{}};e=this.buildHeader(e),this.selectedMethod==="PUT"&&(e=this.buildPutBody(e)),this.selectedMethod==="POST"&&(e=this.buildPostBody(e)),this.tabs.authorization!=null&&this.tabs.authorization.length>0&&(e.headers.Authorization=`Bearer ${this.tabs.authorization}`);try{const t=await fetch(this.url,e);this.httpcode=t.status,this.headers="";for(let n of t.headers.entries())this.headers+=n+`
`;const s=t.headers.get("content-type");if(s==="application/json"){let n=await t.json();Array.isArray(n)&&(n=n.filter((o,l)=>l<500)),this.response=JSON.stringify(n,null,2)}else if(s==="application/xml"){let n=await t.text();this.response=this.prettifyXml(n)}else{let n=await t.text();this.response=n}}catch(t){this.message=t}}}},an=e=>(er("data-v-9b97db61"),e=e(),tr(),e),_c={class:"restcontainer"},vc={class:"request subcontainer"},bc=an(()=>p("h3",null,"Options de requête HTTP",-1)),wc=an(()=>p("hr",null,null,-1)),$c=E('<option value="GET" data-v-9b97db61>GET</option><option value="POST" data-v-9b97db61>POST</option><option value="OPTIONS" data-v-9b97db61>OPTIONS</option><option value="PUT" data-v-9b97db61>PUT</option><option value="DELETE" data-v-9b97db61>DELETE</option><option value="HEAD" data-v-9b97db61>HEAD</option>',6),Pc=[$c],qc={class:"httpcode subcontainer"},xc={class:"response subcontainer"},Sc={class:"header subcontainer"},Tc={class:"button subcontainer"},Cc=an(()=>p("span",null,"Envoyer ",-1)),Ec=[Cc],kc={class:"message subcontainer"};function Ac(e,t,s,n,o,l){const r=Ro("TabsWrapper");return v(),b("div",_c,[p("div",vc,[bc,wc,Ae(p("select",{"onUpdate:modelValue":t[0]||(t[0]=a=>e.selectedMethod=a),onChange:t[1]||(t[1]=(...a)=>l.onMethodChange&&l.onMethodChange(...a))},Pc,544),[[Ca,e.selectedMethod]]),Ae(p("input",{type:"text",class:"input-xlarge",id:"urlvalue","onUpdate:modelValue":t[2]||(t[2]=a=>e.url=a)},null,512),[[at,e.url]]),h(r,{onDataUpdated:l.handleDataUpdate},null,8,["onDataUpdated"])]),p("div",qc,[p("label",null,"Http Code: "+nl(this.httpcode),1)]),p("div",xc,[Ae(p("textarea",{readonly:"","onUpdate:modelValue":t[3]||(t[3]=a=>this.response=a)},null,512),[[at,this.response]])]),p("div",Sc,[Ae(p("textarea",{readonly:"","onUpdate:modelValue":t[4]||(t[4]=a=>e.headers=a)},null,512),[[at,e.headers]])]),p("div",Tc,[p("button",{style:{"vertical-align":"middle"},onClick:t[5]||(t[5]=(...a)=>l.makeHttpRequest&&l.makeHttpRequest(...a))},Ec)]),p("div",kc,[Ae(p("textarea",{readonly:"","onUpdate:modelValue":t[6]||(t[6]=a=>e.message=a)},null,512),[[at,e.message]])])])}const qe=q(gc,[["render",Ac],["__scopeId","data-v-9b97db61"]]),Rc={class:"slide"},Dc=p("div",{class:"heading"},"HTTP Protocol detour",-1),jc={class:"content"},Bc=p("p",null,"Voyons comment une requête GET pour une page HTML peut ressembler",-1),Lc={__name:"SlidePresentation12",setup(e){return(t,s)=>(v(),b("div",Rc,[Dc,p("div",jc,[Bc,h(qe,{link:"https://legacy.reactjs.org/docs/hello-world.html"})])]))}},Ic="/rest/assets/stop-35a0c514.svg",Oc={},Mc={class:"slide"},Fc=p("div",{class:"heading"},"HTTP Protocol detour",-1),Hc=p("div",{class:"content"},[p("p",null," Nous n'avons fait qu'effleurer la surface du protocole http. Nous pourrions passer une semaine entière à plonger dans les détails de la pile de protocoles. "),p("img",{src:Ic,style:{width:"40%"}})],-1),Nc=[Fc,Hc];function Jc(e,t){return v(),b("div",Mc,Nc)}const zc=q(Oc,[["render",Jc]]),Uc="/rest/assets/gmail-84f2f7ca.svg",Xc={},Wc={class:"slide"},Kc=E('<div class="heading">Client-side-rendering</div><div class="content"><div class="flex-container"><div style="width:45%;"><h2> D&#39;accord, le rendu côté client est plus complexe, alors pourquoi le faire ? </h2><br><p> Les sites web peuvent ressembler à des logiciels et ne sont pas limités par l&#39;interaction avec l&#39;utilisateur. </p><p> Dans cet exemple, le site Gmail demande toutes les 30 secondes si vous avez reçu un nouvel e-mail. </p></div><div style="width:50%;"><img src="'+Uc+'" style="width:100%;"></div></div></div>',2),Vc=[Kc];function Gc(e,t){return v(),b("div",Wc,Vc)}const Qc=q(Xc,[["render",Gc]]),Yc="/rest/assets/client-side-web-service-339cdc9b.svg",Zc={},ed={class:"slide"},td=p("div",{class:"heading"},"Client-side-rendering",-1),sd=p("div",{class:"content"},[p("p",null," Le rendu côté client et les services Web vont de pair. Sans service Web, le rendu côté client sera difficile. "),p("img",{src:Yc,style:{width:"47%"}})],-1),nd=[td,sd];function od(e,t){return v(),b("div",ed,nd)}const ld=q(Zc,[["render",od]]),rd="/rest/assets/languageView-9d1d53fd.png",ad="/rest/assets/client-and-appclient-fd0fc83b.svg",id={},cd={class:"slide"},dd=E('<div class="heading">Client-side-rendering</div><div class="content"><div class="flex-container"><div style="width:55%;"><p> Ce qui ne veut pas dire que seul le Presentation Tier (niveau) est client d&#39;un service web. Les serveurs peuvent également communiquer entre eux de cette manière. </p><p><b>Web scraper: </b>Quand je suis arrivé en France, j&#39;ai écrit un Web scraper utilisant l&#39;API pole emploi pour déterminer les besoins du marché de l&#39;emploi en Occitanie. </p><img src="'+rd+'" style="width:65%;"></div><div style="width:42%;"><img src="'+ad+'" style="width:100%;"></div></div></div>',2),pd=[dd];function ud(e,t){return v(),b("div",cd,pd)}const fd=q(id,[["render",ud]]),hd="/rest/assets/Hammock-74c4fe53.svg",yd={},md={class:"slide"},gd=E('<div class="heading">RESTful</div><div class="content"><div class="flex-container"><div style="width:50%;"><h3>Ressources adressables:</h3><p>chaque ressource doit être accessible via un URI</p><h3>Une interface uniforme et contraignante:</h3><p> Utilisez un petit ensemble de méthodes bien définies pour manipuler vos ressources. </p><h3>Orienté vers la représentation:</h3><p> Différentes plateformes ont besoin de différents formats.JavaScript = JSON, Java = XML </p><h3>Communiquer sans état:</h3><p>Les applications sans état sont plus faciles à faire évoluer</p><h3>HATEOAS:</h3><p> Laissez vos formats de données piloter les transitions d&#39;état dans vos applications. </p></div><div style="width:48%;"><img src="'+hd+'" style="width:100%;"></div></div></div>',2),_d=[gd];function vd(e,t){return v(),b("div",md,_d)}const bd=q(yd,[["render",vd]]),wd="/rest/assets/house-6327d8b9.svg",$d={},Pd={class:"slide"},qd=E(`<div class="heading">RESTful - Adressabilité</div><div class="content"><div class="flex-container"><div style="width:62%;"><p> Dans le monde REST, l&#39;adressabilité est gérée par l&#39;utilisation d&#39;URI </p><h3>Exemple:</h3><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;">            https:<span style="color:#333333;">//</span>jsonplaceholder<span style="color:#333333;">.</span>typicode<span style="color:#333333;">.</span>com<span style="color:#0000DD;background-color:#6bb0f5ff;">/todos/1</span></pre></div><p> Considérez l&#39;expression du chemin (&quot;/&quot;) comme la liste des répertoires d&#39;un fichier sur votre machine. </p><br><p> Le caractère &quot;?&quot; sépare le chemin d&#39;accès de la chaîne de requête. La chaîne de requête est une liste de paramètres représentés par des paires nom/valeur. Chaque paire est délimitée par le caractère &quot;&amp;&quot;. </p><h3>Exemple:</h3><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;">  https:<span style="color:#333333;">//</span>jsonplaceholder<span style="color:#333333;">.</span>typicode<span style="color:#333333;">.</span>com<span style="color:#0000DD;background-color:#6bb0f5ff;">/albums</span><span style="color:#FF0000;background-color:#FFAAAA;">?userId=1</span>
  https:<span style="color:#333333;">//</span>jsonplaceholder<span style="color:#333333;">.</span>typicode<span style="color:#333333;">.</span>com<span style="color:#0000DD;background-color:#6bb0f5ff;">/albums</span><span style="color:#FF0000;background-color:#FFAAAA;">?userId=1&amp;id=5</span></pre></div></div><div style="width:34%;"><img src="`+wd+'" style="width:100%;"></div></div></div>',2),xd=[qd];function Sd(e,t){return v(),b("div",Pd,xd)}const Td=q($d,[["render",Sd]]),Cd={class:"slide"},Ed=p("div",{class:"heading"},"RESTful - Adressabilité",-1),kd={class:"content"},Ad=p("p",null," Exercice: Pouvez-vous faire une requête REST pour obtenir la photo avec l'identifiant 5 ? ",-1),Rd={__name:"SlidePresentation19",setup(e){return(t,s)=>(v(),b("div",Cd,[Ed,p("div",kd,[Ad,h(qe,{link:"https://jsonplaceholder.typicode.com/photos"})])]))}},Dd={class:"slide"},jd=p("div",{class:"heading"},"RESTful - Adressabilité",-1),Bd={class:"content"},Ld=p("p",null," Exercice: Pouvez-vous faire une requête REST pour obtenir les photos dont l'identifiant de l'album associé est 10 ? ",-1),Id={__name:"SlidePresentation20",setup(e){return(t,s)=>(v(),b("div",Dd,[jd,p("div",Bd,[Ld,h(qe,{link:"https://jsonplaceholder.typicode.com/photos"})])]))}},Od={},Md={class:"slide"},Fd=E('<div class="heading">RESTful - L&#39;interface uniforme et contraignante</div><div class="content"><p> Vous vous en tenez aux l&#39;ensemble fini d&#39;opérations du protocole d&#39;application sur lequel vous distribuez vos services. </p><table><tbody><tr><th>HTTP method</th><th>Description</th></tr><tr><td>GET</td><td>Envoyer une ressource nommée du serveur au client</td></tr><tr><td>POST</td><td> Envoyer les données du client dans une application passerelle serveur </td></tr><tr><td>PUT</td><td> Stocker les données du client dans une ressource serveur nommée </td></tr><tr><td>DELETE</td><td>Supprime la ressource nommée d&#39;un serveur.</td></tr><tr><td>HEAD</td><td> Envoyer uniquement les en-têtes HTTP de la réponse pour la ressource nommée. </td></tr></tbody></table></div>',2),Hd=[Fd];function Nd(e,t){return v(),b("div",Md,Hd)}const Jd=q(Od,[["render",Nd]]),zd={},Ud={class:"slide"},Xd=E('<div class="heading">RESTful - L&#39;interface uniforme et contraignante</div><div class="content"><h2>Pourquoi l&#39;interface uniforme est-elle importante ?</h2><br><h3>Familiarité:</h3><p> Pas besoin d&#39;un fichier de type IDL décrivant les méthodes disponibles. Juste d&#39;une bibliothèque client HTTP. </p><br><h3>Interopérabilité</h3><p> La plupart des langages de programmation disposent d&#39;une bibliothèque client HTTP. Cela signifie que les applications Java peuvent dialoguer avec les applications Python, par exemple. </p><br><h3>Extensibilité</h3><p> Ajoutez la sémantique de la mise en cache HTTP sémantique à vos services web et vous disposez d&#39;un moyen incroyablement riche de définir des politiques de mise en cache pour vos services. </p></div>',2),Wd=[Xd];function Kd(e,t){return v(),b("div",Ud,Wd)}const Vd=q(zd,[["render",Kd]]),Gd={},Qd={class:"slide"},Yd=E(`<div class="heading">RESTful - L&#39;interface uniforme et contraignante</div><div class="content"><p> Puisque nous avons déjà fait du GET, nous pouvons directement faire un exemple avec du POST. Un post se présente comme suit: </p><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;">          {
            <span style="color:#007700;">&quot;userId&quot;</span>: <span style="color:#0000DD;font-weight:bold;">1</span>,
            <span style="color:#007700;">&quot;id&quot;</span>: <span style="color:#0000DD;font-weight:bold;">1</span>,
            <span style="color:#007700;">&quot;title&quot;</span>: <span style="background-color:#fff0f0;">&quot;sunt aut facere repellat ... optio reprehenderit&quot;</span>,
            <span style="color:#007700;">&quot;body&quot;</span>: <span style="background-color:#fff0f0;">&quot;quia et suscipit\\nsuscipit ... rem eveniet architecto&quot;</span>
          }</pre></div><p> Je veux maintenant ajouter un nouveau post en utilisant la méthode HTTP POST </p><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;">          {
            <span style="color:#007700;">&quot;userId&quot;</span>: <span style="background-color:#fff0f0;">&quot;1&quot;</span>,
            <span style="color:#007700;">&quot;title&quot;</span>: <span style="background-color:#fff0f0;">&quot;BGE Web Service cours&quot;</span>,
            <span style="color:#007700;">&quot;body&quot;</span>: <span style="background-color:#fff0f0;">&quot;Ce post n&#39;est pas vraiment persisté puisqu&#39;il ne s&#39;agit que d&#39;une API factice,</span>
                <span style="background-color:#fff0f0;"> mais cela montre tout de même comment cela fonctionne.&quot;</span>,
            <span style="color:#007700;">&quot;id&quot;</span>: <span style="color:#0000DD;font-weight:bold;">5001</span>
          }</pre></div></div>`,2),Zd=[Yd];function ep(e,t){return v(),b("div",Qd,Zd)}const tp=q(Gd,[["render",ep]]),sp={class:"slide"},np=p("div",{class:"heading"},"RESTful - L'interface uniforme et contraignante",-1),op={class:"content"},lp=p("p",null,' Sélectionnez POST et cliquez sur le bouton "Add parameter".Cela permet de spécifier les paires clé/valeur telles que le title, body et userId. ',-1),rp={__name:"SlidePresentation24",setup(e){return(t,s)=>(v(),b("div",sp,[np,p("div",op,[lp,h(qe,{link:"https://jsonplaceholder.typicode.com/photos"})])]))}},ap="/rest/assets/BasketSeller-55ae681f.svg",ip={},cp={class:"slide"},dp=E(`<div class="heading">RESTful - Orienté représentation</div><div class="content"><div class="flex-container"><div style="width:66%;"><p> Les représentations peuvent être XML, JSON, YAML, ou tout autre format que vous pouvez imaginer. </p><p> HTTP utilise l&#39;en-tête Content-Type pour indiquer au client ou au serveur le format des données qu&#39;il reçoit </p><h3>En voici quelques exemples:</h3><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;">        text<span style="color:#333333;">/</span>plain
        text<span style="color:#333333;">/</span>html
        application<span style="color:#333333;">/</span>xml
        text<span style="color:#333333;">/</span>html; charset<span style="color:#333333;">=</span>iso<span style="color:#6600EE;font-weight:bold;">-8859-1</span></pre></div><br><p> Avec l&#39;en-tête Accept, un client peut dresser la liste de ses formats de réponse préférés. </p><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;">            Accept: application<span style="color:#333333;">/</span>json
            Accept: application<span style="color:#333333;">/</span>xml
            Accept: application<span style="color:#333333;">/</span>yaml</pre></div></div><div style="width:32%;"><img src="`+ap+'" style="width:100%;"></div></div></div>',2),pp=[dp];function up(e,t){return v(),b("div",cp,pp)}const fp=q(ip,[["render",up]]),hp={class:"slide"},yp=p("div",{class:"heading"},"RESTful - Orienté représentation",-1),mp={class:"content"},gp=p("p",null,"Voyons comment une api REST peut fonctionner avec JSON et XML.",-1),_p={__name:"SlidePresentation26",setup(e){return(t,s)=>(v(),b("div",hp,[yp,p("div",mp,[gp,h(qe,{link:"http://mockbin.com/request?foo=bar&foo=baz"})])]))}},vp="/rest/assets/eatingTail-1127c59e.svg",bp={},wp={class:"slide"},$p=E('<div class="heading">RESTful - Communiquer sans état</div><div class="content"><div class="flex-container"><div style="width:60%;"><h2> Avec REST, il n&#39;y a pas de session client sauvegardée sur le serveur. </h2><p> Le serveur ne fait qu&#39;enregistrer et gérer l&#39;état des ressources qu&#39;il expose. </p><p><span style="font-size:1.6rem;">→</span> Il y a 25-30 ans, les clients lourds s&#39;occupaient des sessions des clients. </p><p><span style="font-size:1.6rem;">→</span> Nous avons commencé à maintenir des sessions client sur le serveur en raison des limites du navigateur. </p><p><span style="font-size:1.6rem;">→</span> Vers 2008, les navigateurs sont devenus suffisamment sophistiqués pour maintenir leur propre état de session. </p><br><h2>La boucle est bouclée</h2></div><div style="width:38%;"><img src="'+vp+'" style="width:100%;"></div></div></div>',2),Pp=[$p];function qp(e,t){return v(),b("div",wp,Pp)}const xp=q(bp,[["render",qp]]),Sp={},Tp={class:"slide"},Cp=E(`<div class="heading">RESTful - HATEOAS</div><div class="content"><h2>Hypermedia As The Engine Of Application State</h2><p>Permet de réaliser une navigation à travers l&#39;API</p><p> Chaque requête renvoyée par un serveur vous indique les nouvelles interactions que vous pouvez effectuer ensuite, ainsi que l&#39;endroit où vous devez vous rendre pour faire évoluer l&#39;état de vos applications. </p><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;">        <span style="color:#007700;">&quot;account&quot;</span>: {
            <span style="color:#007700;">&quot;account_number&quot;</span>: <span style="color:#0000DD;font-weight:bold;">12345</span>,
            <span style="color:#007700;">&quot;balance&quot;</span>: {
                <span style="color:#007700;">&quot;currency&quot;</span>: <span style="background-color:#fff0f0;">&quot;usd&quot;</span>,
                <span style="color:#007700;">&quot;value&quot;</span>: <span style="color:#6600EE;font-weight:bold;">100.00</span>
            },
            <span style="color:#007700;">&quot;links&quot;</span>: {
                <span style="color:#007700;">&quot;deposits&quot;</span>: <span style="background-color:#fff0f0;">&quot;/accounts/12345/deposits&quot;</span>,
                <span style="color:#007700;">&quot;withdrawals&quot;</span>: <span style="background-color:#fff0f0;">&quot;/accounts/12345/withdrawals&quot;</span>,
                <span style="color:#007700;">&quot;transfers&quot;</span>: <span style="background-color:#fff0f0;">&quot;/accounts/12345/transfers&quot;</span>,
            }
        }</pre></div></div>`,2),Ep=[Cp];function kp(e,t){return v(),b("div",Tp,Ep)}const Ap=q(Sp,[["render",kp]]),Rp="/rest/assets/ajax-7a960e51.svg",Dp={},jp={class:"slide"},Bp=E('<div class="heading">Javascript - AJAX</div><div class="content"><div class="flex-container"><div style="width:70%;"><h2>AJAX signifie <b>Asynchronous JavaScript and XML</b>.</h2><br><p> “L&#39;AJAX” est aujourd&#39;hui un terme générique utilisé pour désigner toute technique côté client (côté navigateur) permettant d&#39;envoyer et de récupérer des données depuis un serveur et de mettre à jour dynamiquement le DOM sans nécessiter l&#39;actualisation complète de la page. </p><h3>XMLHttpRequest</h3><p> La première façon populaire de faire de l&#39;ajax dans le navigateur </p><h3>jquery.ajax()</h3><p> jQuery.ajax() utilise en interne XMLHttpRequest mais est plus facile à utiliser. </p><h3>fetch API</h3><p> nouvelle API qui n&#39;utilise pas XMLHttpRequest mais qui est plus facile à utiliser </p><h2>fetch API est ma méthode préférée</h2></div><div style="width:23%;"><img src="'+Rp+'" style="width:100%;"></div></div></div>',2),Lp=[Bp];function Ip(e,t){return v(),b("div",jp,Lp)}const Op=q(Dp,[["render",Ip]]),Mp="/rest/assets/synchron-async-f18d6390.svg",Fp={},Hp={class:"slide"},Np=E(`<div class="heading">Javascript - AJAX</div><div class="content"><div class="flex-container"><div style="width:53%;"><h2>Qu&#39;est-ce que le JavaScript asynchrone ?</h2><br><h3>Exemple de callback synchrone</h3><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;">            <span style="color:#008800;font-weight:bold;">function</span> callback(city) {
              console.log(city);
            }
            cities.forEach(callback);</pre></div><br><h3>Exemple de callback asynchrone</h3><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;">            <span style="color:#008800;font-weight:bold;">function</span> repositionElement() {
              console.log(<span style="background-color:#fff0f0;">&#39;repositionnement !&#39;</span>);
            }
            <span style="color:#007020;">window</span>.requestAnimationFrame(repositionElement);
            console.log(<span style="background-color:#fff0f0;">&#39;Je suis la dernière ligne du script&#39;</span>);
            <span style="color:#888888;">// Console output:</span>
            <span style="color:#888888;">// Je suis la dernière ligne du script</span>
            <span style="color:#888888;">// repositionnement !</span></pre></div></div><div style="width:45%;"><img src="`+Mp+'" style="width:100%;"></div></div></div>',2),Jp=[Np];function zp(e,t){return v(),b("div",Hp,Jp)}const Up=q(Fp,[["render",zp]]),Xp={},Wp={class:"slide"},Kp=p("div",{class:"heading"},"Javascript - AJAX",-1),Vp=p("div",{class:"content"},[p("div",{class:"iFrame-container","data-link":"https://codesandbox.io/embed/async-requestanimationframe-w7g1w4?fontsize=14&hidenavigation=1&theme=dark"},[p("iframe",{src:"lightswitch.html",width:"100%",height:"100%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),Gp=[Kp,Vp];function Qp(e,t){return v(),b("div",Wp,Gp)}const Yp=q(Xp,[["render",Qp]]),Zp="/rest/assets/ladies-hand-with-diamond-ring-c376c43e.svg",e3={},t3={class:"slide"},s3=E(`<div class="heading">Javascript - Promise</div><div class="content"><div class="flex-container"><div style="width:50%;"><p> Une Promise est un objet qui sert d&#39;espace réservé pour une valeur. Cette valeur est généralement le résultat d&#39;une opération asynchrone telle qu&#39;une requête HTTP ou la lecture d&#39;un fichier sur le disque. </p><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;">    <span style="color:#008800;font-weight:bold;">let</span> myPromise <span style="color:#333333;">=</span> <span style="color:#008800;font-weight:bold;">new</span> Promise(<span style="color:#008800;font-weight:bold;">function</span>(myResolve, myReject) {
      <span style="color:#888888;">// &quot;Producing Code&quot; (Ça peut prendre du temps)</span>

    myResolve(); <span style="color:#888888;">// en cas de succès</span>
    myReject();  <span style="color:#888888;">// en cas d&#39;erreur</span>
    });

    <span style="color:#888888;">//&quot;Code consommé&quot; (doit attendre une promesse accomplie)</span>
    myPromise.then(
    <span style="color:#008800;font-weight:bold;">function</span>(value) { <span style="color:#888888;">/* code en cas de succès */</span> },
    <span style="color:#008800;font-weight:bold;">function</span>(error) { <span style="color:#888888;">/* code en cas d&#39;erreur */</span> }
    );</pre></div></div><div style="width:45%;"><br><img src="`+Zp+'" style="width:100%;"></div></div></div>',2),n3=[s3];function o3(e,t){return v(),b("div",t3,n3)}const l3=q(e3,[["render",o3]]),r3={},a3={class:"slide"},i3=p("div",{class:"heading"},"Javascript - Promise",-1),c3=p("div",{class:"content"},[p("p",null,"Examinons d'abord une manière familière de charger une image"),p("div",{class:"iFrame-container","data-link":"https://codesandbox.io/embed/callback-image-load-0429rj?fontsize=14&hidenavigation=1&theme=dark"},[p("iframe",{src:"lightswitch.html",width:"100%",height:"100%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),d3=[i3,c3];function p3(e,t){return v(),b("div",a3,d3)}const u3=q(r3,[["render",p3]]),f3={},h3={class:"slide"},y3=p("div",{class:"heading"},"Javascript - Promise",-1),m3=p("div",{class:"content"},[p("p",null,"Faisons maintenant la même chose en utilisant Promise"),p("div",{class:"iFrame-container","data-link":"https://codesandbox.io/embed/holy-waterfall-ljtnzm?fontsize=14&hidenavigation=1&theme=dark"},[p("iframe",{src:"lightswitch.html",width:"100%",height:"100%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),g3=[y3,m3];function _3(e,t){return v(),b("div",h3,g3)}const v3=q(f3,[["render",_3]]),b3="/rest/assets/promisestates-b97a0c17.svg",w3={},$3={class:"slide"},P3=E('<div class="heading">Javascript - Promise</div><div class="content"><div class="flex-container"><div style="width:40%;"><h2>Promise States</h2><br><h3>Pending:</h3><p>L&#39;opération n&#39;a pas commencé ou est en cours.</p><br><h3>Fulfilled:</h3><p>L&#39;opération est terminée</p><br><h3>Rejected:</h3><p>L&#39;opération n&#39;a pas pu être achevée.</p></div><div style="width:60%;"><img src="'+b3+'" style="width:100%;"></div></div></div>',2),q3=[P3];function x3(e,t){return v(),b("div",$3,q3)}const S3=q(w3,[["render",x3]]),T3={},C3={class:"slide"},E3=p("div",{class:"heading"},"Javascript - Promise",-1),k3=p("div",{class:"content"},[p("p",null,"Examinons une version simplifiée de la classe Promise"),p("div",{class:"iFrame-container","data-link":"https://onecompiler.com/embed/javascript/3z49g2khy"},[p("iframe",{src:"lightswitch.html",width:"100%",height:"100%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),A3=[E3,k3];function R3(e,t){return v(),b("div",C3,A3)}const D3=q(T3,[["render",R3]]),j3={},B3={class:"slide"},L3=p("div",{class:"heading"},"Javascript - Promise",-1),I3=p("div",{class:"content"},[p("p",null," setTimout prend un callback. Comparons Promise et le callback classique "),p("div",{class:"iFrame-container","data-link":"https://onecompiler.com/embed/javascript/3z499a279"},[p("iframe",{src:"lightswitch.html",width:"100%",height:"100%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),O3=[L3,I3];function M3(e,t){return v(),b("div",B3,O3)}const F3=q(j3,[["render",M3]]),H3="/rest/assets/Pyramid2-9d1cd16a.svg",N3={},J3={class:"slide"},z3=E(`<div class="heading">Javascript - Promise</div><div class="content"><div class="flex-container"><div style="width:50%;"><h2>Chaining Callbacks</h2><br><p> Autrefois, l&#39;exécution de plusieurs opérations asynchrones à la suite conduisait à la pyramide classique des callbacks. </p><br><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;">            doSomething(<span style="color:#008800;font-weight:bold;">function</span> (result) {
              doSomethingElse(result, <span style="color:#008800;font-weight:bold;">function</span> (newResult) {
                doThirdThing(newResult, <span style="color:#008800;font-weight:bold;">function</span> (finalResult) {
                  console.log(<span style="color:#FF0000;background-color:#FFAAAA;">\`</span>Got the <span style="color:#008800;font-weight:bold;">final</span> result<span style="color:#333333;">:</span> \${finalResult}<span style="color:#FF0000;background-color:#FFAAAA;">\`</span>);
                }, failureCallback);
              }, failureCallback);
            }, failureCallback);</pre></div></div><div style="width:48%;"><img src="`+H3+'" style="width:100%;"></div></div></div>',2),U3=[z3];function X3(e,t){return v(),b("div",J3,U3)}const W3=q(N3,[["render",X3]]),K3="/rest/assets/promisechain-364b1360.svg",V3={},G3={class:"slide"},Q3=E(`<div class="heading">Javascript - Promise</div><div class="content"><div class="flex-container"><div style="width:35%;"><h2>Chaining Promises</h2><br><p> Avec les promesses, nous y parvenons en créant une chaîne de promesses. </p><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;">        doSomething()
            .then(<span style="color:#008800;font-weight:bold;">function</span> (result) {
              <span style="color:#008800;font-weight:bold;">return</span> doSomethingElse(result);
            })
            .then(<span style="color:#008800;font-weight:bold;">function</span> (newResult) {
              <span style="color:#008800;font-weight:bold;">return</span> doThirdThing(newResult);
            })
            .then(<span style="color:#008800;font-weight:bold;">function</span> (finalResult) {
              console.log(<span style="color:#FF0000;background-color:#FFAAAA;">\`</span>Got the <span style="color:#008800;font-weight:bold;">final</span> result<span style="color:#333333;">:</span> \${finalResult}<span style="color:#FF0000;background-color:#FFAAAA;">\`</span>);
            })
            .<span style="color:#008800;font-weight:bold;">catch</span>(failureCallback);</pre></div></div><div style="width:63%;"><br><img src="`+K3+'" style="width:100%;"></div></div></div>',2),Y3=[Q3];function Z3(e,t){return v(),b("div",G3,Y3)}const eu=q(V3,[["render",Z3]]),tu={},su={class:"slide"},nu=p("div",{class:"heading"},"RESTful Javascript - AJAX",-1),ou=p("div",{class:"content"},[p("p",null," Voyons comment le chaînage de promesses est utilisé pour le fetch API "),p("div",{class:"iFrame-container","data-link":"https://replit.com/@DupondDupont/APIDemo?embed=1"},[p("iframe",{src:"lightswitch.html",width:"100%",height:"97%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),lu=[nu,ou];function ru(e,t){return v(),b("div",su,lu)}const au=q(tu,[["render",ru]]),iu={},cu={class:"slide"},du=p("div",{class:"heading"},"RESTful Javascript - AJAX",-1),pu=p("div",{class:"content"},[p("h2",null,[Gt(` Exercice: Pouvez-vous me faire un tableau de présentation à partir des données "posts" similaire à ce que j'ai fait dans la diapositive précédente ? `),p("a",{href:"https://jsonplaceholder.typicode.com/posts"},"https://jsonplaceholder.typicode.com/posts")]),p("br"),p("p",null,"Vous pouvez copier-coller et adapter ce que j'ai fait"),p("br"),p("h2",null,[Gt(" Bonus Exercice: utilisez l'api photos et générez une galerie "),p("a",{href:"https://jsonplaceholder.typicode.com/photos"},"https://jsonplaceholder.typicode.com/photos")])],-1),uu=[du,pu];function fu(e,t){return v(),b("div",cu,uu)}const hu=q(iu,[["render",fu]]),yu={},mu={class:"slide"},gu=p("div",{class:"heading"},"RESTful Javascript - AJAX",-1),_u=p("div",{class:"content"},[p("p",null," C'est une galerie de photos boiteuse et je l'ai réduite à seulement 20 images, mais vous voyez l'idée. "),p("div",{class:"iFrame-container","data-link":"https://replit.com/@DupondDupont/photoGalery?embed=1"},[p("iframe",{src:"lightswitch.html",width:"100%",height:"97%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),vu=[gu,_u];function bu(e,t){return v(),b("div",mu,vu)}const wu=q(yu,[["render",bu]]),zo="/rest/assets/classDiaModel-2aca773f.svg",$u={},Pu={class:"slide"},qu=E(`<div class="heading">Conception de services RESTful</div><div class="content"><div class="flex-container"><div style="width:55%;"><h2>Modéliser les URI</h2><br><p> Nous voulons naviguer la personne et le compte bancaire dans notre REST API. </p><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;">            <span style="color:#0066BB;font-weight:bold;">/persons</span>
            <span style="color:#0066BB;font-weight:bold;">/persons/{id}</span>
            <span style="color:#0066BB;font-weight:bold;">/bankaccount</span>
            <span style="color:#0066BB;font-weight:bold;">/bankaccount/{id}</span></pre></div><br><p>Ces 4 adresses sont tout ce dont nous avons besoin</p></div><div style="width:42%;"><img src="`+zo+'" style="width:100%;"></div></div></div>',2),xu=[qu];function Su(e,t){return v(),b("div",Pu,xu)}const Tu=q($u,[["render",Su]]),Cu={},Eu={class:"slide"},ku=E(`<div class="heading">Conception de services RESTful</div><div class="content"><div class="flex-container"><div style="width:55%;"><h2>Définition du format des données</h2><p>Nous allons travailler avec JSON pour l&#39;instant</p><h3>Person</h3><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;">              {
                <span style="color:#007700;">&quot;personNum&quot;</span>: <span style="color:#0000DD;font-weight:bold;">1</span>,
                <span style="color:#007700;">&quot;firstName&quot;</span>: <span style="background-color:#fff0f0;">&quot;Kilian&quot;</span>,
                <span style="color:#007700;">&quot;lastName&quot;</span>: <span style="background-color:#fff0f0;">&quot;Schropp&quot;</span>,
                <span style="color:#007700;">&quot;age&quot;</span>: <span style="color:#0000DD;font-weight:bold;">30</span>
              }</pre></div><br><h3>BankAccount</h3><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;">              {
                <span style="color:#007700;">&quot;accountIdentifier&quot;</span>: <span style="background-color:#fff0f0;">&quot;123456&quot;</span>,
                <span style="color:#007700;">&quot;accountOwnerID&quot;</span>: <span style="color:#0000DD;font-weight:bold;">1</span>, 
                <span style="color:#007700;">&quot;bankConsultantID&quot;</span>: <span style="color:#0000DD;font-weight:bold;">2</span>, 
                <span style="color:#007700;">&quot;bankName&quot;</span>: <span style="background-color:#fff0f0;">&quot;BGE bank&quot;</span>
              }</pre></div></div><div style="width:42%;"><img src="`+zo+'" style="width:100%;"></div></div></div>',2),Au=[ku];function Ru(e,t){return v(),b("div",Eu,Au)}const Du=q(Cu,[["render",Ru]]),ju={},Bu={class:"slide"},Lu=E(`<div class="heading">Conception de services RESTful</div><div class="content"><div class="flex-container"><div style="width:48%;"><h2>Consultation des personnes</h2><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;">            <span style="color:#007700;">GET</span> /persons HTTP/1.1</pre></div><br><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;">            [
              {
                <span style="color:#007700;">&quot;personNum&quot;</span>: <span style="color:#0000DD;font-weight:bold;">1</span>,
                <span style="color:#007700;">&quot;firstName&quot;</span>: <span style="background-color:#fff0f0;">&quot;Kilian&quot;</span>,
                <span style="color:#007700;">&quot;lastName&quot;</span>: <span style="background-color:#fff0f0;">&quot;Schropp&quot;</span>,
                <span style="color:#007700;">&quot;age&quot;</span>: <span style="color:#0000DD;font-weight:bold;">28</span>
              },
              {
                <span style="color:#007700;">&quot;personNum&quot;</span>: <span style="color:#0000DD;font-weight:bold;">2</span>,
                <span style="color:#007700;">&quot;firstName&quot;</span>: <span style="background-color:#fff0f0;">&quot;Jane&quot;</span>,
                <span style="color:#007700;">&quot;lastName&quot;</span>: <span style="background-color:#fff0f0;">&quot;Doe&quot;</span>,
                <span style="color:#007700;">&quot;age&quot;</span>: <span style="color:#0000DD;font-weight:bold;">25</span>
              },
              ...
            ]</pre></div></div><div style="width:48%;"><h2>Consultation des bankaccounts</h2><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;">            <span style="color:#007700;">GET</span> /bankaccounts HTTP/1.1</pre></div><br><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;">            [
              {
                <span style="color:#007700;">&quot;accountIdentifier&quot;</span>: <span style="background-color:#fff0f0;">&quot;123456&quot;</span>,
                <span style="color:#007700;">&quot;accountOwnerID&quot;</span>: <span style="color:#0000DD;font-weight:bold;">1</span>, 
                <span style="color:#007700;">&quot;bankConsultantID&quot;</span>: <span style="color:#0000DD;font-weight:bold;">2</span>, 
                <span style="color:#007700;">&quot;bankName&quot;</span>: <span style="background-color:#fff0f0;">&quot;BGE bank&quot;</span>
              },
              {
                <span style="color:#007700;">&quot;accountIdentifier&quot;</span>: <span style="background-color:#fff0f0;">&quot;123457&quot;</span>,
                <span style="color:#007700;">&quot;accountOwnerID&quot;</span>: <span style="color:#0000DD;font-weight:bold;">3</span>, 
                <span style="color:#007700;">&quot;bankConsultantID&quot;</span>: <span style="color:#0000DD;font-weight:bold;">4</span>, 
                <span style="color:#007700;">&quot;bankName&quot;</span>: <span style="background-color:#fff0f0;">&quot;Kilian bank or whatever&quot;</span>
              },
              ...
            ]</pre></div></div></div></div>`,2),Iu=[Lu];function Ou(e,t){return v(),b("div",Bu,Iu)}const Mu=q(ju,[["render",Ou]]),kt="/rest/assets/zip-file-64b1e69f.svg",Fu={},Hu={class:"slide"},Nu=E('<div class="heading">RESTful - Réalisation</div><div class="content"><div class="flex-container" style="overflow-y:scroll;height:100%;"><div style="width:48%;"><h2>Rapide et sale</h2><br><p> L&#39;exemple suivant suppose des connaissances en matière de JSP et de Servlets. Je ne les expliquerai pas en détail puisque ce n&#39;est pas le but de ce cours. </p><br><p>REST peut être construit au-dessus du HttpServlet.</p><a href="/solutions/rest/REST-simple-solution.zip" download="REST-simple-solution.zip"><img src="'+kt+`" style="width:20%;">Download zip exemple</a></div><div style="width:48%;"><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;">            <span style="color:#555555;font-weight:bold;">@WebServlet</span><span style="color:#333333;">(</span>
                    name <span style="color:#333333;">=</span> <span style="background-color:#fff0f0;">&quot;PersonServlet&quot;</span><span style="color:#333333;">,</span>
                    urlPatterns <span style="color:#333333;">=</span> <span style="color:#333333;">{</span><span style="background-color:#fff0f0;">&quot;/persons&quot;</span><span style="color:#333333;">}</span>
                <span style="color:#333333;">)</span>
            <span style="color:#008800;font-weight:bold;">public</span> <span style="color:#008800;font-weight:bold;">class</span> <span style="color:#BB0066;font-weight:bold;">PersonServlet</span> <span style="color:#008800;font-weight:bold;">extends</span> HttpServlet <span style="color:#333333;">{</span>

              ...

              <span style="color:#555555;font-weight:bold;">@Override</span>
              <span style="color:#008800;font-weight:bold;">protected</span> <span style="color:#333399;font-weight:bold;">void</span> <span style="color:#0066BB;font-weight:bold;">doGet</span><span style="color:#333333;">(</span>HttpServletRequest request<span style="color:#333333;">,</span> HttpServletResponse response<span style="color:#333333;">)</span>
                        <span style="color:#008800;font-weight:bold;">throws</span> ServletException<span style="color:#333333;">,</span> IOException <span style="color:#333333;">{</span>
                    response<span style="color:#333333;">.</span><span style="color:#0000CC;">setContentType</span><span style="color:#333333;">(</span><span style="background-color:#fff0f0;">&quot;application/json&quot;</span><span style="color:#333333;">);</span>
                    response<span style="color:#333333;">.</span><span style="color:#0000CC;">setHeader</span><span style="color:#333333;">(</span><span style="background-color:#fff0f0;">&quot;Access-Control-Allow-Origin&quot;</span><span style="color:#333333;">,</span> <span style="background-color:#fff0f0;">&quot;*&quot;</span><span style="color:#333333;">);</span>
                    
                    ObjectMapper objectMapper <span style="color:#333333;">=</span> <span style="color:#008800;font-weight:bold;">new</span> ObjectMapper<span style="color:#333333;">();</span>
                    ObjectWriter objectWriter <span style="color:#333333;">=</span> objectMapper<span style="color:#333333;">.</span><span style="color:#0000CC;">writerWithDefaultPrettyPrinter</span><span style="color:#333333;">();</span>
                    String json <span style="color:#333333;">=</span> objectWriter<span style="color:#333333;">.</span><span style="color:#0000CC;">writeValueAsString</span><span style="color:#333333;">(</span>persons<span style="color:#333333;">);</span>
                    PrintWriter out <span style="color:#333333;">=</span> response<span style="color:#333333;">.</span><span style="color:#0000CC;">getWriter</span><span style="color:#333333;">();</span>
                    out<span style="color:#333333;">.</span><span style="color:#0000CC;">println</span><span style="color:#333333;">(</span>json<span style="color:#333333;">);</span>
                <span style="color:#333333;">}</span>
              
              <span style="color:#555555;font-weight:bold;">@Override</span>
                <span style="color:#008800;font-weight:bold;">protected</span> <span style="color:#333399;font-weight:bold;">void</span> <span style="color:#0066BB;font-weight:bold;">doPost</span><span style="color:#333333;">(</span>HttpServletRequest request<span style="color:#333333;">,</span> HttpServletResponse response<span style="color:#333333;">)</span> <span style="color:#008800;font-weight:bold;">throws</span> ServletException<span style="color:#333333;">,</span> IOException <span style="color:#333333;">{</span>
                    response<span style="color:#333333;">.</span><span style="color:#0000CC;">setContentType</span><span style="color:#333333;">(</span><span style="background-color:#fff0f0;">&quot;application/json&quot;</span><span style="color:#333333;">);</span>
                    response<span style="color:#333333;">.</span><span style="color:#0000CC;">setHeader</span><span style="color:#333333;">(</span><span style="background-color:#fff0f0;">&quot;Access-Control-Allow-Origin&quot;</span><span style="color:#333333;">,</span> <span style="background-color:#fff0f0;">&quot;*&quot;</span><span style="color:#333333;">);</span>
                    <span style="color:#008800;font-weight:bold;">final</span> String firstName <span style="color:#333333;">=</span> request<span style="color:#333333;">.</span><span style="color:#0000CC;">getParameter</span><span style="color:#333333;">(</span><span style="background-color:#fff0f0;">&quot;fname&quot;</span><span style="color:#333333;">);</span>
                    <span style="color:#008800;font-weight:bold;">final</span> String lastName <span style="color:#333333;">=</span> request<span style="color:#333333;">.</span><span style="color:#0000CC;">getParameter</span><span style="color:#333333;">(</span><span style="background-color:#fff0f0;">&quot;lname&quot;</span><span style="color:#333333;">);</span>
                    <span style="color:#008800;font-weight:bold;">final</span> <span style="color:#333399;font-weight:bold;">int</span> age <span style="color:#333333;">=</span> Integer<span style="color:#333333;">.</span><span style="color:#0000CC;">parseInt</span><span style="color:#333333;">(</span>request<span style="color:#333333;">.</span><span style="color:#0000CC;">getParameter</span><span style="color:#333333;">(</span><span style="background-color:#fff0f0;">&quot;age&quot;</span><span style="color:#333333;">));</span>
                    <span style="color:#333399;font-weight:bold;">long</span> personNum <span style="color:#333333;">=</span> persons<span style="color:#333333;">.</span><span style="color:#0000CC;">size</span><span style="color:#333333;">()</span> <span style="color:#333333;">+</span> <span style="color:#0000DD;font-weight:bold;">1</span><span style="color:#333333;">;</span>
                    Person person <span style="color:#333333;">=</span> <span style="color:#008800;font-weight:bold;">new</span> Person<span style="color:#333333;">(</span>personNum<span style="color:#333333;">,</span> firstName<span style="color:#333333;">,</span> lastName<span style="color:#333333;">,</span> age<span style="color:#333333;">);</span>
                    persons<span style="color:#333333;">.</span><span style="color:#0000CC;">add</span><span style="color:#333333;">(</span>person<span style="color:#333333;">);</span>
                    
                    ObjectMapper mapper <span style="color:#333333;">=</span> <span style="color:#008800;font-weight:bold;">new</span> ObjectMapper<span style="color:#333333;">();</span>
                    ObjectWriter objectWriter <span style="color:#333333;">=</span> mapper<span style="color:#333333;">.</span><span style="color:#0000CC;">writerWithDefaultPrettyPrinter</span><span style="color:#333333;">();</span>
                    String json <span style="color:#333333;">=</span> objectWriter<span style="color:#333333;">.</span><span style="color:#0000CC;">writeValueAsString</span><span style="color:#333333;">(</span>person<span style="color:#333333;">);</span>
                    PrintWriter out <span style="color:#333333;">=</span> response<span style="color:#333333;">.</span><span style="color:#0000CC;">getWriter</span><span style="color:#333333;">();</span>
                    out<span style="color:#333333;">.</span><span style="color:#0000CC;">println</span><span style="color:#333333;">(</span>json<span style="color:#333333;">);</span>
              <span style="color:#333333;">}</span>
            <span style="color:#333333;">}</span></pre></div></div></div></div>`,2),Ju=[Nu];function zu(e,t){return v(),b("div",Hu,Ju)}const Uu=q(Fu,[["render",zu]]),Xu={class:"slide"},Wu=p("div",{class:"heading"},"RESTful - Réalisation",-1),Ku={class:"content"},Vu=p("p",null,` Exercice: Lancez le projet et essayez d'appeler le point de terminaison REST "/persons" à l'aide de la méthode GET. `,-1),Gu={__name:"SlidePresentation47",setup(e){return(t,s)=>(v(),b("div",Xu,[Wu,p("div",Ku,[Vu,h(qe,{link:"http://localhost:8080/persons"})])]))}},Qu={class:"slide"},Yu=p("div",{class:"heading"},"RESTful - Réalisation",-1),Zu={class:"content"},ef=p("p",null," Exercice: Essayez de créer une nouvelle personne en utilisant la méthode POST. Vérifiez avec la méthode GET que la nouvelle personne a été créée correctement. ",-1),tf={__name:"SlidePresentation48",setup(e){return(t,s)=>(v(),b("div",Qu,[Yu,p("div",Zu,[ef,h(qe,{link:"http://localhost:8080/persons"})])]))}},sf={class:"slide"},nf=p("div",{class:"heading"},"RESTful - Réalisation",-1),of={class:"content"},lf=p("p",null," Bonus Exercice: Ajouter le modèle BankAccount au projet et créer un point de terminaison GET et POST pour interroger les comptes bancaires et les créer (comme je l'ai fait dans Person). ",-1),rf={__name:"SlidePresentation49",setup(e){return(t,s)=>(v(),b("div",sf,[nf,p("div",of,[lf,h(qe,{link:"http://localhost:8080/persons"})])]))}},af="/rest/assets/machinetranslation-1926-00da545e.svg",cf={},df={class:"slide"},pf=E('<div class="heading">RESTful - JAX RS</div><div class="content"><div class="flex-container"><div style="width:67%;"><p> Les servlets nécessitent beaucoup de code de base pour transférer des informations vers et depuis une requête HTTP. </p><p> JAX-RS a été définie pour simplifier la mise en œuvre des services RESTful </p><h3><span style="font-size:2rem;">↪</span> Annotations sur les POJOs </h3><h3><span style="font-size:2rem;">↪</span> Lier des URI et des opérations HTTP à des méthodes </h3><h3><span style="font-size:2rem;">↪</span> Message Body Readers et Writers </h3><h3><span style="font-size:2rem;">↪</span> Associer une exception à un code de réponse HTTP et à un message </h3><h3><span style="font-size:2rem;">↪</span> De belles facilités pour HTTP négociation du contenu </h3></div><div style="width:31%;"><img src="'+af+'" style="width:100%;"></div></div></div>',2),uf=[pf];function ff(e,t){return v(),b("div",df,uf)}const hf=q(cf,[["render",ff]]),yf={},mf={class:"slide"},gf=E(`<div class="heading">RESTful - JAX RS</div><div class="content"><h2>Classe de données</h2><p>Dans notre cas, les classes de données sont Person et BankAccount.</p><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;">        <span style="color:#008800;font-weight:bold;">public</span> <span style="color:#008800;font-weight:bold;">class</span> <span style="color:#BB0066;font-weight:bold;">Person</span> <span style="color:#333333;">{</span>
          <span style="color:#008800;font-weight:bold;">private</span> <span style="color:#333399;font-weight:bold;">long</span> personNum<span style="color:#333333;">;</span>
          <span style="color:#008800;font-weight:bold;">private</span> String firstName<span style="color:#333333;">;</span>
          <span style="color:#008800;font-weight:bold;">private</span> String lastName<span style="color:#333333;">;</span>
          <span style="color:#008800;font-weight:bold;">private</span> <span style="color:#333399;font-weight:bold;">int</span> age<span style="color:#333333;">;</span>              
          <span style="color:#008800;font-weight:bold;">public</span> <span style="color:#0066BB;font-weight:bold;">Person</span><span style="color:#333333;">(</span><span style="color:#333399;font-weight:bold;">long</span> personNum<span style="color:#333333;">,</span> String firstName<span style="color:#333333;">,</span> String lastName<span style="color:#333333;">,</span> <span style="color:#333399;font-weight:bold;">int</span> age<span style="color:#333333;">)</span> <span style="color:#333333;">{</span>
              <span style="color:#008800;font-weight:bold;">this</span><span style="color:#333333;">.</span><span style="color:#0000CC;">firstName</span> <span style="color:#333333;">=</span> firstName<span style="color:#333333;">;</span>
              <span style="color:#008800;font-weight:bold;">this</span><span style="color:#333333;">.</span><span style="color:#0000CC;">lastName</span> <span style="color:#333333;">=</span> lastName<span style="color:#333333;">;</span>
              <span style="color:#008800;font-weight:bold;">this</span><span style="color:#333333;">.</span><span style="color:#0000CC;">age</span> <span style="color:#333333;">=</span> age<span style="color:#333333;">;</span>
              <span style="color:#008800;font-weight:bold;">this</span><span style="color:#333333;">.</span><span style="color:#0000CC;">personNum</span> <span style="color:#333333;">=</span> personNum<span style="color:#333333;">;</span>
          <span style="color:#333333;">}</span>

          <span style="color:#333333;">...</span>
        <span style="color:#333333;">}</span></pre></div></div>`,2),_f=[gf];function vf(e,t){return v(),b("div",mf,_f)}const bf=q(yf,[["render",vf]]),wf={},$f={class:"slide"},Pf=E(`<div class="heading">RESTful - JAX RS</div><div class="content"><div class="flex-container"><div style="width:50%;"><p> JAX-RS définit cinq annotations qui correspondent à des opérations HTTP spécifiques </p><h3>@javax.ws.rs.GET</h3><h3>@javax.ws.rs.PUT</h3><h3>@javax.ws.rs.POST</h3><h3>@javax.ws.rs.DELETE</h3><h3>@javax.ws.rs.HEAD</h3><br></div><div style="width:45%;"><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;">          <span style="color:red;font-weight:bold;">@GET</span>
          <span style="color:#008800;font-weight:bold;">public</span> String <span style="color:#0066BB;font-weight:bold;">getPersonList</span><span style="color:#333333;">()</span> <span style="color:#333333;">{</span>
            ...
          <span style="color:#333333;">}</span></pre></div></div></div><p> Lorsqu&#39;une requête HTTP GET arrive, jax-rs trouve la méthode qu&#39;il doit appeler en se servant de l&#39;annotation @GET. </p></div>`,2),qf=[Pf];function xf(e,t){return v(),b("div",$f,qf)}const Sf=q(wf,[["render",xf]]),Tf={},Cf={class:"slide"},Ef=E(`<div class="heading">RESTful - JAX RS</div><div class="content"><div class="flex-container"><div style="width:48%;"><h2>@Path</h2><br><p> L&#39;annotation @javax.ws.rs.Path dans JAX-RS est utilisée pour définir un modèle de correspondance URI pour les requêtes HTTP entrantes. </p><p> Elle peut être placée sur une classe ou sur une ou plusieurs méthodes Java Java </p><p>Dans cet exemple, j&#39;ai deux points terminaux</p><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;">            <span style="color:#333333;">/</span>personnes
            <span style="color:#333333;">/</span>personnes<span style="color:#333333;">/</span>underaged</pre></div></div><div style="width:48%;"><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;">            <span style="color:red;font-weight:bold;">@Path</span><span style="color:#333333;">(</span><span style="background-color:#fff0f0;">&quot;/persons&quot;</span><span style="color:#333333;">)</span>
            <span style="color:#008800;font-weight:bold;">public</span> <span style="color:#008800;font-weight:bold;">class</span> <span style="color:#BB0066;font-weight:bold;">PersonResource</span> <span style="color:#333333;">{</span>
              
              <span style="color:#555555;font-weight:bold;">@GET</span>
              <span style="color:#008800;font-weight:bold;">public</span> String <span style="color:#0066BB;font-weight:bold;">getPersonList</span><span style="color:#333333;">()</span> <span style="color:#333333;">{</span>
                <span style="color:#333333;">...</span>
              <span style="color:#333333;">}</span>
              
              <span style="color:#555555;font-weight:bold;">@GET</span>
              <span style="color:red;font-weight:bold;">@Path</span><span style="color:#333333;">(</span><span style="background-color:#fff0f0;">&quot;underaged&quot;</span><span style="color:#333333;">)</span>
              <span style="color:#008800;font-weight:bold;">public</span> String <span style="color:#0066BB;font-weight:bold;">getUnderagedPersonList</span><span style="color:#333333;">()</span> <span style="color:#333333;">{</span>
                <span style="color:#333333;">...</span>
              <span style="color:#333333;">}</span>
            <span style="color:#333333;">}</span></pre></div></div></div></div>`,2),kf=[Ef];function Af(e,t){return v(),b("div",Cf,kf)}const Rf=q(Tf,[["render",Af]]),Df={},jf={class:"slide"},Bf=E(`<div class="heading">RESTful - JAX RS</div><div class="content"><div class="flex-container"><div style="width:43%;"><h2>@Path Expressions</h2><br><p> La valeur de l&#39;annotation @Path est généralement une simple chaîne de caractères, mais vous pouvez également définir des expressions plus complexes pour répondre à vos besoins en matière de recherche d&#39;URI </p><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;">            <span style="color:#333333;">/</span>personnes<span style="color:#333333;">/</span><span style="color:#0000DD;font-weight:bold;">4</span>
            <span style="color:#333333;">/</span>personnes<span style="color:#333333;">/</span>kilian<span style="color:#333333;">-</span>schropp</pre></div></div><div style="width:55%;"><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;">        <span style="color:#555555;font-weight:bold;">@Path</span><span style="color:#333333;">(</span><span style="background-color:#fff0f0;">&quot;/persons&quot;</span><span style="color:#333333;">)</span>
        <span style="color:#008800;font-weight:bold;">public</span> <span style="color:#008800;font-weight:bold;">class</span> <span style="color:#BB0066;font-weight:bold;">PersonResource</span> <span style="color:#333333;">{</span>
          
          <span style="color:#555555;font-weight:bold;">@GET</span>
          <span style="color:#555555;font-weight:bold;">@Path</span><span style="color:#333333;">(</span><span style="background-color:red;">&quot;{id}&quot;</span><span style="color:#333333;">)</span>
          <span style="color:#008800;font-weight:bold;">public</span> String <span style="color:#0066BB;font-weight:bold;">getPersonById</span><span style="color:#333333;">(</span><span style="color:#555555;font-weight:bold;">@PathParam</span><span style="color:#333333;">(</span><span style="background-color:#fff0f0;">&quot;id&quot;</span><span style="color:#333333;">)</span> <span style="color:#333399;font-weight:bold;">int</span> id<span style="color:#333333;">)</span> <span style="color:#333333;">{</span>
            <span style="color:#333333;">...</span>
          <span style="color:#333333;">}</span>
          
          <span style="color:#555555;font-weight:bold;">@GET</span>
          <span style="color:#555555;font-weight:bold;">@Path</span><span style="color:#333333;">(</span><span style="background-color:red;">&quot;{firstname}-{lastname}&quot;</span><span style="color:#333333;">)</span>
          <span style="color:#008800;font-weight:bold;">public</span> String <span style="color:#0066BB;font-weight:bold;">getPersonByName</span><span style="color:#333333;">(</span><span style="color:#555555;font-weight:bold;">@PathParam</span><span style="color:#333333;">(</span><span style="background-color:#fff0f0;">&quot;firstname&quot;</span><span style="color:#333333;">)</span> String first<span style="color:#333333;">,</span>
          <span style="color:#555555;font-weight:bold;">@PathParam</span><span style="color:#333333;">(</span><span style="background-color:#fff0f0;">&quot;lastname&quot;</span><span style="color:#333333;">)</span> String last<span style="color:#333333;">)</span> <span style="color:#333333;">{</span>
            <span style="color:#333333;">...</span>
          <span style="color:#333333;">}</span>
        <span style="color:#333333;">}</span></pre></div></div></div></div>`,2),Lf=[Bf];function If(e,t){return v(),b("div",jf,Lf)}const Of=q(Df,[["render",If]]),Mf="/rest/assets/injection-857849e8.svg",Ff={},Hf={class:"slide"},Nf=E('<div class="heading">RESTful - JAX-RS Injection</div><div class="content"><h2> Les annotations JAX-RS peuvent injecter un grand nombre de choses différentes. </h2><br><div class="flex-container"><div style="width:63%;"><p><b>@javax.ws.rs.PathParam: </b> paramètres du modèle URI</p><p><b>@javax.ws.rs.MatrixParam: </b> paramètres de la matrice URI </p><p><b>@javax.ws.rs.QueryParam: </b> paramètres de requête URI</p><p><b>@javax.ws.rs.FormParam: </b> données d&#39;un formulaire </p><p><b>@javax.ws.rs.HeaderParam: </b> en-têtes de requête HTTP</p><p><b>@javax.ws.rs.CookieParam: </b> cookies HTTP définis par le client. </p><p><b>@javax.ws.rs.core.Context</b> injecter divers objets d&#39;aide et d&#39;information fournis par l&#39;API JAX-RS </p></div><div style="width:35%;"><img src="'+Mf+'" style="width:100%;"></div></div></div>',2),Jf=[Nf];function zf(e,t){return v(),b("div",Hf,Jf)}const Uf=q(Ff,[["render",zf]]),Xf="/rest/assets/syringe-0cdcdc13.svg",Wf={},Kf={class:"slide"},Vf=E(`<div class="heading">RESTful - JAX-RS Injection</div><div class="content"><div class="flex-container"><div style="width:52%;"><h2>@PathParam</h2><br><p> Nous avons déjà vu @PathParam dans les extraits de code précédents, mais qu&#39;est-ce que c&#39;est en fait ? </p><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;">            <span style="color:#555555;font-weight:bold;">@GET</span>
            <span style="color:#555555;font-weight:bold;">@Path</span><span style="color:#333333;">(</span><span style="background-color:#fff0f0;">&quot;{id}&quot;</span><span style="color:#333333;">)</span>
            <span style="color:#008800;font-weight:bold;">public</span> String <span style="color:#0066BB;font-weight:bold;">getPersonById</span><span style="color:#333333;">(</span><span style="color:#555555;font-weight:bold;">@PathParam</span><span style="color:#333333;">(</span><span style="background-color:#fff0f0;">&quot;id&quot;</span><span style="color:#333333;">)</span> <span style="color:#333399;font-weight:bold;">int</span> id<span style="color:#333333;">)</span> <span style="color:#333333;">{</span>
              <span style="color:#333333;">...</span>
            <span style="color:#333333;">}</span>
            </pre></div><br><h3> @PathParam permet d&#39;injecter la valeur des paramètres de chemin URI nommés qui ont été définis dans les expressions @Path. </h3><br><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;">            <span style="color:#333333;">GET /</span>personnes<span style="color:#333333;">/</span><span style="color:#0000DD;font-weight:bold;">4</span></pre></div></div><div style="width:47%;"><img src="`+Xf+'" style="width:100%;"></div></div></div>',2),Gf=[Vf];function Qf(e,t){return v(),b("div",Kf,Gf)}const Yf=q(Wf,[["render",Qf]]),Zf="/rest/assets/path-37fc6f46.svg",eh={},th={class:"slide"},sh=E(`<div class="heading">RESTful - JAX-RS Injection</div><div class="content"><div class="flex-container"><div style="width:52%;"><h2>Plus d&#39;un @PathParam</h2><br><p> Vous pouvez faire référence à plus d&#39;un paramètre de chemin d&#39;accès URI dans vos méthodes Java. </p><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;">        <span style="color:#555555;font-weight:bold;">@GET</span>
        <span style="color:#555555;font-weight:bold;">@Path</span><span style="color:#333333;">(</span><span style="background-color:#fff0f0;">&quot;{firstname}-{lastname}&quot;</span><span style="color:#333333;">)</span>
        <span style="color:#008800;font-weight:bold;">public</span> String <span style="color:#0066BB;font-weight:bold;">getPersonByName</span><span style="color:#333333;">(</span><span style="color:#555555;font-weight:bold;">@PathParam</span><span style="color:#333333;">(</span><span style="background-color:#fff0f0;">&quot;firstname&quot;</span><span style="color:#333333;">)</span> String first<span style="color:#333333;">,</span>
        <span style="color:#555555;font-weight:bold;">@PathParam</span><span style="color:#333333;">(</span><span style="background-color:#fff0f0;">&quot;lastname&quot;</span><span style="color:#333333;">)</span> String last<span style="color:#333333;">)</span> <span style="color:#333333;">{</span>
          <span style="color:#333333;">...</span>
        <span style="color:#333333;">}</span></pre></div><br><p>Reprenons l&#39;exemple précédent avec le nom et le prénom</p><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;">            <span style="color:#333333;">GET /</span>personnes<span style="color:#333333;">/</span>kilian<span style="color:#333333;">-</span>schropp</pre></div></div><div style="width:45%;"><img src="`+Zf+'" style="width:100%;"></div></div></div>',2),nh=[sh];function oh(e,t){return v(),b("div",th,nh)}const lh=q(eh,[["render",oh]]),rh="/rest/assets/matrix-dd1344e5.svg",ah={},ih={class:"slide"},ch=E(`<div class="heading">RESTful - JAX-RS Injection</div><div class="content"><div class="flex-container"><div style="width:71%;"><h2>@MatrixParam</h2><br><p> La spécification JAX-RS vous permet d&#39;injecter des valeurs de paramètres de matrice directement par le biais de l&#39;annotation @javax.ws.rs.MatrixParam. </p><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;">            <span style="color:#555555;font-weight:bold;">@Path</span><span style="color:#333333;">(</span><span style="background-color:#fff0f0;">&quot;/{make}&quot;</span><span style="color:#333333;">)</span>
            <span style="color:#008800;font-weight:bold;">public</span> <span style="color:#008800;font-weight:bold;">class</span> <span style="color:#BB0066;font-weight:bold;">CarResource</span> <span style="color:#333333;">{</span>
                <span style="color:#555555;font-weight:bold;">@GET</span>
                <span style="color:#555555;font-weight:bold;">@Path</span><span style="color:#333333;">(</span><span style="background-color:#fff0f0;">&quot;/{model}/{year}&quot;</span><span style="color:#333333;">)</span>
                <span style="color:#555555;font-weight:bold;">@Produces</span><span style="color:#333333;">(</span><span style="background-color:#fff0f0;">&quot;image/jpeg&quot;</span><span style="color:#333333;">)</span>
                <span style="color:#008800;font-weight:bold;">public</span> Jpeg <span style="color:#0066BB;font-weight:bold;">getPicture</span><span style="color:#333333;">(</span><span style="color:#555555;font-weight:bold;">@PathParam</span><span style="color:#333333;">(</span><span style="background-color:#fff0f0;">&quot;make&quot;</span><span style="color:#333333;">)</span> String make<span style="color:#333333;">,</span>
                                  <span style="color:#555555;font-weight:bold;">@PathParam</span><span style="color:#333333;">(</span><span style="background-color:#fff0f0;">&quot;model&quot;</span><span style="color:#333333;">)</span> String model<span style="color:#333333;">,</span>
                                  <span style="color:#555555;font-weight:bold;">@MatrixParam</span><span style="color:#333333;">(</span><span style="background-color:#fff0f0;">&quot;color&quot;</span><span style="color:#333333;">)</span> String color<span style="color:#333333;">){</span>
                    <span style="color:#333333;">...</span>
                <span style="color:#333333;">}</span></pre></div><br><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;">            GET <span style="color:#333333;">/</span>mercedes<span style="color:#333333;">/</span>e55<span style="color:#333333;">/</span><span style="color:#0000DD;font-weight:bold;">2006</span><span style="color:#333333;">/</span>interior<span style="color:#333333;">;</span>color<span style="color:#333333;">=</span>tan</pre></div></div><div style="width:28%;"><img src="`+rh+'" style="width:100%;"></div></div></div>',2),dh=[ch];function ph(e,t){return v(),b("div",ih,dh)}const uh=q(ah,[["render",ph]]),fh="/rest/assets/grandopening-44434c4e.svg",hh={},yh={class:"slide"},mh=E(`<div class="heading">RESTful - JAX-RS Injection</div><div class="content"><h2>@QueryParam</h2><br><p> L&#39;annotation @javax.ws.rs.QueryParam vous permet d&#39;injecter des paramètres de requête URI individuels dans vos paramètres Java. </p><div class="flex-container"><div style="width:48%;"><p> Supposons que nous voulions un sous-ensemble de toutes les personnes </p><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;"><span style="color:#555555;font-weight:bold;">@GET</span>
<span style="color:#555555;font-weight:bold;">@Path</span><span style="color:#333333;">(</span><span style="background-color:#fff0f0;">&quot;{id}&quot;</span><span style="color:#333333;">)</span>
<span style="color:#008800;font-weight:bold;">public</span> String <span style="color:#0066BB;font-weight:bold;">getPersonList</span><span style="color:#333333;">(</span><span style="color:#555555;font-weight:bold;">@QueryParam</span><span style="color:#333333;">(</span><span style="background-color:#fff0f0;">&quot;start&quot;</span><span style="color:#333333;">)</span> <span style="color:#333399;font-weight:bold;">int</span> start<span style="color:#333333;">,</span>
<span style="color:#555555;font-weight:bold;">@QueryParam</span><span style="color:#333333;">(</span><span style="background-color:#fff0f0;">&quot;size&quot;</span><span style="color:#333333;">)</span> <span style="color:#333399;font-weight:bold;">int</span> size<span style="color:#333333;">))</span> <span style="color:#333333;">{</span>
    <span style="color:#333333;">...</span>
<span style="color:#333333;">}</span></pre></div><br><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;">            GET <span style="color:#333333;">/</span>persons<span style="color:#333333;">?</span>start<span style="color:#333333;">=</span><span style="color:#0000DD;font-weight:bold;">0</span><span style="color:#333333;">&amp;</span>size<span style="color:#333333;">=</span><span style="color:#0000DD;font-weight:bold;">10</span></pre></div></div><div style="width:50%;"><img src="`+fh+'" style="width:100%;"></div></div></div>',2),gh=[mh];function _h(e,t){return v(),b("div",yh,gh)}const vh=q(hh,[["render",_h]]),bh={},wh={class:"slide"},$h=E(`<div class="heading">RESTful - JAX-RS Injection</div><div class="content"><h2>@Context</h2><br><p> Vous pouvez injecter des instances d&#39;UriInfo en utilisant l&#39;annotation @javax.ws.rs.core.Context. </p><p>Reprenons l&#39;exemple précédent</p><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;">            <span style="color:#555555;font-weight:bold;">@GET</span>
            <span style="color:#555555;font-weight:bold;">@Produces</span><span style="color:#333333;">(</span><span style="background-color:#fff0f0;">&quot;application/xml&quot;</span><span style="color:#333333;">)</span>
            <span style="color:#008800;font-weight:bold;">public</span> String <span style="color:#0066BB;font-weight:bold;">getPersonList</span><span style="color:#333333;">(</span><span style="color:#555555;font-weight:bold;">@Context</span> UriInfo info<span style="color:#333333;">)</span> <span style="color:#333333;">{</span>
            String start <span style="color:#333333;">=</span> info<span style="color:#333333;">.</span><span style="color:#0000CC;">getQueryParameters</span><span style="color:#333333;">().</span><span style="color:#0000CC;">getFirst</span><span style="color:#333333;">(</span><span style="background-color:#fff0f0;">&quot;start&quot;</span><span style="color:#333333;">);</span>
            String size <span style="color:#333333;">=</span> info<span style="color:#333333;">.</span><span style="color:#0000CC;">getQueryParameters</span><span style="color:#333333;">().</span><span style="color:#0000CC;">getFirst</span><span style="color:#333333;">(</span><span style="background-color:#fff0f0;">&quot;size&quot;</span><span style="color:#333333;">);</span>
              <span style="color:#333333;">...</span>
            <span style="color:#333333;">}</span></pre></div><br><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;">            GET <span style="color:#333333;">/</span>persons<span style="color:#333333;">?</span>start<span style="color:#333333;">=</span><span style="color:#0000DD;font-weight:bold;">0</span><span style="color:#333333;">&amp;</span>size<span style="color:#333333;">=</span><span style="color:#0000DD;font-weight:bold;">10</span></pre></div></div>`,2),Ph=[$h];function qh(e,t){return v(),b("div",wh,Ph)}const xh=q(bh,[["render",qh]]),Sh={},Th={class:"slide"},Ch=E(`<div class="heading">RESTful - JAX-RS Injection</div><div class="content"><h2>@FormParam</h2><br><p> L&#39;annotation @javax.ws.rs.FormParam est utilisée pour accéder aux corps de requête codés en format application/x-www-formurlencoded. En d&#39;autres mots, elle est utilisée pour accéder aux entrées individuelles postées par un document de formulaire HTML. </p><div class="flex-container"><div style="width:49%;"><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;"><span style="color:#007700;">&lt;form</span> <span style="color:#0000CC;">action=</span><span style="background-color:#fff0f0;">&quot;http://example.com/persons&quot;</span> <span style="color:#0000CC;">method=</span><span style="background-color:#fff0f0;">&quot;post&quot;</span><span style="color:#007700;">&gt;</span>
  <span style="color:#007700;">&lt;label</span> <span style="color:#0000CC;">for=</span><span style="background-color:#fff0f0;">&quot;firstname&quot;</span><span style="color:#007700;">&gt;</span>First name:<span style="color:#007700;">&lt;/label&gt;</span>
  <span style="color:#007700;">&lt;input</span> <span style="color:#0000CC;">type=</span><span style="background-color:#fff0f0;">&quot;text&quot;</span> <span style="color:#0000CC;">name=</span><span style="background-color:#fff0f0;">&quot;firstname&quot;</span> <span style="color:#0000CC;">id=</span><span style="background-color:#fff0f0;">&quot;firstname&quot;</span><span style="color:#007700;">&gt;&lt;br&gt;</span>
  <span style="color:#007700;">&lt;label</span> <span style="color:#0000CC;">for=</span><span style="background-color:#fff0f0;">&quot;lastname&quot;</span><span style="color:#007700;">&gt;</span>Last name:<span style="color:#007700;">&lt;/label&gt;</span>
  <span style="color:#007700;">&lt;input</span> <span style="color:#0000CC;">type=</span><span style="background-color:#fff0f0;">&quot;text&quot;</span> <span style="color:#0000CC;">name=</span><span style="background-color:#fff0f0;">&quot;lastname&quot;</span> <span style="color:#0000CC;">id=</span><span style="background-color:#fff0f0;">&quot;lastname&quot;</span><span style="color:#007700;">&gt;&lt;br&gt;</span>
  <span style="color:#007700;">&lt;input</span> <span style="color:#0000CC;">type=</span><span style="background-color:#fff0f0;">&quot;submit&quot;</span> <span style="color:#0000CC;">value=</span><span style="background-color:#fff0f0;">&quot;Send&quot;</span><span style="color:#007700;">&gt;</span>
<span style="color:#007700;">&lt;/form&gt;</span></pre></div></div><div style="width:49%;"><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;"><span style="color:#555555;font-weight:bold;">@POST</span>
<span style="color:#008800;font-weight:bold;">public</span> <span style="color:#333399;font-weight:bold;">void</span> <span style="color:#0066BB;font-weight:bold;">createPerson</span><span style="color:#333333;">(</span><span style="color:#555555;font-weight:bold;">@FormParam</span><span style="color:#333333;">(</span><span style="background-color:#fff0f0;">&quot;firstname&quot;</span><span style="color:#333333;">)</span> String first<span style="color:#333333;">,</span>
<span style="color:#555555;font-weight:bold;">@FormParam</span><span style="color:#333333;">(</span><span style="background-color:#fff0f0;">&quot;lastname&quot;</span><span style="color:#333333;">)</span> String last<span style="color:#333333;">)</span> <span style="color:#333333;">{</span>
<span style="color:#333333;">...</span>
<span style="color:#333333;">}</span></pre></div></div></div><br><p> Les données de formulaire sont codées en URL lorsqu&#39;elles sont transmises. En utilisant @FormParam, JAX-RS décode automatiquement la valeur de l&#39;entrée du formulaire avant de l&#39;injecter. </p></div>`,2),Eh=[Ch];function kh(e,t){return v(),b("div",Th,Eh)}const Ah=q(Sh,[["render",kh]]),Rh="/rest/assets/mailman-36753933.svg",Dh={},jh={class:"slide"},Bh=E(`<div class="heading">RESTful - JAX-RS Injection</div><div class="content"><div class="flex-container"><div style="width:53%;"><h2>@HeaderParam</h2><br><p> Et si votre application était intéressée par la page web qui renvoie à votre service web ? Vous pouvez accéder à l&#39;en-tête HTTP Referer en utilisant l&#39;annotation @HeaderParam </p><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;"><span style="color:#555555;font-weight:bold;">@GET</span>
<span style="color:#555555;font-weight:bold;">@Produces</span><span style="color:#333333;">(</span><span style="background-color:#fff0f0;">&quot;text/html&quot;</span><span style="color:#333333;">)</span>
<span style="color:#008800;font-weight:bold;">public</span> String <span style="color:#0066BB;font-weight:bold;">get</span><span style="color:#333333;">(</span><span style="color:#555555;font-weight:bold;">@HeaderParam</span><span style="color:#333333;">(</span><span style="background-color:#fff0f0;">&quot;Referer&quot;</span><span style="color:#333333;">)</span> String referer<span style="color:#333333;">)</span> <span style="color:#333333;">{</span>
<span style="color:#333333;">...</span>
<span style="color:#333333;">}</span>
</pre></div></div><div style="width:46%;"><img src="`+Rh+'" style="width:100%;"></div></div></div>',2),Lh=[Bh];function Ih(e,t){return v(),b("div",jh,Lh)}const Oh=q(Dh,[["render",Ih]]),Mh="/rest/assets/cookies-e709507d.svg",Fh={},Hh={class:"slide"},Nh=E(`<div class="heading">RESTful - JAX-RS Injection</div><div class="content"><div class="flex-container"><div style="width:60%;"><h2>@CookieParam</h2><br><p> Les serveurs peuvent stocker des informations d&#39;état dans des cookies sur le client, et peuvent récupérer ces informations lors de la prochaine requête du client. L&#39;annotation @javax.ws.rs.CookieParam vous permet d&#39;injecter les cookies envoyés par une requête client dans vos méthodes JAX-RS. </p><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;"><span style="color:#555555;font-weight:bold;">@GET</span>
<span style="color:#555555;font-weight:bold;">@Produces</span><span style="color:#333333;">(</span><span style="background-color:#fff0f0;">&quot;text/html&quot;</span><span style="color:#333333;">)</span>
<span style="color:#008800;font-weight:bold;">public</span> String <span style="color:#0066BB;font-weight:bold;">get</span><span style="color:#333333;">(</span><span style="color:#555555;font-weight:bold;">@CookieParam</span><span style="color:#333333;">(</span><span style="background-color:#fff0f0;">&quot;personId&quot;</span><span style="color:#333333;">)</span> <span style="color:#333399;font-weight:bold;">int</span> persId<span style="color:#333333;">)</span> <span style="color:#333333;">{</span>
<span style="color:#333333;">...</span>
<span style="color:#333333;">}</span>
</pre></div><br><p> L&#39;utilisation de @CookieParam ici fait que le fournisseur JAX-RS recherche la valeur du cookie personId dans tous les en-têtes de cookies </p></div><div style="width:38%;"><img src="`+Mh+'" style="width:100%;"></div></div></div>',2),Jh=[Nh];function zh(e,t){return v(),b("div",Hh,Jh)}const Uh=q(Fh,[["render",zh]]),Uo="/rest/assets/metalbox-b1269b20.svg",Xh={},Wh={class:"slide"},Kh=E(`<div class="heading">RESTful - JAX-RS Injection</div><div class="content"><div class="flex-container"><div style="width:65%;"><h2>@BeanParam</h2><br><p> L&#39;annotation @BeanParam est une nouveauté ajoutée dans JAX-RS 2.0 (2011). Elle permet d&#39;injecter une classe spécifique dont les champs/méthodes sont annotés avec l&#39;un des paramètres d&#39;injection. </p><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;"><span style="color:#008800;font-weight:bold;">public</span> <span style="color:#008800;font-weight:bold;">class</span> <span style="color:#BB0066;font-weight:bold;">PersonInput</span> <span style="color:#333333;">{</span>
	<span style="color:#555555;font-weight:bold;">@FormParam</span><span style="color:#333333;">(</span><span style="background-color:#fff0f0;">&quot;first&quot;</span><span style="color:#333333;">)</span>
	String firstName<span style="color:#333333;">;</span>
	
	<span style="color:#555555;font-weight:bold;">@FormParam</span><span style="color:#333333;">(</span><span style="background-color:#fff0f0;">&quot;list&quot;</span><span style="color:#333333;">)</span>
	String lastName<span style="color:#333333;">;</span>
	
	<span style="color:#555555;font-weight:bold;">@HeaderParam</span><span style="color:#333333;">(</span><span style="background-color:#fff0f0;">&quot;Content-Type&quot;</span><span style="color:#333333;">)</span>
	String contentType<span style="color:#333333;">;</span>

	<span style="color:#008800;font-weight:bold;">public</span> String <span style="color:#0066BB;font-weight:bold;">getFirstName</span><span style="color:#333333;">()</span> <span style="color:#333333;">{...}....</span>
<span style="color:#333333;">}</span></pre></div></div><div style="width:30%;"><img src="`+Uo+'" style="width:100%;"></div></div></div>',2),Vh=[Kh];function Gh(e,t){return v(),b("div",Wh,Vh)}const Qh=q(Xh,[["render",Gh]]),Yh={},Zh={class:"slide"},e0=E(`<div class="heading">RESTful - JAX-RS Injection</div><div class="content"><div class="flex-container"><div style="width:65%;"><h2>@BeanParam</h2><br><p> Nous pouvons demander à JAX-RS de créer, d&#39;initialiser et d&#39;injecter cette classe en utilisant l&#39;annotation @BeanParam </p><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;"><span style="color:#555555;font-weight:bold;">@Path</span><span style="color:#333333;">(</span><span style="background-color:#fff0f0;">&quot;/persons&quot;</span><span style="color:#333333;">)</span>
<span style="color:#008800;font-weight:bold;">public</span> <span style="color:#008800;font-weight:bold;">class</span> <span style="color:#BB0066;font-weight:bold;">PersonResource</span> <span style="color:#333333;">{</span>
	<span style="color:#555555;font-weight:bold;">@POST</span>
	<span style="color:#008800;font-weight:bold;">public</span> <span style="color:#333399;font-weight:bold;">void</span> <span style="color:#0066BB;font-weight:bold;">createCustomer</span><span style="color:#333333;">(</span><span style="color:#555555;font-weight:bold;">@BeanParam</span> PersonInput newPers<span style="color:#333333;">)</span> <span style="color:#333333;">{</span>
	    <span style="color:#333333;">...</span>
	<span style="color:#333333;">}</span>
<span style="color:#333333;">}</span>
</pre></div><br><p> C&#39;est un excellent moyen d&#39;agréger des informations au lieu d&#39;avoir une longue liste de paramètres de méthodes </p></div><div style="width:30%;"><img src="`+Uo+'" style="width:100%;"></div></div></div>',2),t0=[e0];function s0(e,t){return v(),b("div",Zh,t0)}const n0=q(Yh,[["render",s0]]),o0="/rest/assets/chefcake-1d57829a.svg",l0={},r0={class:"slide"},a0=E(`<div class="heading">RESTful - JAX RS</div><div class="content"><div class="flex-container"><div style="width:58%;"><p> Exercice: Pouvez-vous travailler sur PersonResource pour enregistrer l&#39;objet Person désiré dans la console en fonction de l&#39;ID ? (Voir l&#39;exemple de getPersonsList) </p><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;"><span style="color:#555555;font-weight:bold;">@GET</span>
<span style="color:#555555;font-weight:bold;">@Path</span><span style="color:#333333;">(</span><span style="background-color:#fff0f0;">&quot;{id}&quot;</span><span style="color:#333333;">)</span>
<span style="color:#008800;font-weight:bold;">public</span> String <span style="color:#0066BB;font-weight:bold;">getPersonById</span><span style="color:#333333;">(</span><span style="color:#555555;font-weight:bold;">@PathParam</span><span style="color:#333333;">(</span><span style="background-color:#fff0f0;">&quot;id&quot;</span><span style="color:#333333;">)</span> <span style="color:#333399;font-weight:bold;">long</span> id<span style="color:#333333;">)</span> <span style="color:#333333;">{</span>
	Person resultPers <span style="color:#333333;">=</span> <span style="color:#008800;font-weight:bold;">null</span><span style="color:#333333;">;</span>
	<span style="color:#888888;">////TODO Mettre en œuvre la méthode getPersonById</span>
	<span style="color:#888888;">//Adding CORS header for testing. This header should not be in production code</span>
	<span style="color:#008800;font-weight:bold;">return</span> resultPers<span style="color:#333333;">.</span><span style="color:#0000CC;">toString</span><span style="color:#333333;">();</span>
<span style="color:#333333;">}</span>
</pre></div><p> vous n&#39;avez pas besoin de toucher aux autres classes et fichiers de configuration pour l&#39;instant. Voyez cela comme un cadeau que je vous fais </p><a href="/exercices/rest/jax-rs-exercice-1.zip" download="jax-rs-exercice-1.zip"><img src="`+kt+'" style="width:8%;">Download zip exercice</a></div><div style="width:39%;"><img src="'+o0+'" style="width:100%;"></div></div></div>',2),i0=[a0];function c0(e,t){return v(),b("div",r0,i0)}const d0=q(l0,[["render",c0]]),p0={},u0={class:"slide"},f0=E(`<div class="heading">RESTful - JAX RS</div><div class="content"><p> Bonus: Pouvez-vous faire la même chose avec la méthode @POST addPerson. Cette fois, je veux que vous ajoutiez la personne à la liste des personnes et que vous enregistriez la nouvelle personne dans la console. </p><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;"><span style="color:#555555;font-weight:bold;">@POST</span>
<span style="color:#008800;font-weight:bold;">public</span> String <span style="color:#0066BB;font-weight:bold;">addPerson</span><span style="color:#333333;">()</span> <span style="color:#333333;">{</span>
	Person newPers <span style="color:#333333;">=</span> <span style="color:#008800;font-weight:bold;">null</span><span style="color:#333333;">;</span>
	<span style="color:#888888;">//TODO Mettre en œuvre la méthode addPerson.</span>
	<span style="color:#888888;">//Adding CORS header for testing. This header should not be in production code</span>
	<span style="color:#008800;font-weight:bold;">return</span> newPers<span style="color:#333333;">.</span><span style="color:#0000CC;">toString</span><span style="color:#333333;">();</span>
<span style="color:#333333;">}</span>
</pre></div><a href="/exercices/rest/jax-rs-exercice-1.zip" download="jax-rs-exercice-1.zip"><img src="`+kt+'" style="width:8%;">Download zip exercice</a></div>',2),h0=[f0];function y0(e,t){return v(),b("div",u0,h0)}const m0=q(p0,[["render",y0]]),g0={class:"slide"},_0=p("div",{class:"heading"},"RESTful - Réalisation",-1),v0={class:"content"},b0=p("p",null,"Cela permet de tester l'exercice",-1),w0={__name:"SlidePresentation68",setup(e){return(t,s)=>(v(),b("div",g0,[_0,p("div",v0,[b0,h(qe,{link:"http://localhost:8080/persons"})])]))}},$0={},P0={class:"slide"},q0=E('<div class="heading">RESTful - JAX RS</div><div class="content"><h2>Conversion automatique des types Java</h2><br><p> JAXRS peut convertir des données de type chaîne de caractères en n&#39;importe quel type Java souhaité </p><h3>il doit répondre à l&#39;un des critères suivants :</h3><br><p><span style="font-size:2rem;">↪</span> C&#39;est un type primitif</p><p><span style="font-size:2rem;">↪</span> Classe Java avec un constructeur à paramètre unique de type String </p><p><span style="font-size:2rem;">↪</span> Classe Java qui possède une méthode statique nommée valueOf() avec un seul argument de type String et qui renvoie une instance de la classe </p><p><span style="font-size:2rem;">↪</span> C&#39;est une List ou un Set</p></div>',2),x0=[q0];function S0(e,t){return v(),b("div",P0,x0)}const T0=q($0,[["render",S0]]),C0="/rest/assets/caveman-axe-torch-9c4bd29c.svg",E0={},k0={class:"slide"},A0=E(`<div class="heading">RESTful - JAX RS</div><div class="content"><div class="flex-container"><div style="width:80%;"><h2>Conversion des types primitifs</h2><br><p> Nous avons déjà vu quelques exemples de conversion automatique d&#39;une chaîne de caractères en un type primitif </p><br><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;"><span style="color:#555555;font-weight:bold;">@GET</span>
<span style="color:#555555;font-weight:bold;">@Path</span><span style="color:#333333;">(</span><span style="background-color:#fff0f0;">&quot;{id}&quot;</span><span style="color:#333333;">)</span>
<span style="color:#008800;font-weight:bold;">public</span> String <span style="color:#0066BB;font-weight:bold;">get</span><span style="color:#333333;">(</span><span style="color:#555555;font-weight:bold;">@PathParam</span><span style="color:#333333;">(</span><span style="background-color:#fff0f0;">&quot;id&quot;</span><span style="color:#333333;">)</span> <span style="color:#333399;font-weight:bold;">int</span> id<span style="color:#333333;">)</span> <span style="color:#333333;">{...}</span></pre></div></div><div style="width:11%;"><img src="`+C0+'" style="width:100%;"></div></div></div>',2),R0=[A0];function D0(e,t){return v(),b("div",k0,R0)}const j0=q(E0,[["render",D0]]),B0={},L0={class:"slide"},I0=E(`<div class="heading">RESTful - JAX RS</div><div class="content"><h2>Conversion d&#39;objets Java</h2><br><p> La classe de cet objet doit avoir un constructeur ou une méthode statique nommée valueOf() qui prend un seul paramètre de type String </p><div class="flex-container"><div style="width:49%;"><h3>Exemple:</h3><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;"><span style="color:#555555;font-weight:bold;">@Path</span><span style="color:#333333;">(</span><span style="background-color:#fff0f0;">&quot;/myservice&quot;</span><span style="color:#333333;">)</span>
<span style="color:#008800;font-weight:bold;">public</span> <span style="color:#008800;font-weight:bold;">class</span> <span style="color:#BB0066;font-weight:bold;">MyService</span> <span style="color:#333333;">{</span>
	<span style="color:#555555;font-weight:bold;">@GET</span>
	<span style="color:#555555;font-weight:bold;">@Produces</span><span style="color:#333333;">(</span><span style="background-color:#fff0f0;">&quot;text/html&quot;</span><span style="color:#333333;">)</span>
	<span style="color:#008800;font-weight:bold;">public</span> String <span style="color:#0066BB;font-weight:bold;">get</span><span style="color:#333333;">(</span><span style="color:#555555;font-weight:bold;">@HeaderParam</span><span style="color:#333333;">(</span><span style="background-color:#fff0f0;">&quot;Referer&quot;</span><span style="color:#333333;">)</span> URL referer<span style="color:#333333;">)</span> <span style="color:#333333;">{</span>
	    <span style="color:#333333;">...</span>
	<span style="color:#333333;">}</span>
<span style="color:#333333;">}</span></pre></div></div><div style="width:49%;"><h3>URL constructeur:</h3><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;"><span style="color:#888888;">/**</span>
<span style="color:#888888;"> * Creates a {@code URL} object from the {@code String}</span>
<span style="color:#888888;"> * representation.</span>
<span style="color:#888888;"> * ...</span>
<span style="color:#888888;"> */</span>
<span style="color:#008800;font-weight:bold;">public</span> <span style="color:#0066BB;font-weight:bold;">URL</span><span style="color:#333333;">(</span>String spec<span style="color:#333333;">)</span> <span style="color:#008800;font-weight:bold;">throws</span> MalformedURLException <span style="color:#333333;">{</span>
	<span style="color:#008800;font-weight:bold;">this</span><span style="color:#333333;">(</span><span style="color:#008800;font-weight:bold;">null</span><span style="color:#333333;">,</span> spec<span style="color:#333333;">);</span>
<span style="color:#333333;">}</span></pre></div></div></div></div>`,2),O0=[I0];function M0(e,t){return v(),b("div",L0,O0)}const F0=q(B0,[["render",M0]]),H0={},N0={class:"slide"},J0=E(`<div class="heading">RESTful - JAX RS</div><div class="content"><h2>Collections</h2><br><p> Nous pouvons avoir une liste des types primitifs ou une liste des classes qui implémentent valueOf() ou avoir un constructeur avec un seul paramètre de type chaîne de caractères sans aucun problème. </p><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;"><span style="color:#555555;font-weight:bold;">@Path</span><span style="color:#333333;">(</span><span style="background-color:#fff0f0;">&quot;/customers&quot;</span><span style="color:#333333;">)</span>
<span style="color:#008800;font-weight:bold;">public</span> <span style="color:#008800;font-weight:bold;">class</span> <span style="color:#BB0066;font-weight:bold;">CustomerResource</span> <span style="color:#333333;">{</span>
	<span style="color:#555555;font-weight:bold;">@GET</span>
	<span style="color:#555555;font-weight:bold;">@Produces</span><span style="color:#333333;">(</span><span style="background-color:#fff0f0;">&quot;application/xml&quot;</span><span style="color:#333333;">)</span>
	<span style="color:#008800;font-weight:bold;">public</span> String <span style="color:#0066BB;font-weight:bold;">getCustomers</span><span style="color:#333333;">(</span>
		<span style="color:#555555;font-weight:bold;">@QueryParam</span><span style="color:#333333;">(</span><span style="background-color:#fff0f0;">&quot;start&quot;</span><span style="color:#333333;">)</span> <span style="color:#333399;font-weight:bold;">int</span> start<span style="color:#333333;">,</span>
		<span style="color:#555555;font-weight:bold;">@QueryParam</span><span style="color:#333333;">(</span><span style="background-color:#fff0f0;">&quot;size&quot;</span><span style="color:#333333;">)</span> <span style="color:#333399;font-weight:bold;">int</span> size<span style="color:#333333;">,</span>
		<span style="color:#555555;font-weight:bold;">@QueryParam</span><span style="color:#333333;">(</span><span style="background-color:#fff0f0;">&quot;orderBy&quot;</span><span style="color:#333333;">)</span> List<span style="color:#333333;">&lt;</span>String<span style="color:#333333;">&gt;</span> orderBy<span style="color:#333333;">)</span> <span style="color:#333333;">{</span>
			<span style="color:#333333;">...</span>
	<span style="color:#333333;">}</span>
<span style="color:#333333;">}</span>
</pre></div></div>`,2),z0=[J0];function U0(e,t){return v(),b("div",N0,z0)}const X0=q(H0,[["render",U0]]),W0={},K0={class:"slide"},V0=E('<div class="heading">RESTful - JAX RS</div><div class="content"><h2>Manipulateurs de contenu JAX-RS</h2><br><p> JAX-RS vous permet d&#39;organiser des corps de messages vers et depuis des types Java spécifiques. </p><p><span style="font-size:2rem;">↪</span><b>InputStream,Reader: </b> InputStream ou Reader brut pour l&#39;entrée de n&#39;importe quel type de média </p><p><span style="font-size:2rem;">↪</span><b>StreamingOutput:</b>le flux brut des corps de réponse </p><p><span style="font-size:2rem;">↪</span><b>File:</b>utilisé pour l&#39;entrée et la sortie de n&#39;importe quel type de média </p><p><span style="font-size:2rem;">↪</span><b>byte[]:</b>utilisé pour l&#39;entrée et la sortie de n&#39;importe quel type de média &gt; </p><p><span style="font-size:2rem;">↪</span><b>String, char[]: </b>utilisé pour l&#39;entrée et la sortie de n&#39;importe quel type de média &gt; </p></div>',2),G0=[V0];function Q0(e,t){return v(),b("div",K0,G0)}const Y0=q(W0,[["render",Q0]]),Z0={},ey={class:"slide"},ty=E(`<div class="heading">RESTful - JAX RS</div><div class="content"><h2>Manipulateurs de contenu JAX-RS</h2><br><p><span style="font-size:2rem;">↪</span><b>MultivaluedMap et Form Input </b> Les deux sont utilisés pour représenter les données du formulaire. </p><p> Ces deux éléments sont très souvent utilisés, je vais donc en donner un exemple. </p><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;"><span style="color:#555555;font-weight:bold;">@Path</span>(<span style="background-color:#fff0f0;">&quot;/&quot;</span>)
public <span style="color:#008800;font-weight:bold;">class</span> <span style="color:#BB0066;font-weight:bold;">MyService</span> {
	<span style="color:#555555;font-weight:bold;">@POST</span>
	<span style="color:#555555;font-weight:bold;">@Consumes</span>(<span style="background-color:#fff0f0;">&quot;application/x-www-form-urlencoded&quot;</span>)
	<span style="color:#555555;font-weight:bold;">@Produces</span>(<span style="background-color:#fff0f0;">&quot;application/x-www-form-urlencoded&quot;</span>)
	public MultivaluedMap<span style="color:#333333;">&lt;</span>String,String<span style="color:#333333;">&gt;</span> post(
				MultivaluedMap<span style="color:#333333;">&lt;</span>String, String<span style="color:#333333;">&gt;</span> form) {
		<span style="color:#008800;font-weight:bold;">return</span> form;
	}
}
</pre></div></div>`,2),sy=[ty];function ny(e,t){return v(),b("div",ey,sy)}const oy=q(Z0,[["render",ny]]),ly="/rest/assets/jaxb-2b7e8fab.svg",ry={},ay={class:"slide"},iy=p("div",{class:"heading"},"JAXB",-1),cy=p("div",{class:"content"},[p("p",null," JAXB est une ancienne spécification Java et n'est pas définie par JAX-RS "),p("h3",null,"Il fait correspondre les classes Java à XML"),p("br"),p("img",{src:ly,style:{width:"65%"}}),p("p",null," Cela nous aidera à faire correspondre les entrées et les sorties pour jax-rs ")],-1),dy=[iy,cy];function py(e,t){return v(),b("div",ay,dy)}const uy=q(ry,[["render",py]]),fy={},hy={class:"slide"},yy=E(`<div class="heading">JAXB</div><div class="content"><div class="flex-container"><div style="width:49%;"><h2>Exemple:</h2><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;">    <span style="color:#555555;font-weight:bold;">@XmlRootElement</span>(name<span style="color:#333333;">=</span><span style="background-color:#fff0f0;">&quot;customer&quot;</span>)
    <span style="color:#555555;font-weight:bold;">@XmlAccessorType</span>(XmlAccessType<span style="color:#333333;">.</span>FIELD)
    public <span style="color:#008800;font-weight:bold;">class</span> <span style="color:#BB0066;font-weight:bold;">Customer</span> {
      <span style="color:#555555;font-weight:bold;">@XmlAttribute</span>
      protected <span style="color:#007020;">int</span> <span style="color:#007020;">id</span>;
      
      <span style="color:#555555;font-weight:bold;">@XmlElement</span>
      protected String fullname;
      
      public <span style="color:#007020;">int</span> getId() { <span style="color:#008800;font-weight:bold;">return</span> this<span style="color:#333333;">.</span>id; }
      <span style="color:#333333;">...</span>
    }
    </pre></div></div><div style="width:49%;"><br><p> Si nous devions produire une instance de notre classe Client ayant un identifiant de 42 et un nom de &quot;Kilian Schropp&quot;, le XML produit ressemblerait à ceci </p><h2>Résultat</h2><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;"><span style="color:#007700;">&lt;customer</span> <span style="color:#0000CC;">id=</span><span style="background-color:#fff0f0;">&quot;42&quot;</span><span style="color:#007700;">&gt;</span>
    <span style="color:#007700;">&lt;fullname&gt;</span>Kilian Schropp<span style="color:#007700;">&lt;/fullname&gt;</span>
<span style="color:#007700;">&lt;/customer&gt;</span>
</pre></div></div></div></div>`,2),my=[yy];function gy(e,t){return v(),b("div",hy,my)}const _y=q(fy,[["render",gy]]),vy={},by={class:"slide"},wy=E(`<div class="heading">JAXB</div><div class="content"><p>J&#39;ai déjà annoté la classe Personne et je l&#39;ai convertie en XML</p><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;"><span style="color:#008800;font-weight:bold;">public</span> <span style="color:#008800;font-weight:bold;">static</span> <span style="color:#333399;font-weight:bold;">void</span> <span style="color:#0066BB;font-weight:bold;">main</span><span style="color:#333333;">(</span>String<span style="color:#333333;">[]</span> args<span style="color:#333333;">)</span> <span style="color:#008800;font-weight:bold;">throws</span> JAXBException <span style="color:#333333;">{</span>
    Person p <span style="color:#333333;">=</span> <span style="color:#008800;font-weight:bold;">new</span> Person<span style="color:#333333;">(</span><span style="color:#0000DD;font-weight:bold;">1L</span><span style="color:#333333;">,</span> <span style="background-color:#fff0f0;">&quot;Kilian&quot;</span><span style="color:#333333;">,</span> <span style="background-color:#fff0f0;">&quot;Schropp&quot;</span><span style="color:#333333;">,</span> <span style="color:#0000DD;font-weight:bold;">28</span> <span style="color:#333333;">);</span>

    JAXBContext context <span style="color:#333333;">=</span> JAXBContext<span style="color:#333333;">.</span><span style="color:#0000CC;">newInstance</span><span style="color:#333333;">(</span>Person<span style="color:#333333;">.</span><span style="color:#0000CC;">class</span><span style="color:#333333;">);</span>
    StringWriter writer <span style="color:#333333;">=</span> <span style="color:#008800;font-weight:bold;">new</span> StringWriter<span style="color:#333333;">();</span>
    context<span style="color:#333333;">.</span><span style="color:#0000CC;">createMarshaller</span><span style="color:#333333;">().</span><span style="color:#0000CC;">marshal</span><span style="color:#333333;">(</span>p<span style="color:#333333;">,</span> writer<span style="color:#333333;">);</span>
    String xml <span style="color:#333333;">=</span> writer<span style="color:#333333;">.</span><span style="color:#0000CC;">toString</span><span style="color:#333333;">();</span>
    System<span style="color:#333333;">.</span><span style="color:#0000CC;">out</span><span style="color:#333333;">.</span><span style="color:#0000CC;">println</span><span style="color:#333333;">(</span>xml<span style="color:#333333;">);</span>
<span style="color:#333333;">}</span>
</pre></div><br><h3> Exercice: Pouvez-vous annoter la classe BankAccount et imprimer une instance sur la console ? </h3><br><a href="/exercices/jaxb/jaxb-exercice-1.zip" download="jaxb-exercice-1.zip"><img src="`+kt+'" style="width:8%;">Download zip exercice</a></div>',2),$y=[wy];function Py(e,t){return v(),b("div",by,$y)}const qy=q(vy,[["render",Py]]),xy={},Sy={class:"slide"},Ty=E(`<div class="heading">JAX-RS et JAXB</div><div class="content"><h2>Manipulateurs JAXB JAX-RS</h2><p> La spécification JAX-RS exige que les implémentations prennent automatiquement en charge le marshalling et le unmarshalling des classes annotées avec JAXB </p><div class="flex-container"><div style="width:49%;"><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;"><span style="color:#555555;font-weight:bold;">@GET</span>
<span style="color:#555555;font-weight:bold;">@Path</span><span style="color:#333333;">(</span><span style="background-color:#fff0f0;">&quot;{id}&quot;</span><span style="color:#333333;">)</span>
<span style="color:#555555;font-weight:bold;">@Produces</span><span style="color:#333333;">(</span><span style="background-color:#fff0f0;">&quot;application/xml&quot;</span><span style="color:#333333;">)</span>
<span style="color:#008800;font-weight:bold;">public</span> Person <span style="color:#0066BB;font-weight:bold;">getPerson</span><span style="color:#333333;">(</span><span style="color:#555555;font-weight:bold;">@PathParam</span><span style="color:#333333;">(</span><span style="background-color:#fff0f0;">&quot;id&quot;</span><span style="color:#333333;">)</span> <span style="color:#333399;font-weight:bold;">int</span> id<span style="color:#333333;">)</span> <span style="color:#333333;">{</span>
	Person p <span style="color:#333333;">=</span> <span style="color:#008800;font-weight:bold;">null</span><span style="color:#333333;">;</span>
	<span style="color:#008800;font-weight:bold;">for</span><span style="color:#333333;">(</span>Person pers <span style="color:#333333;">:</span> PersonList<span style="color:#333333;">.</span><span style="color:#0000CC;">persons</span><span style="color:#333333;">)</span> <span style="color:#333333;">{</span>
		<span style="color:#008800;font-weight:bold;">if</span><span style="color:#333333;">(</span>pers<span style="color:#333333;">.</span><span style="color:#0000CC;">getPersonNum</span><span style="color:#333333;">()</span> <span style="color:#333333;">==</span> id<span style="color:#333333;">)</span> <span style="color:#333333;">{</span>
			p <span style="color:#333333;">=</span> pers<span style="color:#333333;">;</span>
			<span style="color:#008800;font-weight:bold;">break</span><span style="color:#333333;">;</span>
		<span style="color:#333333;">}</span>
	<span style="color:#333333;">}</span>
	<span style="color:#008800;font-weight:bold;">return</span> p<span style="color:#333333;">;</span>
<span style="color:#333333;">}</span></pre></div></div><div style="width:49%;"><p> A part l&#39;ajout de @Produces(&quot;application/xml&quot;), nous n&#39;avons plus rien à faire. </p><h3> Il transforme automatiquement notre personne en un fichier XML </h3><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;"><span style="color:#557799;">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;</span>
<span style="color:#007700;">&lt;person</span> <span style="color:#0000CC;">personNum=</span><span style="background-color:#fff0f0;">&quot;1&quot;</span><span style="color:#007700;">&gt;</span>
	<span style="color:#007700;">&lt;firstName&gt;</span>Kilian<span style="color:#007700;">&lt;/firstName&gt;</span>
	<span style="color:#007700;">&lt;lastName&gt;</span>Schropp<span style="color:#007700;">&lt;/lastName&gt;</span>
	<span style="color:#007700;">&lt;age&gt;</span>28<span style="color:#007700;">&lt;/age&gt;</span>
<span style="color:#007700;">&lt;/person&gt;</span></pre></div></div></div></div>`,2),Cy=[Ty];function Ey(e,t){return v(),b("div",Sy,Cy)}const ky=q(xy,[["render",Ey]]),Ay={},Ry={class:"slide"},Dy=p("div",{class:"heading"},"JAXB",-1),jy=p("div",{class:"content"},[p("p",null,"J'ai mis en place une fonctionnalité CRUD pour la personne."),p("h3",null,` Exercice: Pouvez-vous créer une BankAccountResource et implémenter les méthodes "getBankAccountById", "getBankAccountList" et "addBankAccount" comme je l'ai fait pour PersonResource ? `),p("br"),p("h3",null," Bonus:Pouvez-vous ajouter les méthodes POST et PUT comme je l'ai fait pour PersonResource dans la nouvelle BankAccountResource ? "),p("a",{href:"/exercices/rest/jaxrs-jaxb-exercice-1.zip",download:"jaxrs-jaxb-exercice-1.zip"},[p("img",{src:kt,style:{width:"8%"}}),Gt("Download zip exercice")])],-1),By=[Dy,jy];function Ly(e,t){return v(),b("div",Ry,By)}const Iy=q(Ay,[["render",Ly]]),Oy={},My={class:"slide"},Fy=E(`<div class="heading">JAXB et JSON</div><div class="content"><p> JAXB est suffisamment souple pour prendre en charge des formats autres que XML </p><p> Comme nous avons annoté notre classe avec JAXB, nous pouvons déjà transformer les classes en JSON. Tout ce que nous avons à faire est de l&#39;ajouter à l&#39;annotation @Produces </p><div class="flex-container"><div style="width:49%;"><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;">    <span style="color:#555555;font-weight:bold;">@GET</span>
    <span style="color:#555555;font-weight:bold;">@Produces</span><span style="color:#333333;">({</span><span style="background-color:#fff0f0;">&quot;application/xml&quot;</span><span style="color:#333333;">,</span> <span style="background-color:#fff0f0;">&quot;application/json&quot;</span><span style="color:#333333;">})</span>
    <span style="color:#008800;font-weight:bold;">public</span> List<span style="color:#333333;">&lt;</span>Person<span style="color:#333333;">&gt;</span> <span style="color:#0066BB;font-weight:bold;">getPersonList</span><span style="color:#333333;">()</span> <span style="color:#333333;">{</span>
      <span style="color:#008800;font-weight:bold;">return</span> PersonList<span style="color:#333333;">.</span><span style="color:#0000CC;">persons</span><span style="color:#333333;">;</span>
    <span style="color:#333333;">}</span>
    </pre></div></div><div style="width:49%;"><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;">{
  <span style="color:#007700;">&quot;personNum&quot;</span>: <span style="color:#0000DD;font-weight:bold;">1</span>,
  <span style="color:#007700;">&quot;firstName&quot;</span>: <span style="background-color:#fff0f0;">&quot;Kilian&quot;</span>,
  <span style="color:#007700;">&quot;lastName&quot;</span>: <span style="background-color:#fff0f0;">&quot;Schropp&quot;</span>,
  <span style="color:#007700;">&quot;age&quot;</span>: <span style="color:#0000DD;font-weight:bold;">28</span>
}</pre></div></div></div></div>`,2),Hy=[Fy];function Ny(e,t){return v(),b("div",My,Hy)}const Jy=q(Oy,[["render",Ny]]),zy={class:"slide"},Uy=p("div",{class:"heading"},"JAXB et JSON",-1),Xy={class:"content"},Wy=p("p",null,` Pouvez-vous ajouter l'annotation @Produces({"application/xml", "application/json"}) à l'exercice précédent et tester si cela fonctionne ? `,-1),Ky={__name:"SlidePresentation81",setup(e){return(t,s)=>(v(),b("div",zy,[Uy,p("div",Xy,[Wy,h(qe,{link:"http://localhost:8080/persons"})])]))}},Vy={},Gy={class:"slide"},Qy=E(`<div class="heading">JAXB et JSON</div><div class="content"><p> Vous vous souvenez de @QueryParam et de la façon dont il permet de réduire la taille des résultats ? </p><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;"><span style="color:#555555;font-weight:bold;">@GET</span>
<span style="color:#555555;font-weight:bold;">@Path</span><span style="color:#333333;">(</span><span style="background-color:#fff0f0;">&quot;{id}&quot;</span><span style="color:#333333;">)</span>
<span style="color:#008800;font-weight:bold;">public</span> String <span style="color:#0066BB;font-weight:bold;">getPersonList</span><span style="color:#333333;">(</span><span style="color:#555555;font-weight:bold;">@QueryParam</span><span style="color:#333333;">(</span><span style="background-color:#fff0f0;">&quot;start&quot;</span><span style="color:#333333;">)</span> <span style="color:#333399;font-weight:bold;">int</span> start<span style="color:#333333;">,</span>
<span style="color:#555555;font-weight:bold;">@QueryParam</span><span style="color:#333333;">(</span><span style="background-color:#fff0f0;">&quot;size&quot;</span><span style="color:#333333;">)</span> <span style="color:#333399;font-weight:bold;">int</span> size<span style="color:#333333;">))</span> <span style="color:#333333;">{</span>
    <span style="color:#333333;">...</span>
<span style="color:#333333;">}</span></pre></div><br><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;">            GET <span style="color:#333333;">/</span>persons<span style="color:#333333;">?</span>start<span style="color:#333333;">=</span><span style="color:#0000DD;font-weight:bold;">0</span><span style="color:#333333;">&amp;</span>size<span style="color:#333333;">=</span><span style="color:#0000DD;font-weight:bold;">10</span></pre></div></div>`,2),Yy=[Qy];function Zy(e,t){return v(),b("div",Gy,Yy)}const em=q(Vy,[["render",Zy]]),tm={class:"slide"},sm=p("div",{class:"heading"},"JAXB et JSON",-1),nm={class:"content"},om=p("p",null," Pouvez-vous modifier la méthode getPersonList de manière à ce que les paramètres de la requête soient utilisés pour réduire la liste des résultats à seulement 2? ",-1),lm={__name:"SlidePresentation83",setup(e){return(t,s)=>(v(),b("div",tm,[sm,p("div",nm,[om,h(qe,{link:"http://localhost:8080/persons?start=0&size=2"})])]))}},rm={},am={class:"slide"},im=p("div",{class:"heading"},"JAXB et JSON",-1),cm=p("div",{class:"content"},[p("p",null," Exercice final: Pouvez-vous créer une interface fancy pour les points de terminaison PersonResource et BankAccountResource ? Je souhaite disposer de capacités CRUD de base et d'un affichage sous forme de tableau pour les personnes et les comptes bancaires. ")],-1),dm=[im,cm];function pm(e,t){return v(),b("div",am,dm)}const um=q(rm,[["render",pm]]),fm={class:"container"},hm=p("img",{src:Da,class:"logo"},null,-1),ym={id:"presentation-area"},mm={class:"presentation"},gm=E('<section class="counter"><input type="number" id="index" name="index" min="1" max="83" value="1" style="width:40%;"> of 83 </section><section class="navigation"><button id="full-screen" class="btn-screen show"><span><b>⛶</b></span></button><button id="small-screen" class="btn-screen"><span><b>✖</b></span></button><button id="left-btn" class="btn"><span>❮</span></button><button id="right-btn" class="btn"><span>❯</span></button></section>',2),_m=p("footer",null,[p("p",null,"Created by Kilian Schropp. ©C2LR 2023")],-1),vm={__name:"App",setup(e){return(t,s)=>(v(),b("body",null,[p("div",fm,[hm,p("div",ym,[p("section",mm,[h(Ma),h(Wa),h(ti),h(ci),h(mi),h(qi),h(ki),h(Li),h(Ni),h(Ki),h(ec),h(Lc),h(zc),h(Qc),h(ld),h(fd),h(bd),h(Td),h(Rd),h(Id),h(Jd),h(Vd),h(tp),h(rp),h(fp),h(_p),h(xp),h(Ap),h(Op),h(Up),h(Yp),h(l3),h(u3),h(v3),h(S3),h(D3),h(F3),h(W3),h(eu),h(au),h(hu),h(wu),h(Tu),h(Du),h(Mu),h(Uu),h(Gu),h(tf),h(rf),h(hf),h(bf),h(Sf),h(Rf),h(Of),h(Uf),h(Yf),h(lh),h(uh),h(vh),h(xh),h(Ah),h(Oh),h(Uh),h(Qh),h(n0),h(d0),h(m0),h(w0),h(T0),h(j0),h(F0),h(X0),h(Y0),h(oy),h(uy),h(_y),h(qy),h(ky),h(Iy),h(Jy),h(Ky),h(em),h(lm),h(um)]),gm])]),_m]))}};Aa(vm).mount("#app");let cn=document.querySelectorAll(".slide"),de=document.querySelector(".slide.show");var Zt=document.querySelector("#index"),Fs=document.querySelector("#left-btn"),Hs=document.querySelector("#right-btn");let Xo=document.querySelector("#presentation-area");var dn=document.querySelector("#full-screen"),pn=document.querySelector("#small-screen"),hs=1,un=0;ys();function ys(){qm(),un=cn.length,Tm(),bm(),wm()}Fs.addEventListener("click",$m);Hs.addEventListener("click",Pm);Zt.addEventListener("change",Cm);dn.addEventListener("click",xm);pn.addEventListener("click",Sm);function bm(){hs==1?Fs.classList.remove("show"):Fs.classList.add("show")}function wm(){hs===un?Hs.classList.remove("show"):Hs.classList.add("show")}function $m(){var e=de;de=de.previousElementSibling,e.classList.remove("show"),de.classList.add("show"),ys(),fn(de)}function Pm(){var e=de;de=de.nextElementSibling,e.classList.remove("show"),de.classList.add("show"),ys(),fn(de)}function qm(){let e=0;cn.forEach(t=>{e++,t.classList.contains("show")&&(hs=e)})}function xm(){Xo.classList.add("full-screen"),dn.classList.remove("show"),pn.classList.add("show")}function Sm(){Xo.classList.remove("full-screen"),dn.classList.add("show"),pn.classList.remove("show")}function Tm(){Zt.value=hs,Zt.innerText=` of ${un}`}function Cm(){var e=de;de=cn[Zt.value-1],e.classList.remove("show"),de.classList.add("show"),ys(),fn(de)}function fn(e){const t=e.getElementsByTagName("iframe")[0];if(t!=null){const s=t.parentElement;console.log(t.src),s!==void 0&&s.hasAttribute("data-link")&&t.src.includes("lightswitch")&&t.setAttribute("src",s.dataset.link)}}
